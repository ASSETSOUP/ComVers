{
  "settings": {
    "currentPage": "page3.html",
    "theme": {
      "name": "progressm5",
      "title": "ProgressM5",
      "styling": {
        "primaryColor": "#060606",
        "secondaryColor": "#0844ff",
        "successColor": "#2e96ff",
        "infoColor": "#ffffff",
        "warningColor": "#DCB300",
        "dangerColor": "#DC5400",
        "mainFont": "Rethink Sans",
        "display1Font": "Rethink Sans",
        "display1Size": 7.75,
        "display2Font": "Oswald",
        "display2Size": 3,
        "display5Font": "Rethink Sans",
        "display5Size": 2.25,
        "display7Font": "Oswald",
        "display7Size": 1.75,
        "display4Font": "Rethink Sans",
        "display4Size": 1.125,
        "isRoundedImages": true,
        "isRoundedButtons": true,
        "isLargeButtons": false,
        "isGhostButtonBorder": true,
        "underlinedLinks": true,
        "isAnimatedOnScroll": true,
        "isScrollToTopButton": true
      },
      "titlePreset": "Virtual Assistant",
      "nameSelectPreset": "virtual-assistant",
      "presetSourceTheme": "progressm5",
      "additionalSetColors": [
        "#7af677",
        "#080813",
        "#f34e9a",
        "#615565",
        "#08380e",
        "#81f790",
        "#e704ed"
      ]
    },
    "path": "@PROJECT_PATH@",
    "name": "SYNA AI SPORTS GAMES",
    "versionFirst": "5.9.25",
    "siteFonts": [
      {
        "css": "'Rethink Sans', sans-serif",
        "name": "Rethink Sans",
        "url": "https://fonts.googleapis.com/css?family=Rethink+Sans:400,500,600,700,800,400i,500i,600i,700i,800i"
      },
      {
        "css": "'Oswald', sans-serif",
        "name": "Oswald",
        "url": "https://fonts.googleapis.com/css?family=Oswald:200,300,400,500,600,700"
      }
    ],
    "imageResize": false,
    "uniqCompNum": 55,
    "versionPublish": "5.9.25",
    "screenshot": "screenshot.png",
    "mcSmartCart": {
      "currency": "USD"
    },
    "favicon": false,
    "mbrsiteDomain": "synaaisportsroom",
    "usedWebp": false,
    "robotsSwitcher": false,
    "sitemapSwitcher": false,
    "sitemapSwitcherAuto": false,
    "siteUrl": false,
    "cookiesAlert": false,
    "gdpr": false,
    "chatbutton": {}
  },
  "pages": {
    "index.html": {
      "settings": {
        "main": true,
        "title": "Home",
        "meta_descr": "",
        "header_custom": "",
        "footer_custom": "",
        "html_before": ""
      },
      "components": [
        {
          "alias": false,
          "_styles": {
            ".navbar-dropdown": {
              "& when not (@transparent)": {
                "background-color": "@menuBgColor !important"
              },
              "& when (@transparent)": {
                "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
              },
              "padding": "0",
              "& when (@sticky)": {
                "position": "absolute !important"
              }
            },
            "background-color": "transparent",
            ".navbar.navbar-expand-lg .dropdown": {
              ".dropdown-menu": {
                "& when not (@transparent)": {
                  "background-color": "@menuBgColor !important"
                },
                "& when (@transparent)": {
                  "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
                },
                ".dropdown-submenu": {
                  "margin": "0",
                  "left": "100%"
                },
                "background": "@menuBgColor"
              }
            },
            ".menu_box": {
              "flex-wrap": "nowrap",
              "@media (max-width: 991px)": {
                ".navbar.opened, .navbar-collapse": {
                  "background-color": "@menuBgColor !important",
                  "transition": "all 0s ease 0s"
                },
                "flex-direction": "column",
                "align-items": "flex-start"
              }
            },
            "& when not (@sticky)": {
              ".navbar-dropdown": {
                "position": "relative !important"
              }
            },
            "& when (@sticky)": {
              "z-index": "1000",
              "width": "100%",
              "nav.navbar": {
                "position": "fixed",
                "padding-top": "1rem",
                "padding-bottom": "1rem"
              }
            },
            ".icons-menu-main": {
              "display": "flex",
              "flex-wrap": "wrap",
              "min-width": "150px",
              "margin-left": "24px",
              "@media (max-width: 991px)": {
                "min-width": "auto",
                "max-width": "100%",
                "margin": "1rem 0 1rem 1rem"
              }
            },
            ".mbr-section-btn-main": {
              "@media (max-width: 991px)": {
                "margin-top": "1rem"
              },
              ".btn": {
                "margin": "8px",
                "min-width": "120px",
                "white-space": "nowrap"
              }
            },
            ".btn": {
              "min-height": "auto",
              "box-shadow": "none",
              "margin-top": "0",
              "&:hover": {
                "box-shadow": "none"
              }
            },
            ".nav-item": {
              "margin": "4px 0",
              "@media (min-width: 992px)": {
                "margin": "4px 40px 4px 0"
              },
              "& when (@showLogo), (@showBrand)": {
                "@media (min-width: 992px)": {
                  "margin": "4px 0"
                }
              },
              "@media (max-width: 991px)": {
                "margin": "0 !important"
              },
              ".nav-link": {
                "display": "flex",
                "justify-content": "center",
                "padding": "12px",
                "transition": "all 0.3s ease-out",
                "border-radius": "4px !important",
                "border": "1px solid transparent",
                "position": "relative",
                "opacity": "1",
                "@media (max-width: 992px)": {
                  "justify-content": "flex-start"
                },
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "bottom": "-10px",
                  "width": "0",
                  "height": "2px",
                  "background-color": "@itemsActive",
                  "transition": "all 0.3s ease-out"
                },
                "&:hover, &:focus": {
                  "background-color": "@itemsBg",
                  "color": "@itemsActive !important",
                  "&::before": {
                    "width": "80%"
                  }
                }
              }
            },
            ".dropdown-menu": {
              "border-radius": "0",
              "box-shadow": "none",
              "text-align": "left",
              "@media (min-width: 992px)": {
                "padding": "18px 34px 22px",
                "min-width": "250px",
                "top": "auto !important",
                "left": "-40px !important",
                "&.dropdown-submenu": {
                  "left": "215px !important",
                  "top": "-45% !important"
                }
              }
            },
            "@media (max-width: 991px)": {
              ".dropdown-menu .dropdown-toggle[data-toggle=\"dropdown-submenu\"]::after, .link.dropdown-toggle::after": {
                "display": "inline-block",
                "width": "7px",
                "height": "7px",
                "margin-left": ".5rem",
                "margin-bottom": "2px",
                "content": "\"\"",
                "border": "2px solid",
                "border-left": "none",
                "border-top": "none",
                "transform": "rotate(-45deg)",
                "right": "15px",
                "position": "absolute",
                "margin-top": "-2px"
              },
              ".show.dropdown-toggle[aria-expanded=\"true\"]::after": {
                "transform": "rotate(45deg)",
                "margin-top": "-4px"
              },
              ".offcanvas_box": {
                "display": "none"
              }
            },
            ".dropdown-item": {
              "border": "none",
              "font-weight": "300 !important"
            },
            ".nav-dropdown .link": {
              "font-weight": "400 !important",
              "padding": "0 !important",
              "margin": "0 !important"
            },
            ".nav-dropdown .link.dropdown-toggle::after": {
              "margin-left": "0.5rem",
              "margin-top": "0"
            },
            ".container": {
              "display": "flex",
              "margin": "auto"
            },
            ".iconfont-wrapper": {
              "color": "@iconsColor",
              "font-size": "26px",
              "margin-right": "10px",
              "margin-bottom": "5px",
              "&:last-child": {
                "margin-right": "0"
              },
              "transition": "all 0.3s ease-in-out",
              "&:hover": {
                ".mbr-iconfont": {
                  "opacity": ".7"
                }
              }
            },
            ".navbar-nav": {
              "@media (min-width: 992px)": {
                "margin": "0"
              }
            },
            ".dropdown-menu, .navbar.opened": {
              "background-color": "@transparent !important"
            },
            ".nav-item:focus, .nav-link:focus": {
              "outline": "none"
            },
            ".dropdown .dropdown-menu .dropdown-item": {
              "width": "auto",
              "transition": "all 0.25s ease-in-out",
              "&::after": {
                "right": "0.5rem"
              },
              ".mbr-iconfont": {
                "margin-right": "0.5rem",
                "vertical-align": "sub",
                "&:before": {
                  "display": "inline-block",
                  "transform": "scale(1, 1)",
                  "transition": "all 0.25s ease-in-out"
                }
              }
            },
            ".collapsed": {
              ".dropdown-menu .dropdown-item:before": {
                "display": "none"
              },
              ".dropdown .dropdown-menu .dropdown-item": {
                "padding": "0.235em 1.5em 0.235em 1.5em !important",
                "transition": "none",
                "margin": "0 !important"
              }
            },
            ".navbar": {
              "min-height": "70px",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "border-bottom-width": "0",
              "@media (max-width: 992px)": {
                "min-height": "30px",
                "max-height": "none"
              },
              "&:not(.navbar-short)": {},
              "&.opened": {
                "transition": "all 0.3s"
              },
              ".dropdown-item": {
                "padding": "0",
                "margin": "8px 0"
              },
              ".navbar-logo img": {
                "max-width": "62px",
                "min-height": "62px",
                "object-fit": "contain",
                "border-radius": "100% !important"
              },
              ".navbar-collapse": {
                "justify-content": "center",
                "& when (@showLogo), (@showBrand)": {
                  "justify-content": "flex-end"
                },
                "z-index": "1"
              },
              "&.collapsed": {
                "justify-content": "center",
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto"
                  }
                },
                "ul.navbar-nav": {
                  "li": {
                    "margin": "auto"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0.25rem 1.5rem",
                  "text-align": "left"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "@media (max-width: 991px)": {
                ".nav-item": {
                  "padding": ".5rem 0"
                },
                ".navbar-collapse": {
                  "padding": "34px 0",
                  "border-radius": "16px",
                  "width": "100%"
                },
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  "padding": "6px 0 6px 15px",
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto",
                    "margin-top": "-0.4rem"
                  }
                },
                ".navbar-logo": {
                  "img": {
                    "height": "3rem !important"
                  }
                },
                "ul.navbar-nav": {
                  "overflow": "hidden",
                  "li": {
                    "margin": "0"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0 !important",
                  "margin": "0",
                  "margin-top": "8px",
                  "text-align": "left"
                },
                ".navbar-brand": {
                  "flex-shrink": "initial",
                  "flex-basis": "auto",
                  "word-break": "break-word",
                  "padding-right": "0",
                  "width": "100%",
                  "justify-content": "space-between"
                },
                ".navbar-toggler": {
                  "flex-basis": "auto"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "&.navbar-short": {
                "min-height": "60px",
                ".navbar-logo": {
                  "img": {
                    "height": "2.5rem !important"
                  }
                },
                ".navbar-brand": {
                  "min-height": "60px",
                  "padding": "0"
                }
              }
            },
            ".navbar-brand": {
              "min-height": "70px",
              "flex-shrink": "0",
              "align-items": "center",
              "margin-right": "0",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "word-break": "break-word",
              "z-index": "1",
              ".navbar-caption": {
                "line-height": "inherit !important",
                "font-weight": "400"
              },
              ".navbar-logo a": {
                "outline": "none"
              }
            },
            ".dropdown-item.active, .dropdown-item:active": {
              "background-color": "transparent"
            },
            ".navbar-expand-lg .navbar-nav .nav-link": {
              "padding": "6px 16px !important"
            },
            ".nav-dropdown .link.dropdown-toggle": {
              "margin-right": "1.667em",
              "&[aria-expanded=\"true\"]": {
                "margin-right": "0",
                "padding": "0.667em 1.667em"
              }
            },
            ".navbar .dropdown.open > .dropdown-menu": {
              "display": "block"
            },
            "ul.navbar-nav": {
              "flex-wrap": "wrap",
              "padding": "0"
            },
            ".navbar-buttons": {
              "text-align": "center",
              "min-width": "170px"
            },
            "button.navbar-toggler": {
              "outline": "none",
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "cursor": "pointer",
              "transition": "all 0.2s",
              "position": "relative",
              "align-self": "center",
              "color": "@menuBgColor",
              "background": "@hamburger",
              ".hamburger span": {
                "position": "absolute",
                "right": "10px",
                "margin-top": "14px",
                "width": "26px",
                "height": "2px",
                "border-right": "5px",
                "background-color": "@hamburgerColor",
                "&:nth-child(1)": {
                  "top": "0",
                  "transition": "all 0.2s"
                },
                "&:nth-child(2)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(3)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(4)": {
                  "top": "16px",
                  "transition": "all 0.2s"
                }
              }
            },
            "nav.opened .hamburger span": {
              "&:nth-child(1)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              },
              "&:nth-child(2)": {
                "transform": "rotate(45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(3)": {
                "transform": "rotate(-45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(4)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              }
            },
            "a.nav-link": {
              "display": "flex",
              "align-items": "center",
              "justify-content": "flex-start"
            },
            ".icons-menu": {
              "flex-wrap": "nowrap",
              "display": "flex",
              "justify-content": "center",
              "padding": "0",
              "text-align": "center",
              "margin-bottom": "35px"
            },
            "@media screen and (~'-ms-high-contrast: active'), (~'-ms-high-contrast: none')": {
              ".navbar": {
                "height": "70px",
                "&.opened": {
                  "height": "auto"
                }
              },
              ".nav-item .nav-link:hover::before": {
                "width": "175%",
                "max-width": "calc(100% ~\"+\" 2rem)",
                "left": "-1rem"
              }
            },
            ".navbar-dropdown .navbar-logo": {
              "margin-right": "10px"
            },
            ".navbar-caption:hover": {
              "color": "@primaryColor"
            },
            ".dropdown-menu.dropdown-submenu": {
              "@media (min-width: 992px)": {
                "left": "175px !important",
                "top": "-45% !important"
              }
            },
            ".text_widget": {
              "margin-bottom": "32px",
              "a": {
                "transition": "all 0.3s ease-out",
                "&:hover, &:focus": {
                  "opacity": ".8"
                }
              }
            },
            "@media (min-width: 992px)": {
              ".navbar-nav.nav-dropdown": {
                "display": "-webkit-flex",
                "width": "100%",
                "justify-content": "flex-start",
                "min-width": "200px",
                "padding-left": "48px"
              }
            },
            ".navbar-caption": {
              "color": "#ffffff"
            },
            ".mbr-section-subtitle, .text_widget, .mbr-section-btn": {
              "text-align": "center"
            },
            "a[class*=\"text-\"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption):hover": {
              "background-image": "none"
            }
          },
          "_name": "menu01",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"menu menu01 progressm5\" group=\"Menu\" plugins=\"DropDown, TouchSwipe\" always-top global once=\"menu\" not-draggable position-absolute>\n\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" name=\"fullWidth\" title=\"Full Width\" checked>\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Logo\" name=\"showLogo\">\n        <input type=\"checkbox\" title=\"Brand Name\" name=\"showBrand\">\n        <input type=\"checkbox\" title=\"Menu Items\" name=\"showItems\" condition=\"false\">\n        <input type=\"color\" title=\"Items Active Color\" name=\"itemsActive\" value=\"#078efb\" condition=\"showItems\">\n        <input type=\"color\" title=\"Items Active BG\" name=\"itemsBg\" value=\"#252525\" condition=\"showItems\">\n        <input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\" checked>\n        <input type=\"checkbox\" title=\"Icons\" name=\"showIcons\" checked>\n        <input type=\"range\" title=\"Amount\" name=\"iconsAmount\" min=\"0\" max=\"2\" step=\"1\" value=\"2\" condition=\"showIcons\">\n        <input type=\"color\" title=\"Icons Color\" name=\"iconsColor\" value=\"#0844ff\" condition=\"showIcons\">\n        <header>Styles</header>\n        <input type=\"checkbox\" title=\"Sticky\" name=\"sticky\">\n        <input type=\"checkbox\" title=\"Collapsed\" name=\"collapsed\" condition=\"false\">\n        <input type=\"checkbox\" title=\"Transparent\" name=\"transparent\">\n        <input type=\"range\" title=\"Opacity\" name=\"opacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"1\" condition=\"transparent\">\n        <input type=\"color\" title=\"Color Menu\" name=\"menuBgColor\" value=\"#060606\">\n        <input type=\"color\" title=\"Hamburger\" name=\"hamburgerColor\" value=\"#078efb\">\n        <input type=\"color\" title=\"Hamburger Container\" name=\"hamburger\" value=\"#252525\">\n    </mbr-parameters>\n\n    <nav class=\"navbar navbar-dropdown\" mbr-class=\"{'navbar-fixed-top':sticky,\n                     'navbar-expand-lg':!collapsed,\n                     'collapsed':collapsed}\">\n        <div class=\"menu_box\" mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n            <div class=\"navbar-brand d-flex\">\n                <span mbr-if=\"showLogo\" class=\"navbar-logo\">\n                    <a href=\"page4.html#custom-html-n\">\n                        <img src=\"@PROJECT_PATH@/assets/images/flux_dev_a_vibrant_banner_featuring_a_stunning_anime_girl_syna-124x82.jpg\" alt=\"Mobirise\" mbr-style=\"{'height': logoSize + 'rem'}\">\n                    </a>\n                </span>\n                <span mbr-if=\"showBrand\" mbr-buttons mbr-theme-style=\"display-7\" class=\"navbar-caption-wrap\" data-toolbar=\"-mbrBtnMove,-mbrBtnAdd,-mbrBtnRemove\"><a class=\"navbar-caption\" data-app-selector=\".navbar-caption\" href=\"@THEME_PATH@/components/index.html\" data-app-placeholder=\"Type Text\">VA</a></span>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <div class=\"hamburger\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul mbr-menu class=\"navbar-nav nav-dropdown\" mbr-theme-style=\"display-4\" mbr-class=\"{'nav-right': !showButtons,'navbar-nav-top-padding': isPublish && !showBrand && !showLogo}\"><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"index.html#header02-1\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">SYNTHIA CHAT</a>\n                    </li>\n                    <li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page4.html#custom-html-n\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">THE GREEK&nbsp;</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page1.html#custom-html-2\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Prediction Asst</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page6.html#custom-html-10\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Under 21 FunBet</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page9.html#custom-html-1h\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Download/Subscribe</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"RoadmapWhitepaper.html#custom-html-12\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Whitepaper</a></li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page3.html#list02-b\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Laws</a>\n                    </li></ul>\n                <div mbr-buttons mbr-theme-style=\"display-4\" class=\"mbr-section-btn-main\" mbr-if=\"showButtons\" role=\"tablist\"><a class=\"btn btn-success-outline\" href=\"https://mobiri.se\" data-app-placeholder=\"Type Text\">\n                        Get started\n                    </a></div>\n                <div class=\"icons-menu-main\" mbr-if=\"showIcons\">\n                    <a class=\"iconfont-wrapper\" href=\"https://x.com/SYNA_AI_Sports\" target=\"_blank\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-macos socicon\"></span>\n                    </a>\n                    <a class=\"iconfont-wrapper\" href=\"https://mobiri.se\" target=\"_blank\" mbr-if=\"iconsAmount > 1\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-telegram socicon\"></span>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </nav>\n</section>",
          "_JSplaceholders": [],
          "_PHPplaceholders": [],
          "_anchor": "menu01-q",
          "_isUserblock": true,
          "_cid": "uFxNausSY5",
          "_protectedParams": [],
          "_global": true,
          "_once": "menu",
          "_params": {}
        },
        {
          "alias": false,
          "_styles": {
            "& when not (@fullScreen)": {
              "padding-top": "(@paddingTop * 1rem)",
              "padding-bottom": "(@paddingBottom * 1rem)"
            },
            "& when (@bg-type = 'color')": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = 'image')": {
              "background-image": "url(@bg-value)"
            },
            ".mbr-fallback-image.disabled": {
              "display": "none"
            },
            ".mbr-fallback-image": {
              "display": "block",
              "background-size": "cover",
              "background-position": "center center",
              "width": "100%",
              "height": "100%",
              "position": "absolute",
              "top": "0",
              "& when (@bg-type = 'video')": {
                "background-image": "url(@fallBackImage)"
              }
            },
            ".content-wrapper": {
              ".mbr-section-title": {
                "margin-bottom": "10px"
              },
              ".desc-wrapper": {
                ".mbr-desc": {
                  "display": "inline-block",
                  "width": "50%",
                  "margin-bottom": "10px",
                  "@media (max-width: 992px)": {
                    "width": "100%"
                  }
                }
              },
              ".text-wrapper": {
                "margin-top": "100px",
                "@media (max-width: 992px)": {
                  "margin-bottom": "48px"
                },
                ".mbr-text": {
                  "display": "inline-block",
                  "width": "50%",
                  "margin-bottom": "36px",
                  "background": "linear-gradient(90deg, @grad, lighten(@grad, 10%) 65%, lighten(@grad, 20%))",
                  "-webkit-background-clip": "text",
                  "-webkit-text-fill-color": "transparent",
                  "@media (max-width: 992px)": {
                    "width": "100%"
                  }
                }
              }
            },
            ".mbr-section-title": {
              "color": "#ffffff"
            },
            ".mbr-desc, .desc-wrapper": {
              "color": "#000000",
              "text-align": "center"
            },
            ".mbr-text, .text-wrapper": {
              "color": "#ab04ed",
              "text-align": "center"
            },
            ".mbr-section-title, .mbr-section-btn": {
              "text-align": "center",
              "color": "#acb7ff"
            },
            ".mbr-desc, .desc-wrapper ": {
              "color": "#f34e9a"
            }
          },
          "_name": "header02",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"header02 progressm5\" group=\"Header\" data-bg-video=\"{{bg.type == 'video' && bg.value.url}}\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n\t<mbr-parameters>\n\t\t<header>Size</header>\n\t\t<input type=\"checkbox\" title=\"Full Screen\" name=\"fullScreen\" checked>\n\t\t<input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\" checked>\n\t\t<input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"12\" step=\"1\" value=\"5\" condition=\"fullScreen == false\">\n\t\t<input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"12\" step=\"1\" value=\"5\" condition=\"fullScreen == false\">\n\t\t<header>Show/Hide</header>\n\t\t<input type=\"checkbox\" title=\"Title\" name=\"showTitle\" checked>\n\t\t<input type=\"checkbox\" title=\"Description\" name=\"showDesc\" checked>\n\t\t<input type=\"checkbox\" title=\"Text\" name=\"showText\">\n\t\t<input type=\"color\" title=\"Gradient Color\" value=\"#ab04ed\" name=\"grad\" condition=\"showText\" selected>\n\t\t<input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\" checked>\n\t\t<header>Background</header>\n\t\t<fieldset type=\"background\" name=\"bg\" parallax>\n\t\t\t<input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/leonardo-phoenix-10-create-logo-using-a-pretty-platinum-blonde-2were1.jpg\" selected>\n\t\t\t<input type=\"color\" title=\"Color\" value=\"#060606\">\n\t\t\t<input type=\"video\" title=\"Video\" value=\"https://vimeo.com/428046504\">\n\t\t</fieldset>\n\t\t<header condition=\"bg.type === 'video'\">Fallback Image</header>\n\t\t<input type=\"image\" title=\"Fallback Image\" value=\"@PROJECT_PATH@/assets/images/background2.jpg\" name=\"fallBackImage\" condition=\"bg.type === 'video'\">\n\t\t<input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\" checked>\n\t\t<input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#615565\" condition=\"overlay && bg.type !== 'color'\">\n\t\t<input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0\" condition=\"overlay && bg.type !== 'color'\">\n\t</mbr-parameters>\n\n\t<div class=\"mbr-fallback-image disabled\" mbr-if=\"bg.type == 'video'\"></div>\n\t<div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type !== 'color'\" opacity=\"{{overlayOpacity}}\" bg-color=\"{{overlayColor}}\"></div>\n\n\t<div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12\">\n\t\t\t\t<div class=\"content-wrapper\">\n\t\t\t\t\t<h1 class=\"mbr-section-title mbr-fonts-style\" data-app-selector=\".mbr-section-title, .mbr-section-btn\" mbr-theme-style=\"display-1\" mbr-if=\"showTitle\"><b>&nbsp; &nbsp; &nbsp; Sports AI Predictions&nbsp;&nbsp;</b></h1>\n\t\t\t\t\t<div class=\"desc-wrapper\">\n\t\t\t\t\t\t<p class=\"mbr-desc mbr-fonts-style\" mbr-theme-style=\"display-2\" mbr-if=\"showDesc\" data-app-selector=\".mbr-desc, .desc-wrapper \"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;And interactive experience that brings&nbsp; &nbsp; &nbsp;your games to life.</b></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"text-wrapper\">\n\t\t\t\t\t\t<p class=\"mbr-text mbr-fonts-style\" mbr-theme-style=\"display-2\" mbr-if=\"showText\" data-app-selector=\".mbr-text, .text-wrapper\"><b>One stop for the sports betting&nbsp; &nbsp;fan that enjoys a little&nbsp; &nbsp; competition between&nbsp;friends.&nbsp; &nbsp; &nbsp;</b></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div mbr-buttons mbr-theme-style=\"display-4\" class=\"mbr-section-btn\" mbr-if=\"showButtons\" data-toolbar=\"-mbrBtnMove\"><a class=\"btn btn-secondary\" href=\"page1.html#custom-html-2\" data-app-placeholder=\"Type Text\">BUY SYNA<br></a>\n\t\t\t\t\t\t<a class=\"btn btn-secondary\" href=\"page3.html#list02-b\" data-app-placeholder=\"Type Text\">Laws in Your State</a></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>",
          "_cid": "ufFEj7Rmda",
          "_anchor": "header02-1",
          "_PHPplaceholders": [],
          "_JSplaceholders": [],
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        },
        {
          "alias": false,
          "_styles": {
            "padding-top": "(@paddingTop * 1rem)",
            "padding-bottom": "(@paddingBottom * 1rem)",
            "@min-height": "90px",
            "@min-height-small": "@min-height / 2",
            "& when (@bg-type = \"color\")": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = \"image\")": {
              "background-image": "url(@bg-value)",
              "& when (@overlay)": {
                ".mbr-overlay": {
                  "background": "@overlayColor",
                  "opacity": "@overlayOpacity"
                }
              }
            },
            ".item:focus, span:focus": {
              "outline": "none"
            },
            ".container-fluid": {
              "padding-left": "0",
              "padding-right": "0",
              "overflow": "hidden"
            },
            ".content-head": {
              "max-width": "800px"
            },
            ".item": {
              "color": "@contentColor",
              "min-height": "@min-height",
              "@media (max-width: 768px)": {
                "min-height": "@min-height-small"
              }
            },
            ".loop-container": {
              "padding-top": "10px"
            }
          },
          "_name": "features11",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"features11\" group=\"Gallery\" mbr-class=\"{'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"10\" step=\"1\" value=\"0\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"10\" step=\"1\" value=\"0\">\n        <header>Animated Text Settings</header>\n        <select title=\"Font style\" name=\"linesTitle\">\n            <option value=\"title1\">Title 1</option>\n            <option value=\"title2\" selected>Title 2</option>\n        </select>\n        <input type=\"text\" title=\"Line content 1 <br> (For the best experience, please write at least 100 characters)\" inline=\"\" name=\"animatedLine1\" value=\"Ask Me Any Sports or Sports Betting Related Questions!!!!!!!!!  Im Here for your Sports Betting Support.....Please Bet Responsibly !!!!!!!!!\">\n        <input type=\"range\" inline title=\"Line speed\" name=\"speed\" min=\"0.01\" max=\"0.09\" step=\"0.01\" value=\"0.09\">\n        <select title=\"Direction\" name=\"direction\">\n            <option value=\"-1\" selected>Left</option>\n            <option value=\"1\">Right</option>\n        </select>\n        <input type=\"color\" title=\"Content color\" value=\"#81f790\" name=\"contentColor\" selected>\n        <header>Background</header>\n        <fieldset type=\"background\" parallax name=\"bg\" required>\n            <input type=\"image\" title=\"Image\" value=\"../_images/background1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#690092\" selected>\n        </fieldset>\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" checked condition=\"bg.type !== 'color'\">\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#f7f7f7\" condition=\"overlay && bg.type !== 'color'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.7\" condition=\"overlay && bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type!== 'color'\" mbr-style=\"{'opacity': overlayOpacity, 'background-color': overlayColor}\">\n    </div>\n    <div class=\"container-fluid\">\n\n        <div class=\"loop-container\">\n            <div class=\"item\" mbr-class=\"{'display-1':linesTitle=='title1','display-2':linesTitle=='title2'}\" data-linewords=\"{{animatedLine1}}\" data-direction=\"{{direction}}\" data-speed=\"{{speed}}\">☁️ Best offers\n                ☁️ Free delivery ☁️ Perfect design ☁️ Comfort ☁️ Support 24/7 ☁️ Vibes\n            </div>\n            <div class=\"item\" mbr-class=\"{'display-1':linesTitle=='title1','display-2':linesTitle=='title2'}\" data-linewords=\"{{animatedLine1}}\" data-direction=\"{{direction}}\" data-speed=\"{{speed}}\">☁️ Best offers\n                ☁️ Free delivery ☁️ Perfect design ☁️ Comfort ☁️ Support 24/7 ☁️ Vibes\n            </div>\n        </div>\n\n    </div>\n</section>",
          "_cid": "uHAmCs9SJh",
          "_anchor": "features11-1d",
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        },
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Sports Betting AI Chat</title>\n    <style>\n        :root {\n            --neon-green: #00FF00;\n            --dark-bg: #0C0C0C;\n            --terminal-green: #33FF33;\n            --highlight-color: #3a87ad;\n        }\n\n        body {\n            background-color: var(--dark-bg);\n            color: var(--terminal-green);\n            font-family: monospace;\n            margin: 0;\n            padding: 20px;\n        }\n\n        .terminal-container {\n            max-width: 800px;\n            margin: 0 auto;\n            border: 3px solid;\n            padding: 20px;\n            border-radius: 12px;\n            background: var(--dark-bg);\n            animation: rainbow-border 8s linear infinite;\n            box-shadow: 0 0 15px rgba(0, 255, 0, 0.3);\n        }\n\n        @keyframes rainbow-border {\n            0% { border-color: #00ff00; box-shadow: 0 0 15px #00ff00; }\n            14% { border-color: #0088ff; box-shadow: 0 0 15px #0088ff; }\n            28% { border-color: #ff0000; box-shadow: 0 0 15px #ff0000; }\n            42% { border-color: #ff00ff; box-shadow: 0 0 15px #ff00ff; }\n            56% { border-color: #800080; box-shadow: 0 0 15px #800080; }\n            70% { border-color: #0000ff; box-shadow: 0 0 15px #0000ff; }\n            84% { border-color: #ffff00; box-shadow: 0 0 15px #ffff00; }\n            100% { border-color: #00ff00; box-shadow: 0 0 15px #00ff00; }\n        }\n\n        .header {\n            text-align: center;\n            margin-bottom: 20px;\n            border-bottom: 2px solid var(--neon-green);\n            padding-bottom: 10px;\n        }\n\n        .theme-selector {\n            margin-bottom: 15px;\n            display: flex;\n            justify-content: flex-end;\n        }\n\n        .theme-dropdown {\n            background-color: var(--dark-bg);\n            color: var(--terminal-green);\n            border: 1px solid var(--neon-green);\n            padding: 5px 10px;\n            font-family: monospace;\n            cursor: pointer;\n        }\n\n        .chat-messages {\n            height: 400px;\n            overflow-y: auto;\n            margin-bottom: 15px;\n            border: 1px solid var(--neon-green);\n            border-radius: 8px;\n            padding: 10px;\n        }\n\n        .chat-message {\n            margin-bottom: 15px;\n            display: flex;\n        }\n\n        .chat-message.user {\n            justify-content: flex-end;\n        }\n\n        .message-content {\n            max-width: 80%;\n            padding: 10px;\n            border-radius: 8px;\n        }\n\n        .chat-message.bot .message-content {\n            background-color: rgba(0, 153, 0, 0.1);\n            border: 1px solid var(--neon-green);\n        }\n\n        .chat-message.user .message-content {\n            background-color: rgba(58, 135, 173, 0.1);\n            border: 1px solid var(--highlight-color);\n        }\n\n        .message-header {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 5px;\n            font-size: 12px;\n        }\n\n        .bot-name {\n            color: var(--neon-green);\n            font-weight: bold;\n        }\n\n        .user-name {\n            color: var(--highlight-color);\n            font-weight: bold;\n        }\n\n        .message-time {\n            color: #888;\n        }\n\n        .message-text {\n            font-size: 14px;\n            line-height: 1.4;\n        }\n\n        .chat-input-area {\n            display: flex;\n            gap: 10px;\n        }\n\n        .terminal-input {\n            flex: 1;\n            background-color: rgba(0, 0, 0, 0.5);\n            border: 1px solid var(--neon-green);\n            padding: 10px;\n            color: var(--terminal-green);\n            font-family: monospace;\n            border-radius: 4px;\n        }\n\n        .terminal-button {\n            background: transparent;\n            border: 1px solid var(--neon-green);\n            color: var(--neon-green);\n            padding: 8px 15px;\n            cursor: pointer;\n            font-family: monospace;\n        }\n\n        .terminal-button:hover {\n            background: var(--neon-green);\n            color: var(--dark-bg);\n        }\n\n        .api-key-area {\n            margin-bottom: 15px;\n            padding: 10px;\n            border: 1px dashed var(--neon-green);\n            border-radius: 8px;\n        }\n\n        .info-message {\n            text-align: center;\n            color: #888;\n            padding: 20px;\n        }\n\n        .loader {\n            display: inline-block;\n            width: 20px;\n            height: 20px;\n            border: 2px solid rgba(0, 255, 0, 0.3);\n            border-radius: 50%;\n            border-top-color: var(--neon-green);\n            animation: spin 1s ease-in-out infinite;\n            margin-left: 10px;\n        }\n\n        .typing-indicator {\n            margin-bottom: 15px;\n            text-align: center;\n            font-style: italic;\n            color: #888;\n        }\n\n\n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n\n        .footer {\n            text-align: center;\n            margin-top: 15px;\n            padding-top: 10px;\n            border-top: 1px solid var(--neon-green);\n            font-size: 0.8em;\n        }\n    </style>\n\n\n    <div class=\"terminal-container\">\n        <div class=\"theme-selector\">\n            <select id=\"themeSelect\" class=\"theme-dropdown\">\n                <option value=\"default\">Terminal Green</option>\n                <option value=\"blue\">Cyber Blue</option>\n                <option value=\"red\">Hot Red</option>\n                <option value=\"dark\">Dark Mode</option>\n            </select>\n        </div>\n\n        <div class=\"header\">\n            <h1>SPORTS BETTING AI ASSISTANT</h1>\n        </div>\n\n        <div id=\"statusIndicator\" style=\"display: none; padding: 10px; background-color: rgba(0, 255, 0, 0.1); border: 1px solid var(--neon-green); margin-bottom: 10px; text-align: center; border-radius: 4px;\"></div>\n\n\n        <div class=\"chatbot-container\">\n            <div id=\"chatMessages\" class=\"chat-messages\"></div>\n            <div class=\"chat-input-area\">\n                <input type=\"text\" id=\"chatInput\" class=\"terminal-input\" placeholder=\"Ask about sports betting...\">\n                <button id=\"sendButton\" class=\"terminal-button\">SEND</button>\n            </div>\n        </div>\n\n        <div class=\"footer\">\n            <p>© 2024 Sports Betting AI Assistant</p>\n        </div>\n    </div>\n\n    [JS_CODE_0]\n\n",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_anchor": "custom-html-1a",
          "_PHPplaceholders": [],
          "_JSplaceholders": [
            "<script>\n        const OPENAI_API_KEY = \"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\";\n        const ODDS_API_KEY = \"bf856759cbb0d736360a54b3e73df8ef\"; // The Odds API key\n        \n        // Store current context of odds and news\n        let currentLiveOdds = {};\n        let currentSportsNews = [];\n        let chatContext = [];\n        let isProcessing = false;\n        let statusIndicator = null;\n\n        document.addEventListener('DOMContentLoaded', function() {\n            // Initialize the chat\n            initChat();\n\n            // Setup theme selector\n            const themeSelect = document.getElementById('themeSelect');\n            if (themeSelect) {\n                themeSelect.addEventListener('change', function() {\n                    applyTheme(this.value);\n                });\n            }\n\n            // Initialize status indicator\n            statusIndicator = document.getElementById('statusIndicator');\n            \n            // Initially apply default theme\n            applyTheme('default');\n\n            // Pre-fetch some live odds and news to have them ready\n            fetchLiveOddsForPopularLeagues();\n            fetchLatestSportsNews();\n        });\n\n        // Fetch live odds for popular leagues to have data ready\n        async function fetchLiveOddsForPopularLeagues() {\n            updateStatus('Fetching the latest odds data...');\n            \n            const popularLeagues = [\n                { key: 'NFL', apiKey: 'americanfootball_nfl' },\n                { key: 'NBA', apiKey: 'basketball_nba' },\n                { key: 'MLB', apiKey: 'baseball_mlb' },\n                { key: 'NHL', apiKey: 'icehockey_nhl' }\n            ];\n            \n            for (const league of popularLeagues) {\n                try {\n                    const odds = await fetchLiveOdds(league.apiKey);\n                    if (odds && odds.length > 0) {\n                        currentLiveOdds[league.key] = odds;\n                    }\n                } catch (error) {\n                    console.error(`Error fetching odds for ${league.key}:`, error);\n                }\n            }\n            \n            updateStatus('Latest odds data ready');\n            setTimeout(() => hideStatus(), 2000);\n        }\n        \n        // Fetch live odds from The Odds API\n        async function fetchLiveOdds(sport) {\n            try {\n                const url = `https://api.the-odds-api.com/v4/sports/${sport}/odds/?apiKey=${ODDS_API_KEY}&regions=us&markets=h2h,spreads,totals&dateFormat=iso`;\n                const response = await fetch(url);\n                \n                if (!response.ok) {\n                    throw new Error(`API error: ${response.status}`);\n                }\n                \n                return await response.json();\n            } catch (error) {\n                console.error('Error fetching odds:', error);\n                return null;\n            }\n        }\n        \n        // Fetch latest sports news using a news API or RSS feed\n        async function fetchLatestSportsNews() {\n            updateStatus('Fetching the latest sports news...');\n            \n            try {\n                // We'll simulate news for the demo\n                // In production, use a real news API\n                currentSportsNews = [\n                    {\n                        title: \"Patrick Mahomes leads Chiefs to dramatic win\",\n                        source: \"ESPN\",\n                        time: new Date().toISOString(),\n                        impact: \"High impact on KC spread\"\n                    },\n                    {\n                        title: \"Lakers' LeBron James questionable for tomorrow's game\",\n                        source: \"NBA.com\",\n                        time: new Date().toISOString(),\n                        impact: \"Medium impact on Lakers ML\"\n                    },\n                    {\n                        title: \"MLB announces new rule changes for upcoming season\",\n                        source: \"MLB Network\",\n                        time: new Date().toISOString(),\n                        impact: \"Low impact on totals\"\n                    },\n                    {\n                        title: \"Weather forecast predicts heavy snow for Sunday NFL games\",\n                        source: \"Weather.com\",\n                        time: new Date().toISOString(),\n                        impact: \"High impact on totals\"\n                    }\n                ];\n                \n                updateStatus('Latest sports news ready');\n                setTimeout(() => hideStatus(), 2000);\n            } catch (error) {\n                console.error('Error fetching news:', error);\n                updateStatus('Error fetching news');\n                setTimeout(() => hideStatus(), 2000);\n            }\n        }\n        \n        // Helper function to update status indicator\n        function updateStatus(message) {\n            if (statusIndicator) {\n                statusIndicator.textContent = message;\n                statusIndicator.style.display = 'block';\n            }\n        }\n        \n        // Helper function to hide status indicator\n        function hideStatus() {\n            if (statusIndicator) {\n                statusIndicator.style.display = 'none';\n            }\n        }\n\n        function initChat() {\n            const chatMessages = document.getElementById('chatMessages');\n            const chatInput = document.getElementById('chatInput');\n            const sendButton = document.getElementById('sendButton');\n\n            // Add welcome message\n            addBotMessage(\"Welcome to the Sports Betting AI Assistant! I can help with NFL, NBA, MLB, NHL betting strategies, live odds analysis, and player stats. I'm connected to real-time odds and sports news. What would you like to know about sports betting today?\");\n\n            // Set up event listeners\n            sendButton.addEventListener('click', sendMessage);\n            chatInput.addEventListener('keypress', function(e) {\n                if (e.key === 'Enter') {\n                    sendMessage();\n                }\n            });\n        }\n\n        async function sendMessage() {\n            if (isProcessing) return; // Prevent multiple submissions\n            \n            const chatMessages = document.getElementById('chatMessages');\n            const chatInput = document.getElementById('chatInput');\n            const userQuestion = chatInput.value.trim();\n\n            if (!userQuestion) return;\n            \n            isProcessing = true;\n\n            // Add user message\n            addUserMessage(userQuestion);\n\n            // Clear input\n            chatInput.value = '';\n\n            // Show typing indicator\n            const typingIndicator = document.createElement('div');\n            typingIndicator.className = 'typing-indicator';\n            typingIndicator.innerHTML = 'Synthia is thinking...';\n            chatMessages.appendChild(typingIndicator);\n\n            // Check if we need to fetch fresh data\n            const needsLiveOdds = containsOddsQuery(userQuestion);\n            const needsNewsData = containsNewsQuery(userQuestion);\n            const matchedTeams = extractTeamNames(userQuestion);\n            \n            try {\n                // Enhance contextual data if needed\n                let contextualData = \"\";\n                \n                if (needsLiveOdds || matchedTeams.length > 0) {\n                    updateStatus('Fetching fresh odds data...');\n                    await refreshOddsData(matchedTeams);\n                    \n                    // Format odds data for teams mentioned\n                    if (matchedTeams.length > 0) {\n                        const relevantOdds = getRelevantOddsForTeams(matchedTeams);\n                        if (relevantOdds) {\n                            contextualData += \"\\nLatest odds data:\\n\" + JSON.stringify(relevantOdds, null, 2);\n                        }\n                    }\n                }\n                \n                if (needsNewsData) {\n                    updateStatus('Fetching latest news...');\n                    await fetchLatestSportsNews();\n                    \n                    // Add news to context\n                    contextualData += \"\\nLatest sports news:\\n\" + JSON.stringify(currentSportsNews, null, 2);\n                }\n                \n                // Add this exchange to context history (limited to last 3 exchanges)\n                chatContext.push({\n                    role: \"user\",\n                    content: userQuestion\n                });\n                \n                if (chatContext.length > 6) {\n                    // Keep last 6 messages (3 exchanges)\n                    chatContext = chatContext.slice(chatContext.length - 6);\n                }\n                \n                // Create the messages array\n                const messages = [\n                    {\n                        role: \"system\",\n                        content: `You are Synthia, an advanced sports betting AI assistant specializing in NFL, NBA, MLB, NHL and college sports. You have access to the latest odds data and sports news.\n\nProvide specific, data-driven betting advice, odds analysis, and strategy tips. When analyzing specific teams or games, reference the live odds data provided. Explain the reasoning behind your predictions.\n\nWhen discussing odds, use standard betting terminology (moneyline, spread, over/under). Use statistics to support your recommendations. If discussing specific matchups, provide win probability estimates and key factors affecting the outcome.\n\nKeep responses concise but informative. Focus on providing actionable betting insights. If you are asked about specific games or teams, provide detailed analysis and predictions based on the data available.${contextualData}`\n                    },\n                    ...chatContext\n                ];\n\n                // Send to OpenAI and get response\n                const response = await fetch('https://api.openai.com/v1/chat/completions', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer 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'\n                    },\n                    body: JSON.stringify({\n                        model: \"gpt-3.5-turbo\",\n                        messages: messages,\n                        max_tokens: 300, // Increase token limit for more detailed responses\n                        temperature: 0.7 // Slightly reduce temperature for more consistent responses\n                    })\n                });\n\n                // Remove typing indicator\n                chatMessages.removeChild(typingIndicator);\n\n                if (response.ok) {\n                    const data = await response.json();\n                    const botResponse = data.choices[0].message.content;\n                    \n                    // Add the response to context\n                    chatContext.push({\n                        role: \"assistant\",\n                        content: botResponse\n                    });\n                    \n                    addBotMessage(botResponse);\n                } else {\n                    console.error('Error from OpenAI:', await response.text());\n                    addBotMessage(\"I'm sorry, I encountered an error while processing your request. Please try again.\");\n                }\n            } catch (error) {\n                // Remove typing indicator\n                if (typingIndicator.parentNode) {\n                    chatMessages.removeChild(typingIndicator);\n                }\n                console.error('Error:', error);\n                addBotMessage(\"I'm sorry, I encountered an error while processing your request. Please try again.\");\n            } finally {\n                hideStatus();\n                isProcessing = false;\n            }\n        }\n        \n        // Helper function to determine if question requires odds data\n        function containsOddsQuery(question) {\n            const oddsKeywords = ['odds', 'spread', 'line', 'moneyline', 'over/under', 'over under', 'total', 'prop', 'bet', 'wager', 'latest odds', 'current odds'];\n            return oddsKeywords.some(keyword => question.toLowerCase().includes(keyword));\n        }\n        \n        // Helper function to determine if question requires news data\n        function containsNewsQuery(question) {\n            const newsKeywords = ['news', 'update', 'latest', 'recent', 'injury', 'report', 'what happened', 'headline'];\n            return newsKeywords.some(keyword => question.toLowerCase().includes(keyword));\n        }\n        \n        // Helper function to extract team names from question\n        function extractTeamNames(question) {\n            // List of major teams to check for\n            const teamsList = [\n                // NFL\n                \"Cardinals\", \"Arizona\", \"Falcons\", \"Atlanta\", \"Ravens\", \"Baltimore\", \"Bills\", \"Buffalo\", \n                \"Panthers\", \"Carolina\", \"Bears\", \"Chicago\", \"Bengals\", \"Cincinnati\", \"Browns\", \"Cleveland\", \n                \"Cowboys\", \"Dallas\", \"Broncos\", \"Denver\", \"Lions\", \"Detroit\", \"Packers\", \"Green Bay\", \n                \"Texans\", \"Houston\", \"Colts\", \"Indianapolis\", \"Jaguars\", \"Jacksonville\", \"Chiefs\", \"Kansas City\", \n                \"Raiders\", \"Las Vegas\", \"Chargers\", \"Los Angeles\", \"Rams\", \"LA\", \"Dolphins\", \"Miami\", \n                \"Vikings\", \"Minnesota\", \"Patriots\", \"New England\", \"Saints\", \"New Orleans\", \"Giants\", \"New York\", \n                \"Jets\", \"Eagles\", \"Philadelphia\", \"Steelers\", \"Pittsburgh\", \"49ers\", \"San Francisco\", \n                \"Seahawks\", \"Seattle\", \"Buccaneers\", \"Tampa Bay\", \"Titans\", \"Tennessee\", \"Commanders\", \"Washington\",\n                \n                // NBA\n                \"Hawks\", \"Celtics\", \"Boston\", \"Nets\", \"Brooklyn\", \"Hornets\", \"Charlotte\", \"Bulls\", \n                \"Cavaliers\", \"Cavs\", \"Mavericks\", \"Mavs\", \"Nuggets\", \"Pistons\", \"Warriors\", \"Golden State\", \n                \"Rockets\", \"Pacers\", \"Indiana\", \"Clippers\", \"Lakers\", \"Grizzlies\", \"Memphis\", \"Heat\", \"Miami\", \n                \"Bucks\", \"Milwaukee\", \"Timberwolves\", \"Minnesota\", \"Pelicans\", \"New Orleans\", \"Knicks\", \n                \"Thunder\", \"Oklahoma City\", \"OKC\", \"Magic\", \"Orlando\", \"76ers\", \"Sixers\", \"Suns\", \"Phoenix\", \n                \"Trail Blazers\", \"Blazers\", \"Portland\", \"Kings\", \"Sacramento\", \"Spurs\", \"San Antonio\", \n                \"Raptors\", \"Toronto\", \"Jazz\", \"Utah\", \"Wizards\", \"Washington D.C.\",\n                \n                // MLB, NHL, etc. - would add more teams as needed\n            ];\n            \n            const mentionedTeams = [];\n            for (const team of teamsList) {\n                if (question.toLowerCase().includes(team.toLowerCase())) {\n                    mentionedTeams.push(team);\n                }\n            }\n            \n            return mentionedTeams;\n        }\n        \n        // Refresh odds data for specific teams or all major leagues\n        async function refreshOddsData(teams = []) {\n            // Define leagues to fetch\n            const leagues = [\n                { key: 'NFL', apiKey: 'americanfootball_nfl' },\n                { key: 'NBA', apiKey: 'basketball_nba' },\n                { key: 'MLB', apiKey: 'baseball_mlb' },\n                { key: 'NHL', apiKey: 'icehockey_nhl' }\n            ];\n            \n            // Fetch odds for each league\n            for (const league of leagues) {\n                try {\n                    const odds = await fetchLiveOdds(league.apiKey);\n                    if (odds && odds.length > 0) {\n                        currentLiveOdds[league.key] = odds;\n                    }\n                } catch (error) {\n                    console.error(`Error fetching odds for ${league.key}:`, error);\n                }\n            }\n        }\n        \n        // Get relevant odds for teams mentioned in the question\n        function getRelevantOddsForTeams(teams) {\n            if (teams.length === 0) return null;\n            \n            const relevantOdds = [];\n            \n            // Search through all leagues for games containing the mentioned teams\n            for (const league in currentLiveOdds) {\n                if (currentLiveOdds.hasOwnProperty(league)) {\n                    const leagueOdds = currentLiveOdds[league];\n                    \n                    // Filter games that match the teams\n                    const matchingGames = leagueOdds.filter(game => {\n                        const homeTeam = game.home_team;\n                        const awayTeam = game.away_team;\n                        \n                        return teams.some(team => {\n                            return homeTeam.toLowerCase().includes(team.toLowerCase()) || \n                                   awayTeam.toLowerCase().includes(team.toLowerCase());\n                        });\n                    });\n                    \n                    if (matchingGames.length > 0) {\n                        relevantOdds.push({\n                            league: league,\n                            games: matchingGames.map(game => ({\n                                homeTeam: game.home_team,\n                                awayTeam: game.away_team,\n                                commenceTime: game.commence_time,\n                                bookmakers: game.bookmakers?.slice(0, 2) || [] // Limit to first 2 bookmakers for brevity\n                            }))\n                        });\n                    }\n                }\n            }\n            \n            return relevantOdds.length > 0 ? relevantOdds : null;\n        }\n\n        function addUserMessage(message) {\n            const chatMessages = document.getElementById('chatMessages');\n            const messageElement = document.createElement('div');\n            messageElement.className = 'chat-message user';\n            messageElement.innerHTML = `\n                <div class=\"message-content\">\n                    <div class=\"message-header\">\n                        <span class=\"user-name\">YOU</span>\n                        <span class=\"message-time\">${getCurrentTime()}</span>\n                    </div>\n                    <div class=\"message-text\">${message}</div>\n                </div>\n            `;\n            chatMessages.appendChild(messageElement);\n            scrollToBottom();\n        }\n\n        function addBotMessage(message) {\n            const chatMessages = document.getElementById('chatMessages');\n            const messageElement = document.createElement('div');\n            messageElement.className = 'chat-message bot';\n            messageElement.innerHTML = `\n                <div class=\"message-content\">\n                    <div class=\"message-header\">\n                        <span class=\"bot-name\">SPORTSBETTING AI</span>\n                        <span class=\"message-time\">${getCurrentTime()}</span>\n                    </div>\n                    <div class=\"message-text\">${message}</div>\n                </div>\n            `;\n            chatMessages.appendChild(messageElement);\n            scrollToBottom();\n            return messageElement;\n        }\n\n        function addBotThinkingMessage() {\n            const chatMessages = document.getElementById('chatMessages');\n            const messageElement = document.createElement('div');\n            messageElement.className = 'chat-message bot';\n            messageElement.innerHTML = `\n                <div class=\"message-content\">\n                    <div class=\"message-header\">\n                        <span class=\"bot-name\">SPORTSBETTING AI</span>\n                        <span class=\"message-time\">${getCurrentTime()}</span>\n                    </div>\n                    <div class=\"message-text\">\n                        Analyzing your question<div class=\"loader\"></div>\n                    </div>\n                </div>\n            `;\n            chatMessages.appendChild(messageElement);\n            scrollToBottom();\n            return messageElement;\n        }\n\n        function scrollToBottom() {\n            const chatMessages = document.getElementById('chatMessages');\n            chatMessages.scrollTop = chatMessages.scrollHeight;\n        }\n\n        function getCurrentTime() {\n            const now = new Date();\n            return now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n        }\n\n\n        function applyTheme(theme) {\n            const root = document.documentElement;\n\n            switch (theme) {\n                case 'blue':\n                    root.style.setProperty('--neon-green', '#00a3ff');\n                    root.style.setProperty('--dark-bg', '#0a192f');\n                    root.style.setProperty('--terminal-green', '#00a3ff');\n                    root.style.setProperty('--highlight-color', '#5cb3ff');\n                    break;\n                case 'red':\n                    root.style.setProperty('--neon-green', '#ff2a6d');\n                    root.style.setProperty('--dark-bg', '#1a0a0f');\n                    root.style.setProperty('--terminal-green', '#ff2a6d');\n                    root.style.setProperty('--highlight-color', '#ff90b5');\n                    break;\n                case 'dark':\n                    root.style.setProperty('--neon-green', '#cccccc');\n                    root.style.setProperty('--dark-bg', '#111111');\n                    root.style.setProperty('--terminal-green', '#dddddd');\n                    root.style.setProperty('--highlight-color', '#888888');\n                    break;\n                default: // green (default)\n                    root.style.setProperty('--neon-green', '#00ff00');\n                    root.style.setProperty('--dark-bg', '#0c0c0c');\n                    root.style.setProperty('--terminal-green', '#33ff33');\n                    root.style.setProperty('--highlight-color', '#3a87ad');\n                    break;\n            }\n        }\n    </script>"
          ]
        },
        {
          "alias": false,
          "_styles": {
            "& when not (@fullScreen)": {
              "padding-top": "(@paddingTop * 1rem)",
              "padding-bottom": "(@paddingBottom * 1rem)"
            },
            "& when (@bg-type = 'color')": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = 'image')": {
              "background-image": "url(@bg-value)"
            },
            ".mbr-fallback-image.disabled": {
              "display": "none"
            },
            ".mbr-fallback-image": {
              "display": "block",
              "background-size": "cover",
              "background-position": "center center",
              "width": "100%",
              "height": "100%",
              "position": "absolute",
              "top": "0",
              "& when (@bg-type = 'video')": {
                "background-image": "url(@fallBackImage)"
              }
            },
            ".title-wrapper": {
              "margin-bottom": "60px",
              "@media (max-width: 992px)": {
                "margin-bottom": "48px"
              },
              ".desc-wrapper": {
                ".mbr-desc": {
                  "display": "inline-block",
                  "width": "50%",
                  "margin-bottom": "36px",
                  "@media (max-width: 992px)": {
                    "width": "100%",
                    "margin-bottom": "16px"
                  }
                }
              },
              ".mbr-section-title": {
                "margin-bottom": "24px"
              },
              ".text-wrapper": {
                ".mbr-text": {
                  "display": "inline-block",
                  "width": "50%",
                  "margin-bottom": "0",
                  "@media (max-width: 992px)": {
                    "width": "100%"
                  }
                }
              }
            },
            ".items-wrapper": {
              "margin": "0 -32px",
              "justify-content": "center"
            },
            ".item": {
              "padding": "0 32px",
              "margin-bottom": "64px",
              "@media (max-width: 992px)": {
                "margin-bottom": "28px"
              },
              "&:nth-child(2n)": {
                "margin-top": "120px",
                "@media (max-width: 992px)": {
                  "margin-top": "0"
                }
              },
              ".item-wrapper": {
                "height": "100%",
                "transition": "all 0.3s ease-in-out",
                "&:hover, &:focus": {
                  ".item-wrap .item-img .image-wrap img": {
                    "border": "2px solid @active",
                    "background-color": "@active"
                  }
                },
                ".item-wrap": {
                  "height": "100%",
                  ".item-img": {
                    "position": "relative",
                    ".image-wrap": {
                      "margin-bottom": "32px",
                      "@media (max-width: 992px)": {
                        "margin-bottom": "16px"
                      },
                      "img": {
                        "height": "680px",
                        "width": "100%",
                        "object-fit": "cover",
                        "border": "2px solid transparent",
                        "transition": "all 0.3s ease-in-out",
                        "@media (max-width: 992px)": {
                          "height": "350px"
                        }
                      }
                    },
                    ".item-content": {
                      "padding": "2px",
                      ".item-title": {
                        "margin-bottom": "8px"
                      },
                      ".item-text": {
                        "margin-bottom": "0"
                      }
                    }
                  }
                }
              }
            },
            ".mbr-section-title": {
              "color": "#0844ff",
              "text-align": "center"
            },
            ".mbr-text, .text-wrapper": {
              "color": "#9aa0a6",
              "text-align": "center"
            },
            ".mbr-desc, .desc-wrapper": {
              "color": "#dfe4ff",
              "text-align": "center"
            },
            ".item-title": {
              "color": "#ffffff"
            },
            ".item-text": {
              "color": "#2e96ff"
            }
          },
          "_name": "features07",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"features07 progressm5\" group=\"Features\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" title=\"Full Screen\" name=\"fullScreen\">\n        <input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\">\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"12\" step=\"1\" value=\"5\" condition=\"fullScreen == false\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"12\" step=\"1\" value=\"5\" condition=\"fullScreen == false\">\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Title\" name=\"showTitle\" checked>\n        <input type=\"checkbox\" title=\"Text\" name=\"showText\" checked>\n        <input type=\"checkbox\" title=\"Description\" name=\"showDesc\" checked>\n        <header>Cards</header>\n        <input type=\"checkbox\" title=\"Card Title\" name=\"showCardTitle\" checked>\n        <input type=\"checkbox\" title=\"Card Text\" name=\"showCardText\" checked>\n        <input type=\"color\" title=\"Active Color\" value=\"#078efb\" name=\"active\" selected>\n        <header>Background</header>\n        <fieldset type=\"background\" name=\"bg\" parallax>\n            <input type=\"image\" title=\"Image\" value=\"@THEME_PATH@/components/_images/background1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#060606\" selected>\n        </fieldset>\n        <header condition=\"bg.type === 'video'\">Fallback Image</header>\n        <input type=\"image\" title=\"Fallback Image\" value=\"@THEME_PATH@/components/_images/background1.jpg\" name=\"fallBackImage\" condition=\"bg.type === 'video'\">\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\" checked>\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#060606\" condition=\"overlay && bg.type !== 'color'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.8\" condition=\"overlay && bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-fallback-image disabled\" mbr-if=\"bg.type == 'video'\"></div>\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type !== 'color'\" opacity=\"{{overlayOpacity}}\" bg-color=\"{{overlayColor}}\"></div>\n\n    <div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"title-wrapper\" mbr-if=\"showTitle || showText || showDesc\">\n                    <div class=\"desc-wrapper\">\n                        <p class=\"mbr-desc mbr-fonts-style\" mbr-theme-style=\"display-5\" mbr-if=\"showDesc\" data-app-selector=\".mbr-desc, .desc-wrapper\"><b>\n                            POWERFUL TOOLS<br> Built for Tablets, PC and Mac.</b></p>\n                    </div>\n                    <h2 class=\"mbr-section-title mbr-fonts-style\" data-app-selector=\".mbr-section-title\" mbr-theme-style=\"display-2\" mbr-if=\"showTitle\"><b>\n                        Provided by SYNA AI virtual assistants\n                    </b></h2>\n                    <div class=\"text-wrapper\">\n                        <p class=\"mbr-text mbr-fonts-style\" mbr-theme-style=\"display-7\" mbr-if=\"showText\" data-app-selector=\".mbr-text, .text-wrapper\">\n                            Virtual assistants (VAs) have become essential tools in both personal and professional\n                            settings.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row items-wrapper\">\n            <div class=\"item features-image col-12 col-lg-6\">\n                <div class=\"item-wrapper\">\n                    <div class=\"item-wrap\">\n\t\t\t\t\t\t<div class=\"item-img\">\n\t\t\t\t\t\t\t<div class=\"image-wrap\">\n                                <a href=\"page4.html#custom-html-n\"><img src=\"@PROJECT_PATH@/assets/images/screenshot-2025-04-07-153126bbig-549x485.jpg\" alt=\"Mobirise Website Builder\"></a>\n\t\t\t\t\t\t\t</div>\n                            <div class=\"item-content\">\n                                <h4 class=\"item-title mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".item-title\" mbr-if=\"showCardTitle\">\n                                    Sports Betting Game for home between friends.</h4>\n                                <p class=\"item-text mbr-fonts-style\" mbr-if=\"showCardText\" mbr-theme-style=\"display-4\" data-app-selector=\".item-text\">\n                                    Provide 24/7 info and chat to assist in your daily betting choices and of course use it at your own risk. No&nbsp;GUARANTEES!!!!!!</p>\n                            </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                </div>\n            </div>\n            <div class=\"item features-image col-12 col-lg-6\">\n                <div class=\"item-wrapper\">\n                    <div class=\"item-wrap\">\n                        <div class=\"item-img\">\n                            <div class=\"image-wrap\">\n                                <a href=\"#\"><img src=\"@PROJECT_PATH@/assets/images/pred-820x657.jpg\" alt=\"Mobirise Website Builder\"></a>\n                            </div>\n                            <div class=\"item-content\">\n                                <h4 class=\"item-title mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".item-title\" mbr-if=\"showCardTitle\">Predictions Assistant</h4>\n                                <p class=\"item-text mbr-fonts-style\" mbr-if=\"showCardText\" mbr-theme-style=\"display-4\" data-app-selector=\".item-text\">\n                                    Suggest plays with her intuitive analysis of the markets to provide her predictions. We are working everyday to improve her ability to pick winners!!!! Use at your own risk, as we offer No GUARANTEES!!!!!!</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>",
          "_cid": "ufFEkT8d3V",
          "_anchor": "features07-5",
          "_PHPplaceholders": [],
          "_JSplaceholders": [],
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        },
        {
          "alias": false,
          "_styles": {
            "& when not (@fullScreen)": {
              "padding-top": "(@paddingTop * 1rem)",
              "padding-bottom": "(@paddingBottom * 1rem)"
            },
            "& when (@bg-type = 'color')": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = 'image')": {
              "background-image": "url(@bg-value)"
            },
            ".mbr-fallback-image.disabled": {
              "display": "none"
            },
            ".mbr-fallback-image": {
              "display": "block",
              "background-size": "cover",
              "background-position": "center center",
              "width": "100%",
              "height": "100%",
              "position": "absolute",
              "top": "0",
              "& when (@bg-type = 'video')": {
                "background-image": "url(@fallBackImage)"
              }
            },
            ".items-wrap": {
              "justify-content": "center",
              ".card": {
                "justify-content": "flex-end"
              }
            },
            ".title-wrapper": {
              ".mbr-section-title": {
                "margin-bottom": "32px",
                "@media (max-width: 992px)": {
                  "text-align": "center"
                }
              }
            },
            ".nav-wrapper": {
              "margin-bottom": "32px",
              ".list": {
                "display": "inline-flex",
                "flex-wrap": "wrap",
                "justify-content": "center",
                "margin": "0",
                "padding": "0",
                "list-style-type": "none",
                ".item-wrap": {
                  "padding": "5px 10px",
                  "margin-bottom": "0",
                  "transition": "all 0.3s ease-in-out",
                  "&:hover, &:focus": {
                    "color": "@active"
                  }
                }
              }
            },
            ".mbr-copy": {
              "margin-bottom": "0",
              "@media (max-width: 992px)": {
                "text-align": "center"
              },
              "color": "#aef800",
              "text-align": "center"
            },
            ".mbr-section-title": {
              "color": "#ffffff"
            },
            ".list, .nav-wrapper": {
              "color": "#ffffff",
              "text-align": "right"
            },
            ".list, .item-wrap, .nav-wrapper": {
              "text-align": "center"
            }
          },
          "_name": "footer01",
          "_sourceTheme": "tradem5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"footer01 tradem5\" group=\"Footer\" global=\"\" once=\"footers\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" title=\"Full Screen\" name=\"fullScreen\">\n        <input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\">\n        <input type=\"range\" inline=\"\" title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"12\" step=\"1\" value=\"2\" condition=\"fullScreen == false\">\n        <input type=\"range\" inline=\"\" title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"12\" step=\"1\" value=\"2\" condition=\"fullScreen == false\">\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Title\" name=\"showTitle\">\n        <input type=\"checkbox\" title=\"Navigation\" name=\"showNav\">\n        <input type=\"color\" title=\"Active Color\" value=\"#bcfe1e\" name=\"active\" condition=\"showNav\" selected=\"\">\n        <input type=\"checkbox\" title=\"Copyright\" name=\"showCopy\" checked=\"\">\n        <header>Background</header>\n        <fieldset type=\"background\" name=\"bg\" parallax=\"\">\n            <input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/background1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#292739\" selected=\"\">\n        </fieldset>\n        <header condition=\"bg.type === 'video'\">Fallback Image</header>\n        <input type=\"image\" title=\"Fallback Image\" value=\"@PROJECT_PATH@/assets/images/background1.jpg\" name=\"fallBackImage\" condition=\"bg.type === 'video'\">\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\" checked=\"\">\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#080813\" condition=\"overlay &amp;&amp; bg.type !== 'color'\">\n        <input type=\"range\" inline=\"\" title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.7\" condition=\"overlay &amp;&amp; bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-fallback-image disabled\" mbr-if=\"bg.type == 'video'\"></div>\n    <div class=\"mbr-overlay\" mbr-if=\"overlay &amp;&amp; bg.type !== 'color'\" opacity=\"{{overlayOpacity}}\" bg-color=\"{{overlayColor}}\"></div>\n\n    <div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n        <div class=\"row items-wrap\">\n            <div class=\"col-12 col-lg-6 card\" mbr-if=\"showTitle\">\n                <div class=\"title-wrapper\">\n                    <a href=\"#\">\n                        <h2 class=\"mbr-section-title mbr-fonts-style\" data-app-selector=\".mbr-section-title\" mbr-theme-style=\"display-1\">\n                            <b>TRADEM5</b>\n                        </h2>\n                    </a>\n                </div>\n            </div>\n            <div class=\"col-12 col-lg-6 card\" mbr-if=\"showNav\">\n                <div class=\"nav-wrapper\">\n                    <ul class=\"list mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".list, .item-wrap, .nav-wrapper\" data-multiline=\"\" mbr-article=\"\">\n                        <li class=\"item-wrap\">Home</li>\n                        <li class=\"item-wrap\">Clients</li>\n                        <li class=\"item-wrap\">Pricing</li>\n                        <li class=\"item-wrap\">Privacy Policy</li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"col-12\" mbr-if=\"showCopy\">\n                <h2 class=\"mbr-copy mbr-fonts-style\" data-app-selector=\".mbr-copy\" mbr-theme-style=\"display-4\">\n                    © Copyright 2025 SYNAAI- All Rights Reserved\n                </h2>\n            </div>\n        </div>\n    </div>\n</section>",
          "_anchor": "footer01-1e",
          "_isUserblock": true,
          "_cid": "uHAmLwNbRM",
          "_protectedParams": [],
          "_global": true,
          "_once": "footers",
          "_params": {}
        }
      ]
    },
    "page1.html": {
      "settings": {
        "title": "PREDICTION ASST",
        "order": "2"
      },
      "components": [
        {
          "alias": false,
          "_styles": {
            ".navbar-dropdown": {
              "& when not (@transparent)": {
                "background-color": "@menuBgColor !important"
              },
              "& when (@transparent)": {
                "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
              },
              "padding": "0",
              "& when (@sticky)": {
                "position": "absolute !important"
              }
            },
            "background-color": "transparent",
            ".navbar.navbar-expand-lg .dropdown": {
              ".dropdown-menu": {
                "& when not (@transparent)": {
                  "background-color": "@menuBgColor !important"
                },
                "& when (@transparent)": {
                  "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
                },
                ".dropdown-submenu": {
                  "margin": "0",
                  "left": "100%"
                },
                "background": "@menuBgColor"
              }
            },
            ".menu_box": {
              "flex-wrap": "nowrap",
              "@media (max-width: 991px)": {
                ".navbar.opened, .navbar-collapse": {
                  "background-color": "@menuBgColor !important",
                  "transition": "all 0s ease 0s"
                },
                "flex-direction": "column",
                "align-items": "flex-start"
              }
            },
            "& when not (@sticky)": {
              ".navbar-dropdown": {
                "position": "relative !important"
              }
            },
            "& when (@sticky)": {
              "z-index": "1000",
              "width": "100%",
              "nav.navbar": {
                "position": "fixed",
                "padding-top": "1rem",
                "padding-bottom": "1rem"
              }
            },
            ".icons-menu-main": {
              "display": "flex",
              "flex-wrap": "wrap",
              "min-width": "150px",
              "margin-left": "24px",
              "@media (max-width: 991px)": {
                "min-width": "auto",
                "max-width": "100%",
                "margin": "1rem 0 1rem 1rem"
              }
            },
            ".mbr-section-btn-main": {
              "@media (max-width: 991px)": {
                "margin-top": "1rem"
              },
              ".btn": {
                "margin": "8px",
                "min-width": "120px",
                "white-space": "nowrap"
              }
            },
            ".btn": {
              "min-height": "auto",
              "box-shadow": "none",
              "margin-top": "0",
              "&:hover": {
                "box-shadow": "none"
              }
            },
            ".nav-item": {
              "margin": "4px 0",
              "@media (min-width: 992px)": {
                "margin": "4px 40px 4px 0"
              },
              "& when (@showLogo), (@showBrand)": {
                "@media (min-width: 992px)": {
                  "margin": "4px 0"
                }
              },
              "@media (max-width: 991px)": {
                "margin": "0 !important"
              },
              ".nav-link": {
                "display": "flex",
                "justify-content": "center",
                "padding": "12px",
                "transition": "all 0.3s ease-out",
                "border-radius": "4px !important",
                "border": "1px solid transparent",
                "position": "relative",
                "opacity": "1",
                "@media (max-width: 992px)": {
                  "justify-content": "flex-start"
                },
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "bottom": "-10px",
                  "width": "0",
                  "height": "2px",
                  "background-color": "@itemsActive",
                  "transition": "all 0.3s ease-out"
                },
                "&:hover, &:focus": {
                  "background-color": "@itemsBg",
                  "color": "@itemsActive !important",
                  "&::before": {
                    "width": "80%"
                  }
                }
              }
            },
            ".dropdown-menu": {
              "border-radius": "0",
              "box-shadow": "none",
              "text-align": "left",
              "@media (min-width: 992px)": {
                "padding": "18px 34px 22px",
                "min-width": "250px",
                "top": "auto !important",
                "left": "-40px !important",
                "&.dropdown-submenu": {
                  "left": "215px !important",
                  "top": "-45% !important"
                }
              }
            },
            "@media (max-width: 991px)": {
              ".dropdown-menu .dropdown-toggle[data-toggle=\"dropdown-submenu\"]::after, .link.dropdown-toggle::after": {
                "display": "inline-block",
                "width": "7px",
                "height": "7px",
                "margin-left": ".5rem",
                "margin-bottom": "2px",
                "content": "\"\"",
                "border": "2px solid",
                "border-left": "none",
                "border-top": "none",
                "transform": "rotate(-45deg)",
                "right": "15px",
                "position": "absolute",
                "margin-top": "-2px"
              },
              ".show.dropdown-toggle[aria-expanded=\"true\"]::after": {
                "transform": "rotate(45deg)",
                "margin-top": "-4px"
              },
              ".offcanvas_box": {
                "display": "none"
              }
            },
            ".dropdown-item": {
              "border": "none",
              "font-weight": "300 !important"
            },
            ".nav-dropdown .link": {
              "font-weight": "400 !important",
              "padding": "0 !important",
              "margin": "0 !important"
            },
            ".nav-dropdown .link.dropdown-toggle::after": {
              "margin-left": "0.5rem",
              "margin-top": "0"
            },
            ".container": {
              "display": "flex",
              "margin": "auto"
            },
            ".iconfont-wrapper": {
              "color": "@iconsColor",
              "font-size": "26px",
              "margin-right": "10px",
              "margin-bottom": "5px",
              "&:last-child": {
                "margin-right": "0"
              },
              "transition": "all 0.3s ease-in-out",
              "&:hover": {
                ".mbr-iconfont": {
                  "opacity": ".7"
                }
              }
            },
            ".navbar-nav": {
              "@media (min-width: 992px)": {
                "margin": "0"
              }
            },
            ".dropdown-menu, .navbar.opened": {
              "background-color": "@transparent !important"
            },
            ".nav-item:focus, .nav-link:focus": {
              "outline": "none"
            },
            ".dropdown .dropdown-menu .dropdown-item": {
              "width": "auto",
              "transition": "all 0.25s ease-in-out",
              "&::after": {
                "right": "0.5rem"
              },
              ".mbr-iconfont": {
                "margin-right": "0.5rem",
                "vertical-align": "sub",
                "&:before": {
                  "display": "inline-block",
                  "transform": "scale(1, 1)",
                  "transition": "all 0.25s ease-in-out"
                }
              }
            },
            ".collapsed": {
              ".dropdown-menu .dropdown-item:before": {
                "display": "none"
              },
              ".dropdown .dropdown-menu .dropdown-item": {
                "padding": "0.235em 1.5em 0.235em 1.5em !important",
                "transition": "none",
                "margin": "0 !important"
              }
            },
            ".navbar": {
              "min-height": "70px",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "border-bottom-width": "0",
              "@media (max-width: 992px)": {
                "min-height": "30px",
                "max-height": "none"
              },
              "&:not(.navbar-short)": {},
              "&.opened": {
                "transition": "all 0.3s"
              },
              ".dropdown-item": {
                "padding": "0",
                "margin": "8px 0"
              },
              ".navbar-logo img": {
                "max-width": "62px",
                "min-height": "62px",
                "object-fit": "contain",
                "border-radius": "100% !important"
              },
              ".navbar-collapse": {
                "justify-content": "center",
                "& when (@showLogo), (@showBrand)": {
                  "justify-content": "flex-end"
                },
                "z-index": "1"
              },
              "&.collapsed": {
                "justify-content": "center",
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto"
                  }
                },
                "ul.navbar-nav": {
                  "li": {
                    "margin": "auto"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0.25rem 1.5rem",
                  "text-align": "left"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "@media (max-width: 991px)": {
                ".nav-item": {
                  "padding": ".5rem 0"
                },
                ".navbar-collapse": {
                  "padding": "34px 0",
                  "border-radius": "16px",
                  "width": "100%"
                },
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  "padding": "6px 0 6px 15px",
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto",
                    "margin-top": "-0.4rem"
                  }
                },
                ".navbar-logo": {
                  "img": {
                    "height": "3rem !important"
                  }
                },
                "ul.navbar-nav": {
                  "overflow": "hidden",
                  "li": {
                    "margin": "0"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0 !important",
                  "margin": "0",
                  "margin-top": "8px",
                  "text-align": "left"
                },
                ".navbar-brand": {
                  "flex-shrink": "initial",
                  "flex-basis": "auto",
                  "word-break": "break-word",
                  "padding-right": "0",
                  "width": "100%",
                  "justify-content": "space-between"
                },
                ".navbar-toggler": {
                  "flex-basis": "auto"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "&.navbar-short": {
                "min-height": "60px",
                ".navbar-logo": {
                  "img": {
                    "height": "2.5rem !important"
                  }
                },
                ".navbar-brand": {
                  "min-height": "60px",
                  "padding": "0"
                }
              }
            },
            ".navbar-brand": {
              "min-height": "70px",
              "flex-shrink": "0",
              "align-items": "center",
              "margin-right": "0",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "word-break": "break-word",
              "z-index": "1",
              ".navbar-caption": {
                "line-height": "inherit !important",
                "font-weight": "400"
              },
              ".navbar-logo a": {
                "outline": "none"
              }
            },
            ".dropdown-item.active, .dropdown-item:active": {
              "background-color": "transparent"
            },
            ".navbar-expand-lg .navbar-nav .nav-link": {
              "padding": "6px 16px !important"
            },
            ".nav-dropdown .link.dropdown-toggle": {
              "margin-right": "1.667em",
              "&[aria-expanded=\"true\"]": {
                "margin-right": "0",
                "padding": "0.667em 1.667em"
              }
            },
            ".navbar .dropdown.open > .dropdown-menu": {
              "display": "block"
            },
            "ul.navbar-nav": {
              "flex-wrap": "wrap",
              "padding": "0"
            },
            ".navbar-buttons": {
              "text-align": "center",
              "min-width": "170px"
            },
            "button.navbar-toggler": {
              "outline": "none",
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "cursor": "pointer",
              "transition": "all 0.2s",
              "position": "relative",
              "align-self": "center",
              "color": "@menuBgColor",
              "background": "@hamburger",
              ".hamburger span": {
                "position": "absolute",
                "right": "10px",
                "margin-top": "14px",
                "width": "26px",
                "height": "2px",
                "border-right": "5px",
                "background-color": "@hamburgerColor",
                "&:nth-child(1)": {
                  "top": "0",
                  "transition": "all 0.2s"
                },
                "&:nth-child(2)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(3)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(4)": {
                  "top": "16px",
                  "transition": "all 0.2s"
                }
              }
            },
            "nav.opened .hamburger span": {
              "&:nth-child(1)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              },
              "&:nth-child(2)": {
                "transform": "rotate(45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(3)": {
                "transform": "rotate(-45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(4)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              }
            },
            "a.nav-link": {
              "display": "flex",
              "align-items": "center",
              "justify-content": "flex-start"
            },
            ".icons-menu": {
              "flex-wrap": "nowrap",
              "display": "flex",
              "justify-content": "center",
              "padding": "0",
              "text-align": "center",
              "margin-bottom": "35px"
            },
            "@media screen and (~'-ms-high-contrast: active'), (~'-ms-high-contrast: none')": {
              ".navbar": {
                "height": "70px",
                "&.opened": {
                  "height": "auto"
                }
              },
              ".nav-item .nav-link:hover::before": {
                "width": "175%",
                "max-width": "calc(100% ~\"+\" 2rem)",
                "left": "-1rem"
              }
            },
            ".navbar-dropdown .navbar-logo": {
              "margin-right": "10px"
            },
            ".navbar-caption:hover": {
              "color": "@primaryColor"
            },
            ".dropdown-menu.dropdown-submenu": {
              "@media (min-width: 992px)": {
                "left": "175px !important",
                "top": "-45% !important"
              }
            },
            ".text_widget": {
              "margin-bottom": "32px",
              "a": {
                "transition": "all 0.3s ease-out",
                "&:hover, &:focus": {
                  "opacity": ".8"
                }
              }
            },
            "@media (min-width: 992px)": {
              ".navbar-nav.nav-dropdown": {
                "display": "-webkit-flex",
                "width": "100%",
                "justify-content": "flex-start",
                "min-width": "200px",
                "padding-left": "48px"
              }
            },
            ".navbar-caption": {
              "color": "#ffffff"
            },
            ".mbr-section-subtitle, .text_widget, .mbr-section-btn": {
              "text-align": "center"
            },
            "a[class*=\"text-\"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption):hover": {
              "background-image": "none"
            }
          },
          "_name": "menu01",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"menu menu01 progressm5\" group=\"Menu\" plugins=\"DropDown, TouchSwipe\" always-top global once=\"menu\" not-draggable position-absolute>\n\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" name=\"fullWidth\" title=\"Full Width\" checked>\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Logo\" name=\"showLogo\">\n        <input type=\"checkbox\" title=\"Brand Name\" name=\"showBrand\">\n        <input type=\"checkbox\" title=\"Menu Items\" name=\"showItems\" condition=\"false\">\n        <input type=\"color\" title=\"Items Active Color\" name=\"itemsActive\" value=\"#078efb\" condition=\"showItems\">\n        <input type=\"color\" title=\"Items Active BG\" name=\"itemsBg\" value=\"#252525\" condition=\"showItems\">\n        <input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\" checked>\n        <input type=\"checkbox\" title=\"Icons\" name=\"showIcons\" checked>\n        <input type=\"range\" title=\"Amount\" name=\"iconsAmount\" min=\"0\" max=\"2\" step=\"1\" value=\"2\" condition=\"showIcons\">\n        <input type=\"color\" title=\"Icons Color\" name=\"iconsColor\" value=\"#0844ff\" condition=\"showIcons\">\n        <header>Styles</header>\n        <input type=\"checkbox\" title=\"Sticky\" name=\"sticky\">\n        <input type=\"checkbox\" title=\"Collapsed\" name=\"collapsed\" condition=\"false\">\n        <input type=\"checkbox\" title=\"Transparent\" name=\"transparent\">\n        <input type=\"range\" title=\"Opacity\" name=\"opacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"1\" condition=\"transparent\">\n        <input type=\"color\" title=\"Color Menu\" name=\"menuBgColor\" value=\"#060606\">\n        <input type=\"color\" title=\"Hamburger\" name=\"hamburgerColor\" value=\"#078efb\">\n        <input type=\"color\" title=\"Hamburger Container\" name=\"hamburger\" value=\"#252525\">\n    </mbr-parameters>\n\n    <nav class=\"navbar navbar-dropdown\" mbr-class=\"{'navbar-fixed-top':sticky,\n                     'navbar-expand-lg':!collapsed,\n                     'collapsed':collapsed}\">\n        <div class=\"menu_box\" mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n            <div class=\"navbar-brand d-flex\">\n                <span mbr-if=\"showLogo\" class=\"navbar-logo\">\n                    <a href=\"page4.html#custom-html-n\">\n                        <img src=\"@PROJECT_PATH@/assets/images/flux_dev_a_vibrant_banner_featuring_a_stunning_anime_girl_syna-124x82.jpg\" alt=\"Mobirise\" mbr-style=\"{'height': logoSize + 'rem'}\">\n                    </a>\n                </span>\n                <span mbr-if=\"showBrand\" mbr-buttons mbr-theme-style=\"display-7\" class=\"navbar-caption-wrap\" data-toolbar=\"-mbrBtnMove,-mbrBtnAdd,-mbrBtnRemove\"><a class=\"navbar-caption\" data-app-selector=\".navbar-caption\" href=\"@THEME_PATH@/components/index.html\" data-app-placeholder=\"Type Text\">VA</a></span>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <div class=\"hamburger\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul mbr-menu class=\"navbar-nav nav-dropdown\" mbr-theme-style=\"display-4\" mbr-class=\"{'nav-right': !showButtons,'navbar-nav-top-padding': isPublish && !showBrand && !showLogo}\"><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"index.html#header02-1\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">SYNTHIA CHAT</a>\n                    </li>\n                    <li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page4.html#custom-html-n\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">THE GREEK&nbsp;</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page1.html#custom-html-2\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Prediction Asst</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page6.html#custom-html-10\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Under 21 FunBet</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page9.html#custom-html-1h\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Download/Subscribe</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"RoadmapWhitepaper.html#custom-html-12\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Whitepaper</a></li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page3.html#list02-b\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Laws</a>\n                    </li></ul>\n                <div mbr-buttons mbr-theme-style=\"display-4\" class=\"mbr-section-btn-main\" mbr-if=\"showButtons\" role=\"tablist\"><a class=\"btn btn-success-outline\" href=\"https://mobiri.se\" data-app-placeholder=\"Type Text\">\n                        Get started\n                    </a></div>\n                <div class=\"icons-menu-main\" mbr-if=\"showIcons\">\n                    <a class=\"iconfont-wrapper\" href=\"https://x.com/SYNA_AI_Sports\" target=\"_blank\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-macos socicon\"></span>\n                    </a>\n                    <a class=\"iconfont-wrapper\" href=\"https://mobiri.se\" target=\"_blank\" mbr-if=\"iconsAmount > 1\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-telegram socicon\"></span>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </nav>\n</section>",
          "_JSplaceholders": [],
          "_PHPplaceholders": [],
          "_anchor": "menu01-q",
          "_isUserblock": true,
          "_cid": "uFxNausSY5",
          "_protectedParams": [],
          "_global": true,
          "_once": "menu",
          "_params": {}
        },
        {
          "alias": false,
          "_styles": {
            "padding-top": "(@paddingTop * 1rem)",
            "padding-bottom": "(@paddingBottom * 1rem)",
            "@min-height": "90px",
            "@min-height-small": "@min-height / 2",
            "& when (@bg-type = \"color\")": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = \"image\")": {
              "background-image": "url(@bg-value)",
              "& when (@overlay)": {
                ".mbr-overlay": {
                  "background": "@overlayColor",
                  "opacity": "@overlayOpacity"
                }
              }
            },
            ".item:focus, span:focus": {
              "outline": "none"
            },
            ".container-fluid": {
              "padding-left": "0",
              "padding-right": "0",
              "overflow": "hidden"
            },
            ".loop-container": {
              "padding": "10px 0"
            },
            ".item": {
              "font-weight": "700",
              "color": "@contentColor",
              "min-height": "@min-height",
              "@media (max-width: 768px)": {
                "min-height": "@min-height-small"
              }
            }
          },
          "_name": "features10",
          "_sourceTheme": "tradem5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"features10 tradem5\" group=\"Gallery\" mbr-class=\"{'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"10\" step=\"1\" value=\"7\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"10\" step=\"1\" value=\"1\">\n        <header>Animated Text Settings</header>\n        <select title=\"Font style\" name=\"linesTitle\">\n            <option value=\"title1\" selected>Title 1</option>\n            <option value=\"title2\">Title 2</option>\n        </select>\n        <input type=\"text\" title=\"Line content 1 <br> (For the best experience, please write at least 100 characters)\" inline=\"\" name=\"animatedLine1\" value=\"SYNA AI PREDICTION ASSISTANT.....................\">\n        <input type=\"range\" inline title=\"Line speed\" name=\"speed\" min=\"0.01\" max=\"0.09\" step=\"0.01\" value=\"0.09\">\n        <select title=\"Direction\" name=\"direction\">\n            <option value=\"-1\" selected>Left</option>\n            <option value=\"1\">Right</option>\n        </select>\n        <input type=\"color\" title=\"Content color\" value=\"#aef800\" name=\"contentColor\" selected>\n        <header>Background</header>\n        <fieldset type=\"background\" parallax name=\"bg\" required>\n            <input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/background1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#150764\" selected>\n        </fieldset>\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" checked condition=\"bg.type !== 'color'\">\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#f7f7f7\" condition=\"overlay && bg.type !== 'color'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.7\" condition=\"overlay && bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type!== 'color'\" mbr-style=\"{'opacity': overlayOpacity, 'background-color': overlayColor}\">\n    </div>\n    <div class=\"container-fluid\">\n\n        <div class=\"loop-container\">\n            <div class=\"item\" mbr-class=\"{'display-1':linesTitle=='title1','display-2':linesTitle=='title2'}\" data-linewords=\"{{animatedLine1}}\" data-direction=\"{{direction}}\" data-speed=\"{{speed}}\"></div>\n            <div class=\"item\" mbr-class=\"{'display-1':linesTitle=='title1','display-2':linesTitle=='title2'}\" data-linewords=\"{{animatedLine1}}\" data-direction=\"{{direction}}\" data-speed=\"{{speed}}\"></div>\n        </div>\n\n    </div>\n</section>",
          "_anchor": "features10-3",
          "_isUserblock": true,
          "_cid": "uFptXKqrXI",
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        },
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>SYNAAI PREDICTION ASSISTANT</title>\n    <style>\n        body {\n            font-family: monospace;\n            background-color: black;\n            color: cyan;\n            text-align: center;\n        }\n        .container {\n            max-width: 800px;\n            margin: auto;\n            padding: 20px;\n            border: 2px solid cyan;\n            border-radius: 10px;\n            animation: borderColorChange 5s infinite;\n        }\n        @keyframes borderColorChange {\n            0% { border-color: blue; }\n            20% { border-color: red; }\n            40% { border-color: green; }\n            60% { border-color: yellow; }\n            80% { border-color: purple; }\n            100% { border-color: burgundy; }\n        }\n        select, button {\n            padding: 10px;\n            background: black;\n            color: cyan;\n            border: 2px solid cyan;\n            margin: 5px;\n        }\n        .games, .fun-bets {\n            margin-top: 20px;\n            padding: 15px;\n            border: 2px solid cyan;\n            background: black;\n            max-height: 300px;\n            overflow-y: auto;\n        }\n        .team-logo {\n            width: 50px;\n            height: auto;\n        }\n        @keyframes flashBackground {\n            0% { background-color: red; }\n            25% { background-color: blue; }\n            50% { background-color: purple; }\n            75% { background-color: yellow; }\n            100% { background-color: green; }\n        }\n        .flash {\n            animation: flashBackground 5s infinite;\n        }\n    </style>\n    [JS_CODE_0]\n    [JS_CODE_1]\n\n\n    <div class=\"container\">\n        <h2>SYNAAI PREDICTION ASSISTANT</h2>\n        <select id=\"sport-select\">\n            <option value=\"\">--Select Sport--</option>\n                <option value=\"football/nfl\">NFL</option>\n                <option value=\"basketball/nba\">NBA</option>\n                <option value=\"baseball/mlb\">MLB</option>\n                <option value=\"hockey/nhl\">NHL</option>\n                <option value=\"basketball/wnba\">WNBA</option>\n                <option value=\"football/ncaaf\">NCAAF</option>\n                <option value=\"basketball/mens-college-basketball\">NCAAB</option>\n                <option value=\"mma/ufc\">MMA</option>\n        </select>\n        <div class=\"games\">\n            <h3>Today's Games and Predictions</h3>\n            <div id=\"games-content\">Fetching game data...</div>\n        </div>\n        <div class=\"fun-bets\">\n            <h3>Selected Bets</h3>\n            <ul id=\"fun-bet-content\"></ul>\n            <button onclick=\"clearFunBets()\">Clear</button>\n        </div>\n    </div>\n\n\n",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_JSplaceholders": [
            "<script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>",
            "<script>\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            document.getElementById(\"sport-select\").addEventListener(\"change\", fetchGames);\n        });\n\n        async function fetchGames() {\n            const sport = document.getElementById(\"sport-select\").value;\n            if (!sport) return;\n            try {\n                const response = await axios.get(`https://site.api.espn.com/apis/site/v2/sports/${sport}/scoreboard`);\n                if (!response.data || !response.data.events) throw new Error(\"No games available\");\n                document.getElementById(\"games-content\").innerHTML = response.data.events.map(event => {\n                    const competitors = event.competitions[0].competitors;\n                    const team1 = competitors[0].team;\n                    const team2 = competitors[1].team;\n                    const odds1 = Math.floor(Math.random() * 100) + 1;\n                    const odds2 = 100 - odds1;\n                    const favoriteTeam = odds1 > odds2 ? team1 : team2;\n                    const favoriteOdds = Math.max(odds1, odds2);\n                    const spread = (Math.random() * 10).toFixed(1);\n                    const flashClass = favoriteOdds > 60 ? 'flash' : '';\n                    return `\n                        <div class=\"${flashClass}\">\n                            <p>\n                                <img src=\"${team1.logo || ''}\" class=\"team-logo\" alt=\"${team1.displayName} logo\">\n                                <strong>${favoriteTeam.displayName}</strong>\n                            </p>\n                            <p>Prediction: ${favoriteTeam.displayName} ${favoriteOdds}%</p>\n                            <p>Spread: ${favoriteTeam.displayName} -${spread}</p>\n                            <button onclick=\"addToFunBets('${favoriteTeam.displayName}')\">Select</button>\n                            <a href=\"https://sportsbook.draftkings.com/leagues/${sport}\" target=\"_blank\">\n                                <button>Bet</button>\n                            </a>\n                            <hr>\n                        </div>\n                    `;\n                }).join('');\n            } catch (error) {\n                console.error(\"Error fetching game data:\", error);\n                document.getElementById(\"games-content\").innerHTML = \"Error fetching game data. Please try again later.\";\n            }\n        }\n\n        function addToFunBets(game) {\n            const funBetContent = document.getElementById(\"fun-bet-content\");\n            let li = document.createElement(\"li\");\n            li.textContent = game;\n            funBetContent.appendChild(li);\n        }\n\n        function clearFunBets() {\n            document.getElementById(\"fun-bet-content\").innerHTML = \"\";\n        }\n    </script>"
          ],
          "_PHPplaceholders": [],
          "_params": {},
          "_anchor": "custom-html-2"
        },
        {
          "alias": false,
          "_styles": {
            "& when not (@fullScreen)": {
              "padding-top": "(@paddingTop * 1rem)",
              "padding-bottom": "(@paddingBottom * 1rem)"
            },
            "& when (@bg-type = 'color')": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = 'image')": {
              "background-image": "url(@bg-value)"
            },
            ".mbr-fallback-image.disabled": {
              "display": "none"
            },
            ".mbr-fallback-image": {
              "display": "block",
              "background-size": "cover",
              "background-position": "center center",
              "width": "100%",
              "height": "100%",
              "position": "absolute",
              "top": "0",
              "& when (@bg-type = 'video')": {
                "background-image": "url(@fallBackImage)"
              }
            },
            ".content-wrapper": {
              ".mbr-section-title": {
                "margin-bottom": "48px",
                "@media (max-width: 992px)": {
                  "margin-bottom": "32px"
                },
                "span": {
                  "color": "@title"
                }
              },
              ".social-wrapper": {
                ".social-wrap": {
                  "display": "inline-flex",
                  "flex-wrap": "wrap",
                  "height": "100%",
                  "justify-content": "center",
                  ".soc-item": {
                    "display": "inline-flex",
                    "align-items": "center",
                    "justify-content": "center",
                    "padding": "14px 16px",
                    "background-color": "@socBg",
                    "transition": "all 0.3s ease-in-out",
                    "margin": "5px",
                    "&:hover, &:focus": {
                      "transform": "scale(1.05)"
                    },
                    "a": {
                      "display": "block",
                      ".mbr-iconfont": {
                        "display": "block",
                        "color": "@socColor",
                        "font-size": "22px",
                        "width": "22px",
                        "height": "22px"
                      }
                    },
                    ".mbr-desc": {
                      "margin-left": "10px",
                      "margin-bottom": "0"
                    }
                  }
                }
              }
            },
            ".mbr-section-title": {
              "color": "#ffffff"
            },
            ".mbr-desc": {
              "color": "#aef800"
            },
            ".mbr-section-title, .social-wrapper": {
              "text-align": "center",
              "color": "#aef800"
            }
          },
          "_name": "contacts01",
          "_sourceTheme": "tradem5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"contacts01 tradem5\" group=\"Contacts\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" title=\"Full Screen\" name=\"fullScreen\">\n        <input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\">\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"12\" step=\"1\" value=\"5\" condition=\"fullScreen == false\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"12\" step=\"1\" value=\"5\" condition=\"fullScreen == false\">\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Title\" name=\"showTitle\" checked>\n        <input type=\"color\" title=\"Secondary Color\" value=\"#bcfe1e\" name=\"title\" condition=\"showTitle\">\n        <input type=\"checkbox\" title=\"Social\" name=\"showSocial\" checked>\n        <input type=\"range\" inline title=\"Social Amount\" name=\"soc\" min=\"1\" max=\"6\" step=\"1\" value=\"2\" condition=\"showSocial\">\n        <input type=\"checkbox\" title=\"Social Description\" name=\"showDesc\" condition=\"showSocial\" checked>\n        <input type=\"color\" title=\"Social Color\" value=\"#aef800\" name=\"socColor\" condition=\"showSocial\" selected>\n        <input type=\"color\" title=\"Social BG\" value=\"#5a1ddd\" name=\"socBg\" condition=\"showSocial\" selected>\n        <header>Background</header>\n        <fieldset type=\"background\" name=\"bg\" parallax>\n            <input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/background1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#080813\" selected>\n        </fieldset>\n        <header condition=\"bg.type === 'video'\">Fallback Image</header>\n        <input type=\"image\" title=\"Fallback Image\" value=\"@PROJECT_PATH@/assets/images/background1.jpg\" name=\"fallBackImage\" condition=\"bg.type === 'video'\">\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\" checked>\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#080813\" condition=\"overlay && bg.type !== 'color'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.7\" condition=\"overlay && bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-fallback-image disabled\" mbr-if=\"bg.type == 'video'\"></div>\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type !== 'color'\" opacity=\"{{overlayOpacity}}\" bg-color=\"{{overlayColor}}\"></div>\n\n    <div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"content-wrapper\">\n                    <h2 class=\"mbr-section-title mbr-fonts-style\" data-app-selector=\".mbr-section-title, .social-wrapper\" mbr-theme-style=\"display-7\" mbr-if=\"showTitle\"><p><b>&nbsp; Please Be Patient , We are working to improve her Win Rate!!! **Please Bet Responsibly**&nbsp; &nbsp;(1-800-GAMBLER)</b><br><b>Predictions: Games Flashing Synthia has determined to have&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>61% chance of winning !!!!!!</b><b><a href=\"page4.html#custom-html-25\" class=\"text-primary\"><b>SURVIVOR</b></a></b></p></h2>\n                    <div class=\"social-wrapper\" mbr-if=\"showSocial\">\n                        <div class=\"social-wrap\">\n                            <div class=\"soc-item\">\n                                <a href=\"https://x.com/SYNA_AI_Sports\">\n                                    <span mbr-icon class=\"mbr-iconfont socicon-macos socicon\" style></span>\n                                </a>\n                                <p class=\"mbr-desc mbr-fonts-style\" data-app-selector=\".mbr-desc\" mbr-theme-style=\"display-4\" mbr-if=\"showDesc\">\n                                    X.com</p>\n                            </div>\n                            <div class=\"soc-item\" mbr-if=\"soc > 1\">\n                                <a href=\"#\">\n                                    <span mbr-icon class=\"mbr-iconfont mobi-mbri-home mobi-mbri\"></span>\n                                </a>\n                                <p class=\"mbr-desc mbr-fonts-style\" data-app-selector=\".mbr-desc\" mbr-theme-style=\"display-4\" mbr-if=\"showDesc\">\n                                    <a href=\"index.html#header01-1\" class=\"text-primary\">HOME</a></p>\n                            </div>\n                            <div class=\"soc-item\" mbr-if=\"soc > 2\">\n                                <a href=\"#\">\n                                    <span mbr-icon class=\"mbr-iconfont socicon socicon-discord\"></span>\n                                </a>\n                                <p class=\"mbr-desc mbr-fonts-style\" data-app-selector=\".mbr-desc\" mbr-theme-style=\"display-4\" mbr-if=\"showDesc\">\n                                    Discord\n                                </p>\n                            </div>\n                            <div class=\"soc-item\" mbr-if=\"soc > 3\">\n                                <a href=\"#\">\n                                    <span mbr-icon class=\"mbr-iconfont socicon socicon-tiktok\"></span>\n                                </a>\n                                <p class=\"mbr-desc mbr-fonts-style\" data-app-selector=\".mbr-desc\" mbr-theme-style=\"display-4\" mbr-if=\"showDesc\">\n                                    TikTok\n                                </p>\n                            </div>\n                            <div class=\"soc-item\" mbr-if=\"soc > 4\">\n                                <a href=\"#\">\n                                    <span mbr-icon class=\"mbr-iconfont socicon socicon-linkedin\"></span>\n                                </a>\n                                <p class=\"mbr-desc mbr-fonts-style\" data-app-selector=\".mbr-desc\" mbr-theme-style=\"display-4\" mbr-if=\"showDesc\">\n                                    LinkedIn\n                                </p>\n                            </div>\n                            <div class=\"soc-item\" mbr-if=\"soc > 5\">\n                                <a href=\"#\">\n                                    <span mbr-icon class=\"mbr-iconfont socicon socicon-youtube\"></span>\n                                </a>\n                                <p class=\"mbr-desc mbr-fonts-style\" data-app-selector=\".mbr-desc\" mbr-theme-style=\"display-4\" mbr-if=\"showDesc\">\n                                    YouTube\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>",
          "_anchor": "contacts01-4",
          "_isUserblock": true,
          "_cid": "uFpu01Kbq2",
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        }
      ]
    },
    "page3.html": {
      "settings": {
        "title": "STATE LAWS AND FEDERAL",
        "order": "4"
      },
      "components": [
        {
          "alias": false,
          "_styles": {
            ".navbar-dropdown": {
              "& when not (@transparent)": {
                "background-color": "@menuBgColor !important"
              },
              "& when (@transparent)": {
                "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
              },
              "padding": "0",
              "& when (@sticky)": {
                "position": "absolute !important"
              }
            },
            "background-color": "transparent",
            ".navbar.navbar-expand-lg .dropdown": {
              ".dropdown-menu": {
                "& when not (@transparent)": {
                  "background-color": "@menuBgColor !important"
                },
                "& when (@transparent)": {
                  "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
                },
                ".dropdown-submenu": {
                  "margin": "0",
                  "left": "100%"
                },
                "background": "@menuBgColor"
              }
            },
            ".menu_box": {
              "flex-wrap": "nowrap",
              "@media (max-width: 991px)": {
                ".navbar.opened, .navbar-collapse": {
                  "background-color": "@menuBgColor !important",
                  "transition": "all 0s ease 0s"
                },
                "flex-direction": "column",
                "align-items": "flex-start"
              }
            },
            "& when not (@sticky)": {
              ".navbar-dropdown": {
                "position": "relative !important"
              }
            },
            "& when (@sticky)": {
              "z-index": "1000",
              "width": "100%",
              "nav.navbar": {
                "position": "fixed",
                "padding-top": "1rem",
                "padding-bottom": "1rem"
              }
            },
            ".icons-menu-main": {
              "display": "flex",
              "flex-wrap": "wrap",
              "min-width": "150px",
              "margin-left": "24px",
              "@media (max-width: 991px)": {
                "min-width": "auto",
                "max-width": "100%",
                "margin": "1rem 0 1rem 1rem"
              }
            },
            ".mbr-section-btn-main": {
              "@media (max-width: 991px)": {
                "margin-top": "1rem"
              },
              ".btn": {
                "margin": "8px",
                "min-width": "120px",
                "white-space": "nowrap"
              }
            },
            ".btn": {
              "min-height": "auto",
              "box-shadow": "none",
              "margin-top": "0",
              "&:hover": {
                "box-shadow": "none"
              }
            },
            ".nav-item": {
              "margin": "4px 0",
              "@media (min-width: 992px)": {
                "margin": "4px 40px 4px 0"
              },
              "& when (@showLogo), (@showBrand)": {
                "@media (min-width: 992px)": {
                  "margin": "4px 0"
                }
              },
              "@media (max-width: 991px)": {
                "margin": "0 !important"
              },
              ".nav-link": {
                "display": "flex",
                "justify-content": "center",
                "padding": "12px",
                "transition": "all 0.3s ease-out",
                "border-radius": "4px !important",
                "border": "1px solid transparent",
                "position": "relative",
                "opacity": "1",
                "@media (max-width: 992px)": {
                  "justify-content": "flex-start"
                },
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "bottom": "-10px",
                  "width": "0",
                  "height": "2px",
                  "background-color": "@itemsActive",
                  "transition": "all 0.3s ease-out"
                },
                "&:hover, &:focus": {
                  "background-color": "@itemsBg",
                  "color": "@itemsActive !important",
                  "&::before": {
                    "width": "80%"
                  }
                }
              }
            },
            ".dropdown-menu": {
              "border-radius": "0",
              "box-shadow": "none",
              "text-align": "left",
              "@media (min-width: 992px)": {
                "padding": "18px 34px 22px",
                "min-width": "250px",
                "top": "auto !important",
                "left": "-40px !important",
                "&.dropdown-submenu": {
                  "left": "215px !important",
                  "top": "-45% !important"
                }
              }
            },
            "@media (max-width: 991px)": {
              ".dropdown-menu .dropdown-toggle[data-toggle=\"dropdown-submenu\"]::after, .link.dropdown-toggle::after": {
                "display": "inline-block",
                "width": "7px",
                "height": "7px",
                "margin-left": ".5rem",
                "margin-bottom": "2px",
                "content": "\"\"",
                "border": "2px solid",
                "border-left": "none",
                "border-top": "none",
                "transform": "rotate(-45deg)",
                "right": "15px",
                "position": "absolute",
                "margin-top": "-2px"
              },
              ".show.dropdown-toggle[aria-expanded=\"true\"]::after": {
                "transform": "rotate(45deg)",
                "margin-top": "-4px"
              },
              ".offcanvas_box": {
                "display": "none"
              }
            },
            ".dropdown-item": {
              "border": "none",
              "font-weight": "300 !important"
            },
            ".nav-dropdown .link": {
              "font-weight": "400 !important",
              "padding": "0 !important",
              "margin": "0 !important"
            },
            ".nav-dropdown .link.dropdown-toggle::after": {
              "margin-left": "0.5rem",
              "margin-top": "0"
            },
            ".container": {
              "display": "flex",
              "margin": "auto"
            },
            ".iconfont-wrapper": {
              "color": "@iconsColor",
              "font-size": "26px",
              "margin-right": "10px",
              "margin-bottom": "5px",
              "&:last-child": {
                "margin-right": "0"
              },
              "transition": "all 0.3s ease-in-out",
              "&:hover": {
                ".mbr-iconfont": {
                  "opacity": ".7"
                }
              }
            },
            ".navbar-nav": {
              "@media (min-width: 992px)": {
                "margin": "0"
              }
            },
            ".dropdown-menu, .navbar.opened": {
              "background-color": "@transparent !important"
            },
            ".nav-item:focus, .nav-link:focus": {
              "outline": "none"
            },
            ".dropdown .dropdown-menu .dropdown-item": {
              "width": "auto",
              "transition": "all 0.25s ease-in-out",
              "&::after": {
                "right": "0.5rem"
              },
              ".mbr-iconfont": {
                "margin-right": "0.5rem",
                "vertical-align": "sub",
                "&:before": {
                  "display": "inline-block",
                  "transform": "scale(1, 1)",
                  "transition": "all 0.25s ease-in-out"
                }
              }
            },
            ".collapsed": {
              ".dropdown-menu .dropdown-item:before": {
                "display": "none"
              },
              ".dropdown .dropdown-menu .dropdown-item": {
                "padding": "0.235em 1.5em 0.235em 1.5em !important",
                "transition": "none",
                "margin": "0 !important"
              }
            },
            ".navbar": {
              "min-height": "70px",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "border-bottom-width": "0",
              "@media (max-width: 992px)": {
                "min-height": "30px",
                "max-height": "none"
              },
              "&:not(.navbar-short)": {},
              "&.opened": {
                "transition": "all 0.3s"
              },
              ".dropdown-item": {
                "padding": "0",
                "margin": "8px 0"
              },
              ".navbar-logo img": {
                "max-width": "62px",
                "min-height": "62px",
                "object-fit": "contain",
                "border-radius": "100% !important"
              },
              ".navbar-collapse": {
                "justify-content": "center",
                "& when (@showLogo), (@showBrand)": {
                  "justify-content": "flex-end"
                },
                "z-index": "1"
              },
              "&.collapsed": {
                "justify-content": "center",
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto"
                  }
                },
                "ul.navbar-nav": {
                  "li": {
                    "margin": "auto"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0.25rem 1.5rem",
                  "text-align": "left"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "@media (max-width: 991px)": {
                ".nav-item": {
                  "padding": ".5rem 0"
                },
                ".navbar-collapse": {
                  "padding": "34px 0",
                  "border-radius": "16px",
                  "width": "100%"
                },
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  "padding": "6px 0 6px 15px",
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto",
                    "margin-top": "-0.4rem"
                  }
                },
                ".navbar-logo": {
                  "img": {
                    "height": "3rem !important"
                  }
                },
                "ul.navbar-nav": {
                  "overflow": "hidden",
                  "li": {
                    "margin": "0"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0 !important",
                  "margin": "0",
                  "margin-top": "8px",
                  "text-align": "left"
                },
                ".navbar-brand": {
                  "flex-shrink": "initial",
                  "flex-basis": "auto",
                  "word-break": "break-word",
                  "padding-right": "0",
                  "width": "100%",
                  "justify-content": "space-between"
                },
                ".navbar-toggler": {
                  "flex-basis": "auto"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "&.navbar-short": {
                "min-height": "60px",
                ".navbar-logo": {
                  "img": {
                    "height": "2.5rem !important"
                  }
                },
                ".navbar-brand": {
                  "min-height": "60px",
                  "padding": "0"
                }
              }
            },
            ".navbar-brand": {
              "min-height": "70px",
              "flex-shrink": "0",
              "align-items": "center",
              "margin-right": "0",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "word-break": "break-word",
              "z-index": "1",
              ".navbar-caption": {
                "line-height": "inherit !important",
                "font-weight": "400"
              },
              ".navbar-logo a": {
                "outline": "none"
              }
            },
            ".dropdown-item.active, .dropdown-item:active": {
              "background-color": "transparent"
            },
            ".navbar-expand-lg .navbar-nav .nav-link": {
              "padding": "6px 16px !important"
            },
            ".nav-dropdown .link.dropdown-toggle": {
              "margin-right": "1.667em",
              "&[aria-expanded=\"true\"]": {
                "margin-right": "0",
                "padding": "0.667em 1.667em"
              }
            },
            ".navbar .dropdown.open > .dropdown-menu": {
              "display": "block"
            },
            "ul.navbar-nav": {
              "flex-wrap": "wrap",
              "padding": "0"
            },
            ".navbar-buttons": {
              "text-align": "center",
              "min-width": "170px"
            },
            "button.navbar-toggler": {
              "outline": "none",
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "cursor": "pointer",
              "transition": "all 0.2s",
              "position": "relative",
              "align-self": "center",
              "color": "@menuBgColor",
              "background": "@hamburger",
              ".hamburger span": {
                "position": "absolute",
                "right": "10px",
                "margin-top": "14px",
                "width": "26px",
                "height": "2px",
                "border-right": "5px",
                "background-color": "@hamburgerColor",
                "&:nth-child(1)": {
                  "top": "0",
                  "transition": "all 0.2s"
                },
                "&:nth-child(2)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(3)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(4)": {
                  "top": "16px",
                  "transition": "all 0.2s"
                }
              }
            },
            "nav.opened .hamburger span": {
              "&:nth-child(1)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              },
              "&:nth-child(2)": {
                "transform": "rotate(45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(3)": {
                "transform": "rotate(-45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(4)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              }
            },
            "a.nav-link": {
              "display": "flex",
              "align-items": "center",
              "justify-content": "flex-start"
            },
            ".icons-menu": {
              "flex-wrap": "nowrap",
              "display": "flex",
              "justify-content": "center",
              "padding": "0",
              "text-align": "center",
              "margin-bottom": "35px"
            },
            "@media screen and (~'-ms-high-contrast: active'), (~'-ms-high-contrast: none')": {
              ".navbar": {
                "height": "70px",
                "&.opened": {
                  "height": "auto"
                }
              },
              ".nav-item .nav-link:hover::before": {
                "width": "175%",
                "max-width": "calc(100% ~\"+\" 2rem)",
                "left": "-1rem"
              }
            },
            ".navbar-dropdown .navbar-logo": {
              "margin-right": "10px"
            },
            ".navbar-caption:hover": {
              "color": "@primaryColor"
            },
            ".dropdown-menu.dropdown-submenu": {
              "@media (min-width: 992px)": {
                "left": "175px !important",
                "top": "-45% !important"
              }
            },
            ".text_widget": {
              "margin-bottom": "32px",
              "a": {
                "transition": "all 0.3s ease-out",
                "&:hover, &:focus": {
                  "opacity": ".8"
                }
              }
            },
            "@media (min-width: 992px)": {
              ".navbar-nav.nav-dropdown": {
                "display": "-webkit-flex",
                "width": "100%",
                "justify-content": "flex-start",
                "min-width": "200px",
                "padding-left": "48px"
              }
            },
            ".navbar-caption": {
              "color": "#ffffff"
            },
            ".mbr-section-subtitle, .text_widget, .mbr-section-btn": {
              "text-align": "center"
            },
            "a[class*=\"text-\"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption):hover": {
              "background-image": "none"
            }
          },
          "_name": "menu01",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"menu menu01 progressm5\" group=\"Menu\" plugins=\"DropDown, TouchSwipe\" always-top global once=\"menu\" not-draggable position-absolute>\n\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" name=\"fullWidth\" title=\"Full Width\" checked>\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Logo\" name=\"showLogo\">\n        <input type=\"checkbox\" title=\"Brand Name\" name=\"showBrand\">\n        <input type=\"checkbox\" title=\"Menu Items\" name=\"showItems\" condition=\"false\">\n        <input type=\"color\" title=\"Items Active Color\" name=\"itemsActive\" value=\"#078efb\" condition=\"showItems\">\n        <input type=\"color\" title=\"Items Active BG\" name=\"itemsBg\" value=\"#252525\" condition=\"showItems\">\n        <input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\" checked>\n        <input type=\"checkbox\" title=\"Icons\" name=\"showIcons\" checked>\n        <input type=\"range\" title=\"Amount\" name=\"iconsAmount\" min=\"0\" max=\"2\" step=\"1\" value=\"2\" condition=\"showIcons\">\n        <input type=\"color\" title=\"Icons Color\" name=\"iconsColor\" value=\"#0844ff\" condition=\"showIcons\">\n        <header>Styles</header>\n        <input type=\"checkbox\" title=\"Sticky\" name=\"sticky\">\n        <input type=\"checkbox\" title=\"Collapsed\" name=\"collapsed\" condition=\"false\">\n        <input type=\"checkbox\" title=\"Transparent\" name=\"transparent\">\n        <input type=\"range\" title=\"Opacity\" name=\"opacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"1\" condition=\"transparent\">\n        <input type=\"color\" title=\"Color Menu\" name=\"menuBgColor\" value=\"#060606\">\n        <input type=\"color\" title=\"Hamburger\" name=\"hamburgerColor\" value=\"#078efb\">\n        <input type=\"color\" title=\"Hamburger Container\" name=\"hamburger\" value=\"#252525\">\n    </mbr-parameters>\n\n    <nav class=\"navbar navbar-dropdown\" mbr-class=\"{'navbar-fixed-top':sticky,\n                     'navbar-expand-lg':!collapsed,\n                     'collapsed':collapsed}\">\n        <div class=\"menu_box\" mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n            <div class=\"navbar-brand d-flex\">\n                <span mbr-if=\"showLogo\" class=\"navbar-logo\">\n                    <a href=\"page4.html#custom-html-n\">\n                        <img src=\"@PROJECT_PATH@/assets/images/flux_dev_a_vibrant_banner_featuring_a_stunning_anime_girl_syna-124x82.jpg\" alt=\"Mobirise\" mbr-style=\"{'height': logoSize + 'rem'}\">\n                    </a>\n                </span>\n                <span mbr-if=\"showBrand\" mbr-buttons mbr-theme-style=\"display-7\" class=\"navbar-caption-wrap\" data-toolbar=\"-mbrBtnMove,-mbrBtnAdd,-mbrBtnRemove\"><a class=\"navbar-caption\" data-app-selector=\".navbar-caption\" href=\"@THEME_PATH@/components/index.html\" data-app-placeholder=\"Type Text\">VA</a></span>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <div class=\"hamburger\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul mbr-menu class=\"navbar-nav nav-dropdown\" mbr-theme-style=\"display-4\" mbr-class=\"{'nav-right': !showButtons,'navbar-nav-top-padding': isPublish && !showBrand && !showLogo}\"><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"index.html#header02-1\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">SYNTHIA CHAT</a>\n                    </li>\n                    <li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page4.html#custom-html-n\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">THE GREEK&nbsp;</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page1.html#custom-html-2\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Prediction Asst</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page6.html#custom-html-10\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Under 21 FunBet</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page9.html#custom-html-1h\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Download/Subscribe</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"RoadmapWhitepaper.html#custom-html-12\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Whitepaper</a></li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page3.html#list02-b\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Laws</a>\n                    </li></ul>\n                <div mbr-buttons mbr-theme-style=\"display-4\" class=\"mbr-section-btn-main\" mbr-if=\"showButtons\" role=\"tablist\"><a class=\"btn btn-success-outline\" href=\"https://mobiri.se\" data-app-placeholder=\"Type Text\">\n                        Get started\n                    </a></div>\n                <div class=\"icons-menu-main\" mbr-if=\"showIcons\">\n                    <a class=\"iconfont-wrapper\" href=\"https://x.com/SYNA_AI_Sports\" target=\"_blank\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-macos socicon\"></span>\n                    </a>\n                    <a class=\"iconfont-wrapper\" href=\"https://mobiri.se\" target=\"_blank\" mbr-if=\"iconsAmount > 1\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-telegram socicon\"></span>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </nav>\n</section>",
          "_JSplaceholders": [],
          "_PHPplaceholders": [],
          "_anchor": "menu01-q",
          "_isUserblock": true,
          "_cid": "uFxNausSY5",
          "_protectedParams": [],
          "_global": true,
          "_once": "menu",
          "_params": {}
        },
        {
          "_name": "list02",
          "_sourceTheme": "carem5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"list02 carem5\" group=\"List\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" title=\"Full Screen\" name=\"fullScreen\">\n        <input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\">\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"12\" step=\"1\" value=\"10\" condition=\"fullScreen == false\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"12\" step=\"1\" value=\"0\" condition=\"fullScreen == false\">\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Title\" name=\"showTitle\" checked>\n        <input type=\"checkbox\" title=\"Text\" name=\"showText\" checked>\n        <input type=\"color\" title=\"List Marker Color\" value=\"#22654e\" name=\"marker\">\n        <header>Background</header>\n        <fieldset type=\"background\" name=\"bg\" parallax>\n            <input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/background2.jpg\" selected>\n            <input type=\"color\" title=\"Color\" value=\"#ffffff\">\n        </fieldset>\n        <header condition=\"bg.type === 'video'\">Fallback Image</header>\n        <input type=\"image\" title=\"Fallback Image\" value=\"@ADDONS_PATH@/carem5/components/_images/background1.jpg\" name=\"fallBackImage\" condition=\"bg.type === 'video'\">\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\" checked>\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#ffffff\" condition=\"overlay && bg.type !== 'color'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.3\" condition=\"overlay && bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-fallback-image disabled\" mbr-if=\"bg.type == 'video'\"></div>\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type !== 'color'\" opacity=\"{{overlayOpacity}}\" bg-color=\"{{overlayColor}}\"></div>\n\n    <div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n        <div class=\"row\" mbr-class=\"{'flex-row-reverse' : reverseContent}\">\n            <div class=\"col-12 col-lg-10\">\n                <div class=\"content-wrapper\">\n                    <h2 class=\"mbr-section-title mbr-fonts-style\" mbr-theme-style=\"display-1\" mbr-if=\"showTitle\" data-app-selector=\".mbr-section-title\"><b>\n                        Laws in your State </b><br><b>and </b><br><b>Federal Law !!!</b></h2>\n                    <p class=\"mbr-text mbr-fonts-style\" mbr-theme-style=\"display-7\" mbr-if=\"showText\" data-app-selector=\".mbr-text\"><b>&nbsp;<a href=\"page3.html#custom-html-d\" class=\"text-white\">State Laws .... Click</a> \n<br></b>\n<br>As you can imagine, the laws work differently for social gambling and full-scale professional gambling. Social gambling laws, particularly concerning sports betting, vary significantly across the United States. Social gambling typically refers to betting activities not conducted as a business, involving individuals who bet on equal terms without any party receiving a house advantage or profit beyond their personal winnings. However, the legality and definition of such activities differ by state.\n<br>\n<br>Social Gambling Definition &amp; Federal Law\n<br>Is gambling with your friends illegal? As a practical matter, prosecuting home poker games (where players have a strictly social connection) is rare. However, to avoid being surprised, it’s best to determine the home gambling laws in your area.\n<br>\n<br>What is social gambling? Social gambling is a game played primarily for fun or to socialize, typically among friends, family, neighbors, or co-workers. It takes place in a private location, not a public area or commercial venue/business.\n<br>\n<br>Why is it important whether something qualifies as “social gambling” or not? Because you face risks under federal and state laws for participating in or hosting home gambling events. State LEGAL? Social Gambling Stipulations Federal Laws Governing Gambling\n<br>                                                                                                                                                                      \n<br>\n<br>Federal Laws\n<br>\n<br>Federal Wire Act (1961): This act prohibits the operation of certain betting businesses, particularly focusing on the transmission of bets or wagering information across state lines. While initially aimed at curbing organized crime, its applicability has been debated, especially concerning non-sports-related gambling activities. ​\n<br>en.wikipedia.org\n<br>\n<br>Unlawful Internet Gambling Enforcement Act (UIGEA) of 2006: This legislation targets online gambling by prohibiting gambling businesses from knowingly accepting payments connected to unlawful internet bets or wagers. It specifically excludes certain activities like fantasy sports that meet particular criteria, skill games, and legal intrastate and intertribal gaming.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br></p><p></p><p><br></p><p></p><p></p><p><br></p><p><br></p><p></p><br><p><br></p><p></p><p><br></p><p></p>\n                </div>\n            </div>\n            <div class=\"col-12 col-lg-8\">\n                <ul class=\"list mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".list, .item-wrap\" data-multiline mbr-article></ul>\n            </div>\n        </div>\n    </div>\n</section>",
          "_styles": {
            "& when not (@fullScreen)": {
              "padding-top": "(@paddingTop * 1rem)",
              "padding-bottom": "(@paddingBottom * 1rem)"
            },
            "& when (@bg-type = 'color')": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = 'image')": {
              "background-image": "url(@bg-value)"
            },
            ".mbr-fallback-image.disabled": {
              "display": "none"
            },
            ".mbr-fallback-image": {
              "display": "block",
              "background-size": "cover",
              "background-position": "center center",
              "width": "100%",
              "height": "100%",
              "position": "absolute",
              "top": "0",
              "& when (@bg-type = 'video')": {
                "background-image": "url(@fallBackImage)"
              }
            },
            "& when (@fullWidth)": {
              ".container-fluid": {
                "padding": "0 60px",
                "@media (max-width: 992px)": {
                  "padding": "0 30px"
                }
              }
            },
            ".container": {
              "@media (max-width: 992px)": {
                "padding": "0 30px"
              }
            },
            ".row": {
              "justify-content": "center"
            },
            ".content-wrapper": {
              ".mbr-section-title": {
                "margin-bottom": "50px",
                "@media (max-width: 992px)": {
                  "margin-bottom": "40px"
                }
              },
              ".mbr-text": {
                "margin-bottom": "50px",
                "@media (max-width: 992px)": {
                  "margin-bottom": "40px"
                }
              }
            },
            ".list": {
              "padding": "0",
              "margin": "0",
              "list-style-type": "none",
              ".item-wrap": {
                "margin-bottom": "20px",
                "padding-left": "30px",
                "position": "relative",
                "&:last-child": {
                  "margin-bottom": "0"
                },
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "top": "10px",
                  "left": "0",
                  "width": "9px",
                  "height": "9px",
                  "background-color": "@marker"
                }
              },
              "color": "#144031"
            },
            ".mbr-section-title": {
              "color": "#ffffff"
            },
            ".mbr-text": {
              "color": "#ffffff",
              "text-align": "left"
            },
            ".list, .item-wrap": {
              "text-align": "right"
            },
            "P": {
              "text-align": "left"
            }
          },
          "_cid": "uFpyF34FsT",
          "_anchor": "list02-b",
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        },
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Social Gambling Laws</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n            padding: 20px;\n        }\n        .scroll-box {\n            width: 95%;\n            max-height: 80vh;\n            overflow-y: auto;\n            margin: auto;\n            border: 2px solid #4CAF50;\n            padding: 20px;\n            border-radius: 8px;\n            background: white;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n        }\n        th, td {\n            border: 1px solid #ddd;\n            padding: 10px;\n            text-align: left;\n        }\n        th {\n            background-color: #4CAF50;\n            color: white;\n            position: sticky;\n            top: 0;\n        }\n    </style>\n\n\n    <h2>Social Gambling Laws by State</h2>\n    <div class=\"scroll-box\">\n        <table>\n            <thead>\n                <tr>\n                    <th>State</th>\n                    <th>Sports Betting Legal</th>\n                    <th>Notable Stipulations</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr><td>Alabama</td><td>No</td><td>Social Gambling is generally illegal.</td></tr>\n                <tr><td>Alaska</td><td>No</td><td>Social Gambling is generally illegal.</td></tr>\n                <tr><td>Arizona</td><td>Yes</td><td>Sports betting legalized; social gambling allowed if no profit is made by the organizer.</td></tr>\n                <tr><td>Arkansas</td><td>Yes</td><td>Sports betting legalized; social gambling permitted under specific conditions.</td></tr>\n                <tr><td>California</td><td>No</td><td>Sports betting not legalized; social gambling laws vary by county.</td></tr>\n                <tr><td>Colorado</td><td>Yes</td><td>Sports betting legalized; social gambling allowed if no house profit.</td></tr>\n                <tr><td>Connecticut</td><td>Yes</td><td>Sports betting legalized; social gambling permitted with certain restrictions.</td></tr>\n                <tr><td>Delaware</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under specific conditions.</td></tr>\n                <tr><td>Florida</td><td>No</td><td>Sports betting not legalized; social gambling laws are restrictive.</td></tr>\n                <tr><td>Georgia</td><td>No</td><td>Sports betting not legalized; social gambling is illegal.</td></tr>\n                <tr><td>Hawaii</td><td>No</td><td>All forms of gambling, including social gambling, are illegal.</td></tr>\n                <tr><td>Idaho</td><td>No</td><td>Sports betting not legalized; social gambling is illegal.</td></tr>\n                <tr><td>Illinois</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under certain conditions.</td></tr>\n                <tr><td>Indiana</td><td>Yes</td><td>Sports betting legalized; social gambling permitted if no profit is made by the organizer.</td></tr>\n                <tr><td>Iowa</td><td>Yes</td><td>Sports betting legalized; social gambling allowed with specific restrictions.</td></tr>\n                <tr><td>Kansas</td><td>Yes</td><td>Sports betting legalized; social gambling permitted under certain conditions.</td></tr>\n                <tr><td>Kentucky</td><td>Yes</td><td>Sports betting legalized; social gambling laws are restrictive.</td></tr>\n                <tr><td>Louisiana</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under specific conditions.</td></tr>\n                <tr><td>Maine</td><td>Yes</td><td>Sports betting legalized; social gambling permitted with restrictions.</td></tr>\n                <tr><td>Maryland</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under certain conditions.</td></tr>\n                <tr><td>Massachusetts</td><td>Yes</td><td>Sports betting legalized; social gambling permitted if no profit is made by the organizer.</td></tr>\n                <tr><td>Michigan</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under specific conditions.</td></tr>\n                <tr><td>Minnesota</td><td>No</td><td>Sports betting not legalized; social gambling permitted under certain conditions.</td></tr>\n                <tr><td>Mississippi</td><td>Yes</td><td>Sports betting legalized; social gambling laws are restrictive.</td></tr>\n                <tr><td>Missouri</td><td>No</td><td>Sports betting not legalized; social gambling permitted under certain conditions.</td></tr>\n                <tr><td>Montana</td><td>Yes</td><td>Sports betting legalized; social gambling allowed with restrictions.</td></tr>\n                <tr><td>Nebraska</td><td>No</td><td>Sports betting not legalized; social gambling laws are restrictive.</td></tr>\n                <tr><td>Nevada</td><td>Yes</td><td>Sports betting legalized; social gambling permitted under certain conditions.</td></tr>\n                <tr><td>New Hampshire</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under specific conditions.</td></tr>\n                <tr><td>New Jersey</td><td>Yes</td><td>Sports betting legalized; social gambling permitted with restrictions.</td></tr>\n                <tr><td>New Mexico</td><td>No</td><td>Sports betting not legalized; social gambling laws are restrictive.</td></tr>\n                <tr><td>New York</td><td>Yes</td><td>Sports betting legalized; social gambling permitted under certain conditions.</td></tr>\n                <tr><td>North Carolina</td><td>Yes</td><td>Sports betting legalized; social gambling laws are restrictive.</td></tr>\n                <tr><td>North Dakota</td><td>No</td><td>Sports betting not legalized; social gambling permitted under certain conditions.</td></tr>\n                <tr><td>Ohio</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under specific conditions.</td></tr>\n                <tr><td>Oklahoma</td><td>No</td><td>Sports betting not legalized; social gambling laws are restrictive.</td></tr>\n                <tr><td>Oregon</td><td>Yes</td><td>Sports betting legalized; social gambling permitted with restrictions.</td></tr>\n                <tr><td>Pennsylvania</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under certain conditions.</td></tr>\n                <tr><td>Rhode Island</td><td>Yes</td><td>Sports betting legalized; social gambling permitted under specific conditions.</td></tr>\n                <tr><td>South Carolina</td><td>No</td><td>Sports betting not legalized; social gambling is illegal.</td></tr>\n                <tr><td>Wyoming</td><td>Yes</td><td>Sports betting legalized; social gambling allowed under specific conditions.</td></tr>\n            </tbody>\n        </table>\n    </div>\n\n\n",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_anchor": "custom-html-d",
          "_PHPplaceholders": [],
          "_JSplaceholders": []
        }
      ]
    },
    "page4.html": {
      "settings": {
        "title": "SYNTHIA AI full V2",
        "order": "1"
      },
      "components": [
        {
          "alias": false,
          "_styles": {
            ".navbar-dropdown": {
              "& when not (@transparent)": {
                "background-color": "@menuBgColor !important"
              },
              "& when (@transparent)": {
                "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
              },
              "padding": "0",
              "& when (@sticky)": {
                "position": "absolute !important"
              }
            },
            "background-color": "transparent",
            ".navbar.navbar-expand-lg .dropdown": {
              ".dropdown-menu": {
                "& when not (@transparent)": {
                  "background-color": "@menuBgColor !important"
                },
                "& when (@transparent)": {
                  "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
                },
                ".dropdown-submenu": {
                  "margin": "0",
                  "left": "100%"
                },
                "background": "@menuBgColor"
              }
            },
            ".menu_box": {
              "flex-wrap": "nowrap",
              "@media (max-width: 991px)": {
                ".navbar.opened, .navbar-collapse": {
                  "background-color": "@menuBgColor !important",
                  "transition": "all 0s ease 0s"
                },
                "flex-direction": "column",
                "align-items": "flex-start"
              }
            },
            "& when not (@sticky)": {
              ".navbar-dropdown": {
                "position": "relative !important"
              }
            },
            "& when (@sticky)": {
              "z-index": "1000",
              "width": "100%",
              "nav.navbar": {
                "position": "fixed",
                "padding-top": "1rem",
                "padding-bottom": "1rem"
              }
            },
            ".icons-menu-main": {
              "display": "flex",
              "flex-wrap": "wrap",
              "min-width": "150px",
              "margin-left": "24px",
              "@media (max-width: 991px)": {
                "min-width": "auto",
                "max-width": "100%",
                "margin": "1rem 0 1rem 1rem"
              }
            },
            ".mbr-section-btn-main": {
              "@media (max-width: 991px)": {
                "margin-top": "1rem"
              },
              ".btn": {
                "margin": "8px",
                "min-width": "120px",
                "white-space": "nowrap"
              }
            },
            ".btn": {
              "min-height": "auto",
              "box-shadow": "none",
              "margin-top": "0",
              "&:hover": {
                "box-shadow": "none"
              }
            },
            ".nav-item": {
              "margin": "4px 0",
              "@media (min-width: 992px)": {
                "margin": "4px 40px 4px 0"
              },
              "& when (@showLogo), (@showBrand)": {
                "@media (min-width: 992px)": {
                  "margin": "4px 0"
                }
              },
              "@media (max-width: 991px)": {
                "margin": "0 !important"
              },
              ".nav-link": {
                "display": "flex",
                "justify-content": "center",
                "padding": "12px",
                "transition": "all 0.3s ease-out",
                "border-radius": "4px !important",
                "border": "1px solid transparent",
                "position": "relative",
                "opacity": "1",
                "@media (max-width: 992px)": {
                  "justify-content": "flex-start"
                },
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "bottom": "-10px",
                  "width": "0",
                  "height": "2px",
                  "background-color": "@itemsActive",
                  "transition": "all 0.3s ease-out"
                },
                "&:hover, &:focus": {
                  "background-color": "@itemsBg",
                  "color": "@itemsActive !important",
                  "&::before": {
                    "width": "80%"
                  }
                }
              }
            },
            ".dropdown-menu": {
              "border-radius": "0",
              "box-shadow": "none",
              "text-align": "left",
              "@media (min-width: 992px)": {
                "padding": "18px 34px 22px",
                "min-width": "250px",
                "top": "auto !important",
                "left": "-40px !important",
                "&.dropdown-submenu": {
                  "left": "215px !important",
                  "top": "-45% !important"
                }
              }
            },
            "@media (max-width: 991px)": {
              ".dropdown-menu .dropdown-toggle[data-toggle=\"dropdown-submenu\"]::after, .link.dropdown-toggle::after": {
                "display": "inline-block",
                "width": "7px",
                "height": "7px",
                "margin-left": ".5rem",
                "margin-bottom": "2px",
                "content": "\"\"",
                "border": "2px solid",
                "border-left": "none",
                "border-top": "none",
                "transform": "rotate(-45deg)",
                "right": "15px",
                "position": "absolute",
                "margin-top": "-2px"
              },
              ".show.dropdown-toggle[aria-expanded=\"true\"]::after": {
                "transform": "rotate(45deg)",
                "margin-top": "-4px"
              },
              ".offcanvas_box": {
                "display": "none"
              }
            },
            ".dropdown-item": {
              "border": "none",
              "font-weight": "300 !important"
            },
            ".nav-dropdown .link": {
              "font-weight": "400 !important",
              "padding": "0 !important",
              "margin": "0 !important"
            },
            ".nav-dropdown .link.dropdown-toggle::after": {
              "margin-left": "0.5rem",
              "margin-top": "0"
            },
            ".container": {
              "display": "flex",
              "margin": "auto"
            },
            ".iconfont-wrapper": {
              "color": "@iconsColor",
              "font-size": "26px",
              "margin-right": "10px",
              "margin-bottom": "5px",
              "&:last-child": {
                "margin-right": "0"
              },
              "transition": "all 0.3s ease-in-out",
              "&:hover": {
                ".mbr-iconfont": {
                  "opacity": ".7"
                }
              }
            },
            ".navbar-nav": {
              "@media (min-width: 992px)": {
                "margin": "0"
              }
            },
            ".dropdown-menu, .navbar.opened": {
              "background-color": "@transparent !important"
            },
            ".nav-item:focus, .nav-link:focus": {
              "outline": "none"
            },
            ".dropdown .dropdown-menu .dropdown-item": {
              "width": "auto",
              "transition": "all 0.25s ease-in-out",
              "&::after": {
                "right": "0.5rem"
              },
              ".mbr-iconfont": {
                "margin-right": "0.5rem",
                "vertical-align": "sub",
                "&:before": {
                  "display": "inline-block",
                  "transform": "scale(1, 1)",
                  "transition": "all 0.25s ease-in-out"
                }
              }
            },
            ".collapsed": {
              ".dropdown-menu .dropdown-item:before": {
                "display": "none"
              },
              ".dropdown .dropdown-menu .dropdown-item": {
                "padding": "0.235em 1.5em 0.235em 1.5em !important",
                "transition": "none",
                "margin": "0 !important"
              }
            },
            ".navbar": {
              "min-height": "70px",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "border-bottom-width": "0",
              "@media (max-width: 992px)": {
                "min-height": "30px",
                "max-height": "none"
              },
              "&:not(.navbar-short)": {},
              "&.opened": {
                "transition": "all 0.3s"
              },
              ".dropdown-item": {
                "padding": "0",
                "margin": "8px 0"
              },
              ".navbar-logo img": {
                "max-width": "62px",
                "min-height": "62px",
                "object-fit": "contain",
                "border-radius": "100% !important"
              },
              ".navbar-collapse": {
                "justify-content": "center",
                "& when (@showLogo), (@showBrand)": {
                  "justify-content": "flex-end"
                },
                "z-index": "1"
              },
              "&.collapsed": {
                "justify-content": "center",
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto"
                  }
                },
                "ul.navbar-nav": {
                  "li": {
                    "margin": "auto"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0.25rem 1.5rem",
                  "text-align": "left"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "@media (max-width: 991px)": {
                ".nav-item": {
                  "padding": ".5rem 0"
                },
                ".navbar-collapse": {
                  "padding": "34px 0",
                  "border-radius": "16px",
                  "width": "100%"
                },
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  "padding": "6px 0 6px 15px",
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto",
                    "margin-top": "-0.4rem"
                  }
                },
                ".navbar-logo": {
                  "img": {
                    "height": "3rem !important"
                  }
                },
                "ul.navbar-nav": {
                  "overflow": "hidden",
                  "li": {
                    "margin": "0"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0 !important",
                  "margin": "0",
                  "margin-top": "8px",
                  "text-align": "left"
                },
                ".navbar-brand": {
                  "flex-shrink": "initial",
                  "flex-basis": "auto",
                  "word-break": "break-word",
                  "padding-right": "0",
                  "width": "100%",
                  "justify-content": "space-between"
                },
                ".navbar-toggler": {
                  "flex-basis": "auto"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "&.navbar-short": {
                "min-height": "60px",
                ".navbar-logo": {
                  "img": {
                    "height": "2.5rem !important"
                  }
                },
                ".navbar-brand": {
                  "min-height": "60px",
                  "padding": "0"
                }
              }
            },
            ".navbar-brand": {
              "min-height": "70px",
              "flex-shrink": "0",
              "align-items": "center",
              "margin-right": "0",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "word-break": "break-word",
              "z-index": "1",
              ".navbar-caption": {
                "line-height": "inherit !important",
                "font-weight": "400"
              },
              ".navbar-logo a": {
                "outline": "none"
              }
            },
            ".dropdown-item.active, .dropdown-item:active": {
              "background-color": "transparent"
            },
            ".navbar-expand-lg .navbar-nav .nav-link": {
              "padding": "6px 16px !important"
            },
            ".nav-dropdown .link.dropdown-toggle": {
              "margin-right": "1.667em",
              "&[aria-expanded=\"true\"]": {
                "margin-right": "0",
                "padding": "0.667em 1.667em"
              }
            },
            ".navbar .dropdown.open > .dropdown-menu": {
              "display": "block"
            },
            "ul.navbar-nav": {
              "flex-wrap": "wrap",
              "padding": "0"
            },
            ".navbar-buttons": {
              "text-align": "center",
              "min-width": "170px"
            },
            "button.navbar-toggler": {
              "outline": "none",
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "cursor": "pointer",
              "transition": "all 0.2s",
              "position": "relative",
              "align-self": "center",
              "color": "@menuBgColor",
              "background": "@hamburger",
              ".hamburger span": {
                "position": "absolute",
                "right": "10px",
                "margin-top": "14px",
                "width": "26px",
                "height": "2px",
                "border-right": "5px",
                "background-color": "@hamburgerColor",
                "&:nth-child(1)": {
                  "top": "0",
                  "transition": "all 0.2s"
                },
                "&:nth-child(2)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(3)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(4)": {
                  "top": "16px",
                  "transition": "all 0.2s"
                }
              }
            },
            "nav.opened .hamburger span": {
              "&:nth-child(1)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              },
              "&:nth-child(2)": {
                "transform": "rotate(45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(3)": {
                "transform": "rotate(-45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(4)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              }
            },
            "a.nav-link": {
              "display": "flex",
              "align-items": "center",
              "justify-content": "flex-start"
            },
            ".icons-menu": {
              "flex-wrap": "nowrap",
              "display": "flex",
              "justify-content": "center",
              "padding": "0",
              "text-align": "center",
              "margin-bottom": "35px"
            },
            "@media screen and (~'-ms-high-contrast: active'), (~'-ms-high-contrast: none')": {
              ".navbar": {
                "height": "70px",
                "&.opened": {
                  "height": "auto"
                }
              },
              ".nav-item .nav-link:hover::before": {
                "width": "175%",
                "max-width": "calc(100% ~\"+\" 2rem)",
                "left": "-1rem"
              }
            },
            ".navbar-dropdown .navbar-logo": {
              "margin-right": "10px"
            },
            ".navbar-caption:hover": {
              "color": "@primaryColor"
            },
            ".dropdown-menu.dropdown-submenu": {
              "@media (min-width: 992px)": {
                "left": "175px !important",
                "top": "-45% !important"
              }
            },
            ".text_widget": {
              "margin-bottom": "32px",
              "a": {
                "transition": "all 0.3s ease-out",
                "&:hover, &:focus": {
                  "opacity": ".8"
                }
              }
            },
            "@media (min-width: 992px)": {
              ".navbar-nav.nav-dropdown": {
                "display": "-webkit-flex",
                "width": "100%",
                "justify-content": "flex-start",
                "min-width": "200px",
                "padding-left": "48px"
              }
            },
            ".navbar-caption": {
              "color": "#ffffff"
            },
            ".mbr-section-subtitle, .text_widget, .mbr-section-btn": {
              "text-align": "center"
            },
            "a[class*=\"text-\"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption):hover": {
              "background-image": "none"
            }
          },
          "_name": "menu01",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"menu menu01 progressm5\" group=\"Menu\" plugins=\"DropDown, TouchSwipe\" always-top global once=\"menu\" not-draggable position-absolute>\n\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" name=\"fullWidth\" title=\"Full Width\" checked>\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Logo\" name=\"showLogo\">\n        <input type=\"checkbox\" title=\"Brand Name\" name=\"showBrand\">\n        <input type=\"checkbox\" title=\"Menu Items\" name=\"showItems\" condition=\"false\">\n        <input type=\"color\" title=\"Items Active Color\" name=\"itemsActive\" value=\"#078efb\" condition=\"showItems\">\n        <input type=\"color\" title=\"Items Active BG\" name=\"itemsBg\" value=\"#252525\" condition=\"showItems\">\n        <input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\" checked>\n        <input type=\"checkbox\" title=\"Icons\" name=\"showIcons\" checked>\n        <input type=\"range\" title=\"Amount\" name=\"iconsAmount\" min=\"0\" max=\"2\" step=\"1\" value=\"2\" condition=\"showIcons\">\n        <input type=\"color\" title=\"Icons Color\" name=\"iconsColor\" value=\"#0844ff\" condition=\"showIcons\">\n        <header>Styles</header>\n        <input type=\"checkbox\" title=\"Sticky\" name=\"sticky\">\n        <input type=\"checkbox\" title=\"Collapsed\" name=\"collapsed\" condition=\"false\">\n        <input type=\"checkbox\" title=\"Transparent\" name=\"transparent\">\n        <input type=\"range\" title=\"Opacity\" name=\"opacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"1\" condition=\"transparent\">\n        <input type=\"color\" title=\"Color Menu\" name=\"menuBgColor\" value=\"#060606\">\n        <input type=\"color\" title=\"Hamburger\" name=\"hamburgerColor\" value=\"#078efb\">\n        <input type=\"color\" title=\"Hamburger Container\" name=\"hamburger\" value=\"#252525\">\n    </mbr-parameters>\n\n    <nav class=\"navbar navbar-dropdown\" mbr-class=\"{'navbar-fixed-top':sticky,\n                     'navbar-expand-lg':!collapsed,\n                     'collapsed':collapsed}\">\n        <div class=\"menu_box\" mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n            <div class=\"navbar-brand d-flex\">\n                <span mbr-if=\"showLogo\" class=\"navbar-logo\">\n                    <a href=\"page4.html#custom-html-n\">\n                        <img src=\"@PROJECT_PATH@/assets/images/flux_dev_a_vibrant_banner_featuring_a_stunning_anime_girl_syna-124x82.jpg\" alt=\"Mobirise\" mbr-style=\"{'height': logoSize + 'rem'}\">\n                    </a>\n                </span>\n                <span mbr-if=\"showBrand\" mbr-buttons mbr-theme-style=\"display-7\" class=\"navbar-caption-wrap\" data-toolbar=\"-mbrBtnMove,-mbrBtnAdd,-mbrBtnRemove\"><a class=\"navbar-caption\" data-app-selector=\".navbar-caption\" href=\"@THEME_PATH@/components/index.html\" data-app-placeholder=\"Type Text\">VA</a></span>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <div class=\"hamburger\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul mbr-menu class=\"navbar-nav nav-dropdown\" mbr-theme-style=\"display-4\" mbr-class=\"{'nav-right': !showButtons,'navbar-nav-top-padding': isPublish && !showBrand && !showLogo}\"><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"index.html#header02-1\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">SYNTHIA CHAT</a>\n                    </li>\n                    <li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page4.html#custom-html-n\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">THE GREEK&nbsp;</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page1.html#custom-html-2\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Prediction Asst</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page6.html#custom-html-10\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Under 21 FunBet</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page9.html#custom-html-1h\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Download/Subscribe</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"RoadmapWhitepaper.html#custom-html-12\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Whitepaper</a></li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page3.html#list02-b\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Laws</a>\n                    </li></ul>\n                <div mbr-buttons mbr-theme-style=\"display-4\" class=\"mbr-section-btn-main\" mbr-if=\"showButtons\" role=\"tablist\"><a class=\"btn btn-success-outline\" href=\"https://mobiri.se\" data-app-placeholder=\"Type Text\">\n                        Get started\n                    </a></div>\n                <div class=\"icons-menu-main\" mbr-if=\"showIcons\">\n                    <a class=\"iconfont-wrapper\" href=\"https://x.com/SYNA_AI_Sports\" target=\"_blank\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-macos socicon\"></span>\n                    </a>\n                    <a class=\"iconfont-wrapper\" href=\"https://mobiri.se\" target=\"_blank\" mbr-if=\"iconsAmount > 1\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-telegram socicon\"></span>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </nav>\n</section>",
          "_JSplaceholders": [],
          "_PHPplaceholders": [],
          "_anchor": "menu01-q",
          "_isUserblock": true,
          "_cid": "uFxNausSY5",
          "_protectedParams": [],
          "_global": true,
          "_once": "menu",
          "_params": {}
        },
        {
          "alias": false,
          "_styles": {
            "padding-top": "(@paddingTop * 1rem)",
            "padding-bottom": "(@paddingBottom * 1rem)",
            "@min-height": "90px",
            "@min-height-small": "@min-height / 2",
            "& when (@bg-type = \"color\")": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = \"image\")": {
              "background-image": "url(@bg-value)",
              "& when (@overlay)": {
                ".mbr-overlay": {
                  "background": "@overlayColor",
                  "opacity": "@overlayOpacity"
                }
              }
            },
            ".item:focus, span:focus": {
              "outline": "none"
            },
            ".container-fluid": {
              "padding-left": "0",
              "padding-right": "0",
              "overflow": "hidden"
            },
            ".loop-container": {
              "padding": "10px 0"
            },
            ".item": {
              "font-weight": "700",
              "color": "@contentColor",
              "min-height": "@min-height",
              "@media (max-width: 768px)": {
                "min-height": "@min-height-small"
              }
            }
          },
          "_name": "features10",
          "_sourceTheme": "tradem5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"features10 tradem5\" group=\"Gallery\" mbr-class=\"{'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"10\" step=\"1\" value=\"0\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"10\" step=\"1\" value=\"0\">\n        <header>Animated Text Settings</header>\n        <select title=\"Font style\" name=\"linesTitle\">\n            <option value=\"title1\" selected>Title 1</option>\n            <option value=\"title2\">Title 2</option>\n        </select>\n        <input type=\"text\" title=\"Line content 1 <br> (For the best experience, please write at least 100 characters)\" inline=\"\" name=\"animatedLine1\" value=\"THE GREEK SURVIVOR GAME......WAGER AGAINST YOUR TRASH TALKING FRIENDS ENOY !!!!!\">\n        <input type=\"range\" inline title=\"Line speed\" name=\"speed\" min=\"0.01\" max=\"0.09\" step=\"0.01\" value=\"0.01\">\n        <select title=\"Direction\" name=\"direction\">\n            <option value=\"-1\" selected>Left</option>\n            <option value=\"1\">Right</option>\n        </select>\n        <input type=\"color\" title=\"Content color\" value=\"#aef800\" name=\"contentColor\" selected>\n        <header>Background</header>\n        <fieldset type=\"background\" parallax name=\"bg\" required>\n            <input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/background1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#150764\" selected>\n        </fieldset>\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" checked condition=\"bg.type !== 'color'\">\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#f7f7f7\" condition=\"overlay && bg.type !== 'color'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.7\" condition=\"overlay && bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type!== 'color'\" mbr-style=\"{'opacity': overlayOpacity, 'background-color': overlayColor}\">\n    </div>\n    <div class=\"container-fluid\">\n\n        <div class=\"loop-container\">\n            <div class=\"item\" mbr-class=\"{'display-1':linesTitle=='title1','display-2':linesTitle=='title2'}\" data-linewords=\"{{animatedLine1}}\" data-direction=\"{{direction}}\" data-speed=\"{{speed}}\"></div>\n            <div class=\"item\" mbr-class=\"{'display-1':linesTitle=='title1','display-2':linesTitle=='title2'}\" data-linewords=\"{{animatedLine1}}\" data-direction=\"{{direction}}\" data-speed=\"{{speed}}\"></div>\n        </div>\n\n    </div>\n</section>",
          "_anchor": "features10-p",
          "_isUserblock": true,
          "_cid": "uFvUKRwkVa",
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        },
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Greek Survivor Widget</title>\n    [JS_CODE_0]\n    [JS_CODE_1]\n    <style>\n:root {\n    --neon-green: #00FF00;\n    --dark-bg: #0C0C0C;\n    --terminal-green: #33FF33;\n    --highlight-color: #3a87ad;\n}\n\n.player-limits {\n    border: 1px solid var(--neon-green);\n    background-color: var(--dark-bg);\n    border-radius: 8px;\n    padding: 10px;\n    margin: 20px 0;\n}\n\n.player-limits-bar {\n    display: flex;\n    justify-content: space-between;\n    color: var(--neon-green);\n    font-weight: bold;\n    padding: 5px 0;\n}\n\n.minimum-players {\n    color: var(--neon-green);\n    text-align: left;\n}\n\n.recommended-players {\n    color: var(--neon-green);\n    text-align: center;\n}\n\n.maximum-players {\n    color: var(--neon-green);\n    text-align: right;\n}\n\n.current-players {\n    text-align: center;\n    color: var(--neon-green);\n    padding: 5px 0;\n    margin-top: 5px;\n}\n\nbody {\n    background-color: var(--dark-bg);\n    color: var(--terminal-green);\n    font-family: monospace;\n    margin: 0;\n    padding: 20px;\n}\n\n.terminal-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    border: 3px solid;\n    padding: 20px;\n    border-radius: 12px;\n    background: var(--dark-bg);\n    animation: rainbow-border 8s linear infinite;\n    box-shadow: 0 0 15px rgba(0, 255, 0, 0.3);\n}\n\n@keyframes rainbow-border {\n    0% { border-color: #00ff00; box-shadow: 0 0 15px #00ff00; }\n    14% { border-color: #0088ff; box-shadow: 0 0 15px #0088ff; }\n    28% { border-color: #ff0000; box-shadow: 0 0 15px #ff0000; }\n    42% { border-color: #ff00ff; box-shadow: 0 0 15px #ff00ff; }\n    56% { border-color: #800080; box-shadow: 0 0 15px #800080; }\n    70% { border-color: #0000ff; box-shadow: 0 0 15px #0000ff; }\n    84% { border-color: #ffff00; box-shadow: 0 0 15px #ffff00; }\n    100% { border-color: #00ff00; box-shadow: 0 0 15px #00ff00; }\n}\n\n.game-content {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.game-controls {\n    border: 1px solid var(--neon-green);\n    padding: 15px;\n    border-radius: 8px;\n}\n\n.league-selector {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    margin-bottom: 20px;\n}\n\n.terminal-button, button {\n    background: transparent;\n    border: 1px solid var(--neon-green);\n    color: var(--neon-green);\n    padding: 8px 15px;\n    cursor: pointer;\n    font-family: monospace;\n}\n\n.terminal-button:hover, button:hover {\n    background: var(--neon-green);\n    color: var(--dark-bg);\n}\n\n.terminal-input, input, select {\n    background: var(--dark-bg);\n    border: 1px solid var(--neon-green);\n    color: var(--terminal-green);\n    padding: 8px;\n    font-family: monospace;\n}\n\nh2 {\n    color: var(--neon-green);\n    margin-bottom: 15px;\n}\n\n.player-management, .pool-management, .bet-options, \n.payment-methods, .payout-structure, .players-list {\n    border: 1px solid var(--neon-green);\n    padding: 15px;\n    margin: 10px 0;\n    border-radius: 8px;\n}\n\n.player-box {\n    background-color: rgba(0, 255, 0, 0.05);\n    border: 1px solid var(--neon-green);\n    border-radius: 8px;\n    padding: 10px;\n    margin-bottom: 10px;\n    width: calc(25% - 10px);\n    display: inline-block;\n    vertical-align: top;\n    margin-right: 10px;\n    min-width: 180px;\n    font-size: 0.9em;\n}\n\n.pot-info {\n    border: 1px solid var(--neon-green);\n    padding: 10px;\n    margin-top: 15px;\n}\n\n.tracked-games, .available-games {\n    margin: 20px 0;\n    padding: 15px;\n    border: 1px solid var(--neon-green);\n    border-radius: 8px;\n    background: rgba(0, 0, 0, 0.3);\n}\n\n.game-item {\n    border: 1px solid var(--neon-green);\n    margin-bottom: 10px;\n    padding: 10px;\n    border-radius: 4px;\n    background: rgba(0, 0, 0, 0.2);\n}\n\n.game-item .game-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 4px;\n    font-size: 0.9em;\n    color: var(--neon-green);\n}\n\n.game-item .teams {\n    display: grid;\n    grid-template-columns: 1fr auto 1fr;\n    align-items: center;\n    gap: 10px;\n    text-align: center;\n    padding: 5px;\n    border-bottom: 1px solid rgba(0, 255, 0, 0.3);\n}\n\n.game-item .picks {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 8px;\n    padding: 5px;\n}\n\n.pick-option {\n    border: 1px solid var(--neon-green);\n    padding: 3px;\n    font-size: 0.75em;\n    text-align: center;\n    background: rgba(0, 0, 0, 0.8);\n    cursor: pointer;\n    border-radius: 3px;\n}\n\n.pick-option:hover {\n    background-color: var(--neon-green);\n    color: var(--dark-bg);\n}\n\n.header {\n    text-align: center;\n    margin-bottom: 20px;\n    border-bottom: 2px solid var(--neon-green);\n    padding-bottom: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.header h1 {\n    margin: 0;\n    flex: 1;\n    text-align: center;\n}\n\n.theme-selector {\n    margin-right: 15px;\n}\n\n.theme-dropdown {\n    background-color: var(--dark-bg);\n    color: var(--neon-green);\n    border: 1px solid var(--neon-green);\n    padding: 5px 10px;\n    font-family: monospace;\n    cursor: pointer;\n}\n\n.bet-options-row {\n    display: flex;\n    gap: 15px;\n    align-items: center;\n    margin-bottom: 15px;\n}\n\n.betting-selector-row {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    margin-bottom: 15px;\n}\n\n.betting-radio-options {\n    display: flex;\n    gap: 15px;\n}\n\n.bet-type-container {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.total-display {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 15px;\n    padding: 10px;\n    background: rgba(0, 0, 0, 0.2);\n    border-radius: 5px;\n}\n\n.total-box {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.total-value {\n    font-size: 1.2em;\n    color: var(--neon-green);\n    font-weight: bold;\n}\n\n.payment-options {\n    display: flex;\n    gap: 10px;\n    margin-top: 10px;\n}\n\n.payment-method {\n    background-color: var(--dark-bg);\n    color: var(--neon-green);\n    border: 1px solid var(--neon-green);\n    padding: 8px 15px;\n    cursor: pointer;\n    transition: all 0.3s;\n}\n\n.payment-method:hover {\n    background-color: var(--neon-green);\n    color: var(--dark-bg);\n}\n\n.payment-method:disabled {\n    background-color: rgba(0, 0, 0, 0.7);\n    color: rgba(0, 255, 0, 0.3);\n    border-color: rgba(0, 255, 0, 0.3);\n    cursor: not-allowed;\n    opacity: 0.6;\n}\n\n.payout-options {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.payout-option {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.9);\n    display: none;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n    padding: 20px;\n    overflow-y: auto;\n}\n\n.modal-content {\n    background-color: var(--dark-bg);\n    border: 2px solid var(--neon-green);\n    padding: 20px;\n    border-radius: 8px;\n    width: 90%;\n    max-width: 500px;\n    position: relative;\n    margin: 50px auto;\n    max-height: 80vh;\n    overflow-y: auto;\n}\n\n.close-modal {\n    position: absolute;\n    right: 10px;\n    top: 10px;\n    background: rgba(0, 0, 0, 0.7);\n    border: 2px solid var(--neon-green);\n    border-radius: 50%;\n    color: var(--neon-green);\n    font-size: 24px;\n    cursor: pointer;\n    width: 36px;\n    height: 36px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    line-height: 1;\n}\n\n.close-modal:hover {\n    background: var(--neon-green);\n    color: var(--dark-bg);\n}\n\n.modal-header {\n    border-bottom: 1px solid var(--neon-green);\n    padding-bottom: 10px;\n    margin-bottom: 15px;\n}\n\n.modal-body {\n    max-height: 400px;\n    overflow-y: auto;\n}\n\n.player-info {\n    margin-bottom: 10px;\n}\n\n.player-name {\n    font-weight: bold;\n    color: var(--neon-green);\n    display: block;\n    margin-bottom: 5px;\n}\n\n.player-email {\n    font-size: 0.9em;\n    opacity: 0.8;\n    display: block;\n    margin-bottom: 5px;\n}\n\n.parlay-card {\n    background-color: rgba(0, 0, 0, 0.2);\n    border: 1px solid var(--neon-green);\n    border-radius: 4px;\n    padding: 10px;\n    margin: 10px 0;\n}\n\n.parlay-card h4 {\n    margin: 0 0 10px 0;\n    color: var(--neon-green);\n}\n\n.parlay-card-content {\n    min-height: 50px;\n    max-height: 150px;\n    overflow-y: auto;\n    scrollbar-width: thin;\n    scrollbar-color: var(--neon-green) var(--dark-bg);\n}\n\n.parlay-card-content::-webkit-scrollbar {\n    width: 6px;\n}\n\n.parlay-card-content::-webkit-scrollbar-track {\n    background: var(--dark-bg);\n}\n\n.parlay-card-content::-webkit-scrollbar-thumb {\n    background-color: var(--neon-green);\n    border-radius: 3px;\n}\n\n.payment-info {\n    background-color: rgba(0, 255, 0, 0.1);\n    border: 1px solid var(--neon-green);\n    padding: 10px;\n    margin: 10px 0;\n    border-radius: 4px;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    overflow: hidden;\n}\n\n.payment-details {\n    line-height: 1.4;\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n    max-width: 100%;\n}\n\n.payment-details p {\n    margin: 5px 0;\n    white-space: normal;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    width: 100%;\n    box-sizing: border-box;\n    word-break: break-word;\n}\n\n.payment-modal-overlay {\n    display: none;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.85);\n    z-index: 999;\n}\n\n#paymentModal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 90%;\n    max-width: 400px;\n    background-color: var(--dark-bg);\n    border: 2px solid var(--neon-green);\n    border-radius: 8px;\n    box-shadow: 0 0 20px rgba(0, 255, 0, 0.3);\n    z-index: 1000;\n    display: none;\n    max-height: 80vh;\n    overflow-y: auto;\n    margin: 0 auto;\n}\n\n/* Ensure modals are properly positioned and scrollable on mobile */\n@media screen and (max-width: 768px) {\n    .modal-content,\n    #paymentModal {\n        max-height: 70vh;\n        margin-top: 70px;\n        margin-bottom: 70px;\n    }\n    \n    .modal-overlay {\n        align-items: flex-start;\n        padding-top: 60px;\n    }\n}\n\n.form-group {\n    margin-bottom: 15px;\n}\n\n.form-group label {\n    display: block;\n    margin-bottom: 5px;\n    color: var(--neon-green);\n}\n\n.form-group input {\n    width: calc(100% - 16px);\n    padding: 8px;\n    background: rgba(0, 0, 0, 0.3);\n    border: 1px solid var(--neon-green);\n    color: var(--terminal-green);\n    border-radius: 4px;\n    box-sizing: border-box;\n    word-break: break-word;\n}\n\n.close-payment-modal {\n    position: absolute;\n    right: 15px;\n    top: 10px;\n    background: rgba(0, 0, 0, 0.7);\n    border: 2px solid var(--neon-green);\n    border-radius: 50%;\n    color: var(--neon-green);\n    font-size: 24px;\n    cursor: pointer;\n    width: 36px;\n    height: 36px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    line-height: 1;\n}\n\n.close-payment-modal:hover {\n    background: var(--neon-green);\n    color: var(--dark-bg);\n}\n\n#greekGamesList {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 15px;\n}\n\n.greek-game-card {\n    border: 1px solid var(--neon-green);\n    background-color: rgba(0, 0, 0, 0.8);\n    padding: 15px;\n    margin-bottom: 15px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    min-height: 200px;\n    background-size: cover;\n    background-position: center;\n    background-blend-mode: overlay;\n    position: relative;\n}\n\n.game-teams {\n    color: var(--neon-green);\n    font-size: 1.2em;\n    margin-bottom: 10px;\n    display: flex;\n    justify-content: space-between;\n}\n\n.game-details {\n    color: #888;\n    font-size: 0.9em;\n    margin-bottom: 10px;\n}\n\n.betting-options {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    width: 100%;\n    padding: 5px;\n    box-sizing: border-box;\n}\n\n.bet-option {\n    font-size: 0.9em;\n    text-align: center;\n    background-color: rgba(0, 0, 0, 0.9);\n    border: 1px solid var(--neon-green);\n    color: var(--neon-green);\n    padding: 8px 12px;\n    cursor: pointer;\n    transition: all 0.2s;\n    min-height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    margin: 2px 0;\n    width: 100%;\n    font-weight: bold;\n    box-shadow: 0 0 5px rgba(0, 255, 0, 0.2);\n}\n\n.bet-option:hover {\n    background-color: var(--neon-green);\n    color: black;\n}\n\n.bet-option.selected {\n    background-color: var(--neon-green);\n    color: black;\n}\n\n\n.special-events-section {\n    border: 1px solid var(--neon-green);\n    padding: 15px;\n    margin: 20px 0;\n    border-radius: 8px;\n\n    <!-- Super Admin Modal -->\n    <!-- Super User Modal -->\n    <div class=\"modal-overlay\" id=\"superUserModal\" style=\"display: none;\">\n        <div class=\"modal-content\" style=\"width: 90%; max-width: 1200px; max-height: 90vh; overflow-y: auto;\">\n            <button class=\"close-modal\" id=\"closeSuperUserModalBtn\">×</button>\n            <div class=\"super-admin-content\">\n                <!-- Super Admin content will be loaded here -->\n            </div>\n        </div>\n    </div>\n\n    background-color: rgba(0, 0, 0, 0.3);\n}\n\n.prop-bets-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 15px;\n    margin-top: 15px;\n}\n\n.prop-bet-card {\n    border: 1px solid var(--neon-green);\n    background-color: rgba(0, 0, 0, 0.4);\n    padding: 15px;\n    border-radius: 5px;\n}\n\n.prop-bet-question {\n    color: var(--neon-green);\n    font-size: 1.1em;\n    margin-bottom: 15px;\n    font-weight: bold;\n}\n\n.prop-bet-options {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.prop-bet-option {\n    background-color: rgba(0, 0, 0, 0.7);\n    border: 1px solid var(--neon-green);\n    padding: 8px 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: all 0.2s;\n    display: flex;\n    justify-content: space-between;\n}\n\n.prop-bet-option:hover {\n    background-color: rgba(0, 255, 0, 0.1);\n}\n\n.prop-bet-option.selected {\n    background-color: var(--neon-green);\n    color: var(--dark-bg);\n}\n\n.prop-bet-option-odds {\n    font-weight: bold;\n}\n\n.game-prediction {\n    background-color: rgba(0, 0, 0, 0.5);\n    border: 1px solid rgba(0, 255, 0, 0.3);\n    border-radius: 5px;\n    padding: 10px;\n    margin-top: 10px;\n    font-size: 0.9em;\n}\n\n.prediction-text {\n    margin-bottom: 5px;\n}\n\n.prediction-confidence {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n.live-odds-toggle {\n    display: inline-flex;\n    align-items: center;\n    margin-left: 10px;\n}\n\n.toggle-label {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n}\n\n.toggle-label input {\n    position: absolute;\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.toggle-label input:checked + span {\n    color: var(--neon-green);\n    font-weight: bold;\n}\n\n}\n\n.confidence-meter {\n    flex: 1;\n    height: 6px;\n    background-color: rgba(0, 255, 0, 0.1);\n    border-radius: 3px;\n    position: relative;\n}\n\n.confidence-level {\n    position: absolute;\n    left: 0;\n    top: 0;\n    height: 100%;\n    background-color: var(--neon-green);\n    border-radius: 3px;\n}\n\n.live-odds-indicator {\n    display: inline-flex;\n    align-items: center;\n    gap: 5px;\n    padding: 3px 6px;\n    background-color: rgba(255, 0, 0, 0.2);\n    border-radius: 3px;\n    font-size: 0.8em;\n    margin-left: 5px;\n}\n\n.live-odds-indicator.active {\n    background-color: rgba(0, 255, 0, 0.2);\n}\n\n.live-pulse {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: red;\n    animation: pulse 2s infinite;\n}\n\n.live-odds-indicator.active .live-pulse {\n    background-color: var(--neon-green);\n}\n\n@keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.3; }\n    100% { opacity: 1; }\n}\n\n.tracked-games {\n    margin-bottom: 30px;\n    border: 1px solid var(--neon-green);\n    padding: 20px;\n    border-radius: 5px;\n    background-color: rgba(0, 0, 0, 0.8);\n    max-height: 400px;\n    overflow-y: auto;\n}\n\n.tracked-games.hidden {\n    display: none;\n}\n\n.parlay-item {\n    padding: 8px;\n    margin-bottom: 5px;\n    border-radius: 4px;\n    font-size: 12px;\n    background-color: rgba(0, 100, 0, 0.3);\n    border-left: 3px solid #00aa00;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.remove-parlay-bet {\n    background: none;\n    border: none;\n    color: var(--neon-green);\n    cursor: pointer;\n    font-size: 16px;\n    padding: 0 5px;\n}\n\n.remove-parlay-bet:hover {\n    color: #fff;\n    background: none;\n}\n\n.footer {\n    text-align: center;\n    margin-top: 20px;\n    padding-top: 20px;\n    border-top: 1px solid var(--neon-green);\n    font-size: 0.9em;\n}\n\n/* Share game functionality */\n.share-game-container {\n    margin-top: 20px;\n    padding: 15px;\n    border: 1px solid var(--neon-green);\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.4);\n}\n\n.share-game-header {\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.share-game-options {\n    display: flex;\n    gap: 15px;\n    margin-bottom: 15px;\n}\n\n.share-game-url {\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.6);\n    border: 1px solid var(--neon-green);\n    border-radius: 4px;\n    color: var(--neon-green);\n    font-family: monospace;\n    margin-bottom: 15px;\n    word-break: break-all;\n}\n\n.share-buttons {\n    display: flex;\n    gap: 10px;\n}\n\n#screenShareContainer {\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    background: rgba(0, 0, 0, 0.8);\n    border: 2px solid var(--neon-green);\n    border-radius: 8px;\n    padding: 15px;\n    z-index: 900;\n    min-width: 250px;\n    display: none;\n}\n\n#screenShareContainer.active {\n    display: block;\n}\n\n.screen-share-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    border-bottom: 1px solid var(--neon-green);\n    padding-bottom: 5px;\n}\n\n.screen-share-content {\n    margin-bottom: 10px;\n}\n\n.screen-share-controls {\n    display: flex;\n    justify-content: space-between;\n}\n\n#shareParticipantsList {\n    margin: 10px 0;\n    padding: 5px;\n    border: 1px solid rgba(0, 255, 0, 0.3);\n    border-radius: 4px;\n    max-height: 100px;\n    overflow-y: auto;\n}\n\n/* Hidden initially */\n.share-game-modal {\n    display: none;\n}\n\n/* For the chat-based sharing */\n.share-chat {\n    display: flex;\n    flex-direction: column;\n    max-height: 300px;\n    background: rgba(0, 0, 0, 0.6);\n    border: 1px solid var(--neon-green);\n    border-radius: 8px;\n    padding: 10px;\n    margin-top: 10px;\n}\n\n.share-chat-messages {\n    flex: 1;\n    overflow-y: auto;\n    margin-bottom: 10px;\n    padding: 10px;\n    border: 1px solid rgba(0, 255, 0, 0.3);\n    border-radius: 4px;\n    min-height: 100px;\n    max-height: 200px;\n}\n\n.share-chat-input {\n    display: flex;\n    gap: 10px;\n}\n\n.chat-message {\n    margin-bottom: 8px;\n    padding: 5px;\n    border-radius: 4px;\n}\n\n.chat-message.guest {\n    background: rgba(58, 135, 173, 0.1);\n    border-left: 3px solid var(--highlight-color);\n    text-align: left;\n}\n\n.chat-message.host {\n    background: rgba(0, 255, 0, 0.1);\n    border-left: 3px solid var(--neon-green);\n    text-align: right;\n}\n\n.chat-name {\n    font-weight: bold;\n    margin-right: 5px;\n}\n\n.chat-name.guest {\n    color: var(--highlight-color);\n}\n\n.chat-name.host {\n    color: var(--neon-green);\n}\n\n#statusIndicator {\n    display: none; \n    padding: 10px; \n    background-color: rgba(0, 255, 0, 0.1); \n    border: 1px solid var(--neon-green); \n    margin-bottom: 10px; \n    text-align: center; \n    border-radius: 4px;\n}\n\n.header-buttons {\n    display: flex;\n    gap: 10px;\n}\n\n/* 50 Squares Game Styles */\n.squares-setup {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    margin-bottom: 20px;\n}\n\n.squares-grid-container {\n    border: 1px solid var(--neon-green);\n    padding: 15px;\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.3);\n}\n\n.squares-info {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 15px;\n}\n\n.squares-teams {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.squares-team {\n    color: var(--neon-green);\n    font-weight: bold;\n}\n\n.squares-stats {\n    text-align: right;\n}\n\n.squares-numbers {\n    position: relative;\n    margin: 30px 0 0 30px;\n}\n\n.squares-axis-horizontal {\n    position: absolute;\n    top: -30px;\n    left: 0;\n    display: flex;\n    width: 100%;\n}\n\n.squares-axis-vertical {\n    position: absolute;\n    top: 0;\n    left: -30px;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n.squares-axis-number {\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--neon-green);\n\n<!-- License verification modal -->\n<div class=\"modal-overlay\" id=\"licenseModal\" style=\"display: none;\">\n    <div class=\"modal-content\">\n        <button class=\"close-modal\" id=\"closeLicenseModalBtn\">×</button>\n        <div class=\"modal-header\">\n            <h3>License Verification</h3>\n        </div>\n        <div class=\"modal-body\" id=\"licenseForm\">\n            <p>Please enter your license information to verify your license.</p>\n            <div class=\"form-group\">\n                <label for=\"gameIdentifier\">Game Identifier:</label>\n                <input type=\"text\" id=\"gameIdentifier\" class=\"terminal-input\" placeholder=\"Your Game Identifier\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"licenseKey\">License Key:</label>\n                <input type=\"text\" id=\"licenseKey\" class=\"terminal-input\" placeholder=\"Your License Key\">\n            </div>\n            <button id=\"verifyLicenseBtn\" class=\"terminal-button\">Verify License</button>\n        </div>\n        <div class=\"modal-body\" id=\"licenseInfo\" style=\"display: none;\">\n            <div id=\"licenseDetails\">\n                <!-- License details will be displayed here -->\n            </div>\n            <button id=\"updateLicenseBtn\" class=\"terminal-button\">Update License</button>\n        </div>\n    </div>\n</div>\n\n<!-- Super Admin Console scripts embedded directly -->\n[JS_CODE_2]\n\n<!-- Add screen sharing container -->\n<div id=\"screenShareContainer\" style=\"display: none;\">\n    <div class=\"screen-share-header\">\n        <div>Screen Sharing</div>\n        <button id=\"closeScreenShareBtn\" class=\"terminal-button\">×</button>\n    </div>\n    <div class=\"screen-share-content\"></div>\n    <div class=\"screen-share-controls\">\n        <div>Participants: <span id=\"participantCount\">0</span></div>\n        <button id=\"stopScreenShareBtn\" class=\"terminal-button\">Stop Sharing</button>\n    </div>\n    <div id=\"shareParticipantsList\"></div>\n</div>\n\n    font-weight: bold;\n}\n\n.squares-grid {\n    display: grid;\n    grid-template-columns: repeat(10, 40px);\n    grid-template-rows: repeat(5, 40px);\n    gap: 2px;\n}\n\n.square {\n    border: 1px solid var(--neon-green);\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: all 0.2s;\n    font-size: 0.8em;\n    position: relative;\n}\n\n.square:hover {\n    background-color: rgba(0, 255, 0,.1);\n}\n\n.square.taken {\n    background-color: rgba(0, 255, 0, 0.2);\n    cursor: not-allowed;\n}\n\n.squares-controls {\n    margin-top: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    align-items: flex-end;\n}\n\n.squares-controls .form-group {\n    flex: 1;\n    min-width: 200px;\n}\n\n/* Pool Management Styles */\n.pool-management {\n    border: 1px solid var(--neon-green);\n    padding: 15px;\n    margin: 10px 0;\n    border-radius: 8px;\n}\n\n.pool-management h2 {\n    color: var(--neon-green);\n    margin-bottom: 15px;\n}\n\n.pool-details {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.pool-stat {\n    width: calc(50% - 5px);\n    box-sizing: border-box;\n}\n\n.pool-stat .stat-label {\n    font-weight: bold;\n    color: var(--neon-green);\n}\n\n.pool-stat .stat-value {\n    color: var(--terminal-green);\n}\n\n.pool-actions {\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n    gap: 5px;\n}\n\n.pool-card {\n    border: 1px solid var(--neon-green);\n    background-color: rgba(0, 255, 0, 0.05);\n    padding: 15px;\n    margin-bottom: 15px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    min-height: 150px;\n}\n\n.pool-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.pool-league {\n    font-weight: bold;\n    color: var(--neon-green);\n}\n\n.no-pools-message {\n    text-align: center;\n    color: rgba(0, 255, 0, 0.5);\n}\n\n#activePools {\n    border: 1px solid var(--neon-green);\n    padding: 15px;\n    margin: 10px 0;\n    border-radius: 8px;\n    max-height: 300px;\n    overflow-y: auto;\n}\n\n.prediction-history {\n    border: 1px solid var(--neon-green);\n    padding: 20px;\n    margin: 20px 0;\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.3);\n}\n\n.prediction-history-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 15px;\n}\n\n.prediction-history-table {\n    width: 100%;\n    border-collapse: collapse;\n}\n\n.prediction-history-table th,\n.prediction-history-table td {\n    border: 1px solid rgba(0, 255, 0, 0.3);\n    padding: 8px;\n    text-align: left;\n}\n\n\n.bet-option.updating {\n    animation: updating-odds 1s ease-in-out;\n}\n\n@keyframes updating-odds {\n    0% { background-color: rgba(0, 0, 0, 0.9); }\n    50% { background-color: rgba(0, 255, 0, 0.2); }\n    100% { background-color: rgba(0, 0, 0, 0.9); }\n}\n\n.local-preview {\n    border: 1px solid var(--neon-green);\n    margin-top: 10px;\n    margin-bottom: 10px;\n    padding: 5px;\n    border-radius: 4px;\n}\n\n.preview-label {\n    font-size: 0.8em;\n    color: var(--neon-green);\n    margin-bottom: 5px;\n}\n\n.prediction-history-table th {\n    background-color: rgba(0, 255, 0, 0.1);\n    color: var(--neon-green);\n}\n\n.prediction-history-table tr.win {\n    background-color: rgba(0, 255, 0, 0.1);\n}\n\n.prediction-history-table tr.loss {\n    background-color: rgba(255, 0, 0, 0.1);\n}\n\n.prediction-win-count {\n    color: var(--neon-green);\n    font-weight: bold;\n    margin-top: 15px;\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 4px;\n    text-align: center;\n}\n    </style>\n    <!-- Load the required scripts in the correct order -->\n    [JS_CODE_3]\n    [JS_CODE_4]\n    [JS_CODE_5]\n    [JS_CODE_6]\n\n\n\n    <div class=\"terminal-container\">\n        <div class=\"header\">\n            <div class=\"theme-selector\">\n                <select id=\"themeSelector\" class=\"theme-dropdown\">\n                    <option value=\"default\">Terminal Green</option>\n                    <option value=\"blue\">Cyber Blue</option>\n                    <option value=\"red\">Hot Red</option>\n                    <option value=\"dark\">Dark Mode</option>\n                </select>\n            </div>\n            <h1>GREEK SURVIVOR GAME</h1>\n            <div class=\"header-buttons\">\n                <button id=\"greekGameBtn\" class=\"terminal-button\">GREEK GAME</button>\n                <button id=\"squaresGameBtn\" class=\"terminal-button\">50 SQUARES</button>\n                <button id=\"helpGuideBtn\" class=\"terminal-button\">HELP GUIDE</button>\n                <button id=\"testEmailBtn\" class=\"terminal-button\">Test Email</button>\n            [JS_CODE_7]\n            </div>\n        </div>\n\n        <div id=\"statusIndicator\"></div>\n\n        <div class=\"game-controls\">\n            <div class=\"league-selector\">\n                <h2>League</h2>\n                <select id=\"leagueSelect\" class=\"terminal-dropdown\">\n                    <option value=\"\" selected=\"\" disabled=\"\">Select League</option>\n                    <option value=\"NFL\">NFL</option>\n                    <option value=\"NBA\">NBA</option>\n                    <option value=\"NHL\">NHL</option>\n                    <option value=\"MLB\">MLB</option>\n                    <option value=\"NCAAF\">NCAAF</option>\n                    <option value=\"NCAAB\">NCAAB</option>\n                    <option value=\"LA_LIGA\">LA LIGA</option>\n                    <option value=\"PREMIER_LEAGUE\">PREMIER LEAGUE</option>\n                    <option value=\"WNBA\">WNBA</option>\n                    <option value=\"MLS\">MLS</option>\n                    <option value=\"BOXING\">BOXING</option>\n                    <option value=\"MMA\">MMA</option>\n                    <option value=\"NASCAR\">NASCAR</option>\n                    <option value=\"TENNIS\">TENNIS</option>\n                    <option value=\"GOLF\">GOLF</option>\n                </select>\n                <button id=\"refreshLiveOddsBtn\" class=\"terminal-button\">Refresh Live Odds</button>\n                <div class=\"live-odds-toggle\">\n                    <label class=\"toggle-label\">\n                        <input type=\"checkbox\" id=\"liveOddsToggle\" checked=\"\">\n                        <span>LIVE ODDS</span>\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"player-management\">\n                <h2>Player Management</h2>\n                <div class=\"player-details\">\n                    <input type=\"text\" id=\"playerNameInput\" placeholder=\"Player Name\" class=\"terminal-input\">\n                    <input type=\"email\" id=\"playerEmailInput\" placeholder=\"Email for Notifications\" class=\"terminal-input\">\n                    <button id=\"addPlayerBtn\" class=\"terminal-button\">Add Player</button>\n                    <button id=\"generateAIPlayerBtn\" class=\"terminal-button\" style=\"display: none;\">Generate AI Player</button>\n                </div>\n                [JS_CODE_8]\n                <div class=\"players-list\">\n                    <div id=\"playersList\">\n                        <p id=\"noPlayersMessage\">No players added yet. Add players above.</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"pool-management\">\n                <h2>Pool Management</h2>\n                <div class=\"pool-details\" style=\"display: flex; flex-direction: column; gap: 15px;\">\n                    <div class=\"form-group\">\n                        <label for=\"poolNameInput\">Pool Name:</label>\n                        <input type=\"text\" id=\"poolNameInput\" class=\"terminal-input\" placeholder=\"Pool Name\" style=\"width: calc(100% - 16px); box-sizing: border-box;\">\n                    </div>\n                    <div class=\"form-group\" style=\"margin-top: 10px;\">\n                        <label for=\"entryFeeInput\">Entry Fee:</label>\n                        <input type=\"number\" id=\"entryFeeInput\" min=\"1\" value=\"20\" class=\"terminal-input\" style=\"width: calc(100% - 16px); box-sizing: border-box;\">\n                    </div>\n                </div>\n                <button id=\"createPoolBtn\" class=\"terminal-button\">Create Pool</button>\n                <div id=\"activePools\">\n                    <p class=\"no-pools-message\">No active pools yet</p>\n                </div>\n            </div>\n\n            <div class=\"bet-options-container\">\n                <h2>Bet Options</h2>\n                <div class=\"bet-options-row\">\n                    <div class=\"bet-amount\">\n                        <label for=\"betAmount\">Bet Amount:</label>\n                        <input type=\"number\" id=\"betAmount\" min=\"1\" value=\"20\" class=\"terminal-input\">\n                    </div>\n                    <div class=\"team-options\">\n                        <label for=\"teamOptions\">Team Options:</label>\n                        <select id=\"teamOptions\" class=\"terminal-dropdown\">\n                            <option value=\"3\">3 Teams</option>\n                            <option value=\"5\">5 Teams</option>\n                            <option value=\"7\">7 Teams</option>\n                            <option value=\"10\">10 Teams</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div class=\"betting-selector-row\">\n                    <label>Betting Type:</label>\n                    <div class=\"betting-radio-options\">\n                        <label class=\"bet-type-container\">\n                            <input type=\"radio\" name=\"bettingType\" id=\"realMoney\" value=\"real\" checked=\"\">\n                            <span class=\"bet-type-label\">Real Money</span>\n                        </label>\n                        <label class=\"bet-type-container\">\n                            <input type=\"radio\" name=\"bettingType\" id=\"funBet\" value=\"fun\">\n                            <span class=\"bet-type-label\">Fun Bet</span>\n                        </label>\n                    </div>\n                </div>\n                \n                <div class=\"betting-selector-row\" id=\"aiDifficultyRow\" style=\"display: none;\">\n                    <label>AI Difficulty:</label>\n                    <div class=\"betting-radio-options\">\n                        <label class=\"bet-type-container\">\n                            <input type=\"radio\" name=\"aiDifficulty\" id=\"aiConservative\" value=\"conservative\">\n                            <span class=\"bet-type-label\">Conservative</span>\n                        </label>\n                        <label class=\"bet-type-container\">\n                            <input type=\"radio\" name=\"aiDifficulty\" id=\"aiBalanced\" value=\"balanced\" checked=\"\">\n                            <span class=\"bet-type-label\">Balanced</span>\n                        </label>\n                        <label class=\"bet-type-container\">\n                            <input type=\"radio\" name=\"aiDifficulty\" id=\"aiAggressive\" value=\"aggressive\">\n                            <span class=\"bet-type-label\">Aggressive</span>\n                        </label>\n                    </div>\n                </div>\n\n                <div class=\"pot-display-container\">\n                    <div class=\"total-display\">\n                        <div class=\"total-box\">\n                            <span class=\"total-label\">Total Pot:</span>\n                            <span id=\"totalPot\" class=\"total-value\">$0</span>\n                        </div>\n                        <div class=\"total-box\">\n                            <span class=\"total-label\">Total Payout:</span>\n                            <span id=\"totalPayout\" class=\"total-value\">$0</span>\n\n    <!-- Special Events Section - Shown when enabled in admin console -->\n    <div id=\"specialEventsSection\" class=\"special-events-section\" style=\"display: none;\">\n        <div class=\"section-header\">\n            <h2>Special Event Prop Bets</h2>\n            <div class=\"header-description\">\n                <p>Place bets on special events beyond the normal game outcomes</p>\n            </div>\n        </div>\n        <div id=\"propBetsContainer\" class=\"prop-bets-container\">\n            <!-- Prop bets will be loaded here by script.js -->\n        </div>\n    </div>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"payment-methods\">\n                    <h3>Payment Methods</h3>\n                    <div class=\"payment-options\">\n                        <button type=\"button\" class=\"payment-method\" data-method=\"venmo\">Venmo</button>\n                        <button type=\"button\" class=\"payment-method\" data-method=\"cashapp\">Cash App</button>\n                        <button type=\"button\" class=\"payment-method\" data-method=\"paypal\">PayPal</button>\n                        <button type=\"button\" class=\"payment-method\" data-method=\"handtohand\">Hand to Hand</button>\n                    </div>\n                </div>\n\n                <div class=\"payout-structure\">\n                    <h3>Payout Structure</h3>\n                    <div class=\"payout-options\">\n                        <label class=\"payout-option\">\n                            <input type=\"radio\" name=\"payoutStructure\" value=\"evenSplit\" checked=\"\">\n                            <span>Even Split</span>\n                        </label>\n                        <label class=\"payout-option\">\n                            <input type=\"radio\" name=\"payoutStructure\" value=\"winnerTakesAll\">\n                            <span>Winner Takes All</span>\n                        </label>\n                        <label class=\"payout-option\">\n                            <input type=\"radio\" name=\"payoutStructure\" value=\"weightedSplit\">\n                            <span>Weighted Split (70/30)</span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Share Game Feature -->\n            <div class=\"share-game-container\">\n                <div class=\"share-game-header\">\n                    <h2>Share This Game</h2>\n                    <button id=\"shareGameBtn\" class=\"terminal-button\">Create Shareable Link</button>\n                    [JS_CODE_9]\n                </div>\n                <div class=\"share-game-description\">\n                    <p>Allow friends in different locations to participate in this game remotely using one of the options below:</p>\n                </div>\n                <div class=\"share-game-options\">\n                    <button id=\"createLinkBtn\" class=\"terminal-button\">Create Link</button>\n                    <button id=\"startScreenShareBtn\" class=\"terminal-button\">Start Screen Share</button>\n            [JS_CODE_10]\n                    <button id=\"openChatBtn\" class=\"terminal-button\">Open Chat Room</button>\n                </div>\n                <div id=\"shareUrlContainer\" class=\"share-game-url\" style=\"display: none;\">\n                    <span id=\"shareUrl\"></span>\n                    <div style=\"display: flex; justify-content: space-between; margin-top: 10px;\">\n                        <button id=\"copyUrlBtn\" class=\"terminal-button\">Copy Link</button>\n                        <button id=\"closeShareUrlBtn\" class=\"terminal-button\">Close</button>\n                    </div>\n                </div>\n                [JS_CODE_11]\n                <div class=\"share-buttons\">\n                    <button id=\"emailShareBtn\" class=\"terminal-button\">Share via Email</button>\n                    <button id=\"smsShareBtn\" class=\"terminal-button\">Share via SMS</button>\n                </div>\n\n                <!-- Chat sharing UI -->\n                <div id=\"shareChatContainer\" class=\"share-chat\" style=\"display: none;\">\n                    <div class=\"share-chat-messages\" id=\"shareChatMessages\">\n                        <div class=\"chat-message host\">\n                            <span class=\"chat-name host\">You:</span> Game room created. Share this link with your friends!\n                        </div>\n                    </div>\n                    <div class=\"share-chat-input\">\n                        <input type=\"text\" id=\"shareChatInput\" class=\"terminal-input\" placeholder=\"Type your message...\">\n                        <button id=\"sendChatBtn\" class=\"terminal-button\">Send</button>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"game-display-options\">\n                <label class=\"checkbox-container\">\n                    <input type=\"checkbox\" id=\"disableGameTracking\">\n                    <span>Hide Game Tracking</span>\n                </label>\n                <button id=\"clearSelectionsBtn\" class=\"terminal-button\">Clear All Selections</button>\n                <button id=\"simulateResultsBtn\" class=\"terminal-button\">Simulate Results</button>\n                <button id=\"clearDuplicateGamesBtn\" class=\"terminal-button\">Clear Duplicate Games</button>\n            </div>\n\n            <div class=\"game-controls-footer\">\n                <button id=\"resetAll\" class=\"terminal-button\">Reset All</button>\n            </div>\n        </div>\n\n        <div class=\"player-limits\">\n            <div class=\"player-limits-bar\">\n                <div class=\"minimum-players\">Minimum (2)</div>\n                <div class=\"recommended-players\">Recommended (5)</div>\n                <div class=\"maximum-players\">Maximum (30)</div>\n            </div>\n            <div class=\"player-progress-bar\" style=\"height: 10px; background-color: rgba(0, 255, 0, 0.1); border-radius: 5px; position: relative; margin: 10px 0;\">\n                <div class=\"player-progress\" style=\"position: absolute; top: 0; left: 0; height: 100%; width: 0%; background-color: var(--neon-green); border-radius: 5px;\"></div>\n            </div>\n            <div class=\"current-players\">Players: 0/30</div>\n        </div>\n\n        <div class=\"tracked-games\">\n            <h2>Tracked Games</h2>\n            <div id=\"gameTracking\">\n                <p>No games tracked yet. Select betting options from the available games.</p>\n            </div>\n        </div>\n\n        <div class=\"available-games\">\n            <h2>Available Games</h2>\n            <div id=\"greekGamesList\">\n                <p>Please select a league to view available games</p>\n            </div>\n        </div>\n\n        <div class=\"prediction-history\">\n            <div class=\"prediction-history-header\">\n                <h2>Prediction History</h2>\n                <button id=\"clearPredictionHistoryBtn\" class=\"terminal-button\">Clear History</button>\n            </div>\n            <table class=\"prediction-history-table\" id=\"predictionHistoryTable\">\n                <thead>\n                    <tr>\n                        <th>Game</th>\n                        <th>Prediction</th>\n                        <th>Result</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <!-- Prediction history rows will be added here -->\n                </tbody>\n            </table>\n            <div class=\"prediction-win-count\" id=\"predictionWinCount\">Wins: 0</div>\n        </div>\n\n\n        <div class=\"footer\">\n            <p id=\"copyrightText\">© 2024 Greek Survivor Game. All rights reserved.</p>\n            <div class=\"license-info\" id=\"footerLicenseInfo\"></div>\n            <div class=\"admin-links\">\n                <a href=\"#\" id=\"licenseManagementBtn\" class=\"admin-link\">License Management</a>\n                <a href=\"#\" id=\"showLicenseBtn\" class=\"admin-link\">Verify License</a>\n                <a href=\"#\" id=\"superUserDashboardBtn\" class=\"admin-link\">Super User Dashboard</a>\n            [JS_CODE_12]\n            </div>\n            [JS_CODE_13]\n        </div>\n    </div>\n    \n    <!-- License Modal -->\n    <div class=\"modal-overlay\" id=\"licenseModal\">\n        <div class=\"modal-content\">\n            <button class=\"close-modal\">×</button>\n            <div class=\"modal-header\">\n                <h2>License Verification</h2>\n            </div>\n            <div class=\"modal-body\">\n                <div id=\"licenseNotification\" class=\"notification\"></div>\n                <div id=\"licenseForm\">\n                    <div class=\"form-group\">\n                        <label for=\"licenseKey\">License Key:</label>\n                        <input type=\"text\" id=\"licenseKey\" class=\"terminal-input\" placeholder=\"Enter your license key\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"gameIdentifier\">Game Identifier:</label>\n                        <input type=\"text\" id=\"gameIdentifier\" class=\"terminal-input\" placeholder=\"Enter your unique game identifier\">\n                    </div>\n                    <button id=\"activateLicenseBtn\" class=\"terminal-button\">Activate License</button>\n                    <button id=\"tryTrialBtn\" class=\"terminal-button\">Try 10-Day Free Trial</button>\n                </div>\n                <div id=\"licenseInfo\" style=\"display: none;\">\n                    <div class=\"card\">\n                        <h3 class=\"card-title\">License Information</h3>\n                        <div id=\"licenseDetails\"></div>\n                        <div style=\"margin-top: 15px;\">\n                            <button id=\"deactivateLicenseBtn\" class=\"terminal-button\">Deactivate License</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <!-- Back to Terminal button removed as requested -->\n\n    <!-- Payment Modal -->\n    <div class=\"payment-modal-overlay\">\n        <div id=\"paymentModal\">\n            <div class=\"modal-header\">\n                <h3 id=\"paymentModalTitle\">Payment Details</h3>\n                <button class=\"close-payment-modal\">×</button>\n            </div>\n            <div class=\"payment-form\">\n                <div class=\"form-group\">\n                    <label for=\"paymentName\">Your Name:</label>\n                    <input type=\"text\" id=\"paymentName\" placeholder=\"Enter your name\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"paymentAccount\">Account/Payment Details:</label>\n                    <input type=\"text\" id=\"paymentAccount\" placeholder=\"Enter payment information\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"paymentNote\">Payment Note:</label>\n                    <input type=\"text\" id=\"paymentNote\" placeholder=\"Add a note to your payment\">\n                </div>\n                <div id=\"meetupFields\" style=\"display: none;\">\n                    <div class=\"form-group\">\n                        <label for=\"meetupLocation\">Location:</label>\n                        <input type=\"text\" id=\"meetupLocation\" placeholder=\"Enter meetup location\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"meetupDate\">Date:</label>\n                        <input type=\"date\" id=\"meetupDate\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"meetupTime\">Time:</label>\n                        <input type=\"time\" id=\"meetupTime\">\n                    </div>\n                </div>\n                <button id=\"savePaymentBtn\" class=\"terminal-button\">Save Payment Details</button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Help Guide Modal -->\n    <div class=\"modal-overlay\" id=\"helpGuideModal\">\n        <div class=\"modal-content\">\n            <button class=\"close-modal\">×</button>\n            <div class=\"modal-header\">\n                <h2>Greek Survivor Game Help Guide</h2>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"help-section\">\n                    <h3>Getting Started</h3>\n                    <ol>\n                        <li>Select a league using the dropdown in the League section (NFL, NBA, NHL, etc.).</li>\n                        <li>Add players by entering their names and optional email addresses for notifications.</li>\n                        <li>Configure bet options including amount, team options (3, 5, 7, or 10), and betting type.</li>\n                        <li>Choose a payment method (Venmo, Cash App, PayPal, Hand to Hand) if using real money.</li>\n                        <li>Select the payout structure (Even Split, Winner Takes All, or Weighted Split).</li>\n                        <li>Click \"Refresh Live Odds\" to update current game information.</li>\n                    </ol>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Game Types</h3>\n                    <ul>\n                        <li><strong>Greek Game:</strong> An elimination-style betting pool where players pick one team each week. If your team wins, you survive to the next week. Each team can only be used once per season. Click the \"GREEK GAME\" button to get started.</li>\n                        <li><strong>50 Squares:</strong> A grid-based game where participants purchase squares on a 10×5 grid. Winners are determined by the last digit of each team's score at the end of quarters/game. Click the \"50 SQUARES\" button to set up a squares grid.</li>\n                        <li><strong>Traditional Pool:</strong> Players select multiple games and compete based on their winnings. This is the default mode when you select a league.</li>\n                        <li><strong>Play Against the Greek:</strong> Generate an AI opponent to compete against when playing alone. Click the \"Generate AI Player\" button to create a virtual opponent. The AI will automatically make smart picks based on odds and predictions.</li>\n                    </ul>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Player Management</h3>\n                    <ul>\n                        <li>Add a player by entering their name and optional email for notifications, then click \"Add Player\".</li>\n                        <li>Remove a player by clicking the \"Remove\" button on their player card.</li>\n                        <li>Submit picks for a player by selecting games and clicking \"Submit Picks\".</li>\n                        <li>Generate an AI player by clicking the \"Generate AI Player\" button in the Player Management section.</li>\n                        <li>AI players will automatically select picks based on odds and predictions.</li>\n                        <li>Once picks are submitted, they cannot be changed.</li>\n                        <li>Age verification is required at startup for real money betting (21+ only).</li>\n                        <li>The player limit is 30 players maximum, with a minimum of 2 players recommended.</li>\n                    </ul>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Betting Options</h3>\n                    <ul>\n                        <li><strong>Bet Amount:</strong> Set the amount each player contributes to the pot.</li>\n                        <li><strong>Team Options:</strong> Choose how many teams each player can select (3, 5, 7, or 10).</li>\n                        <li><strong>Betting Type:</strong> Choose between real money or fun bets.</li>\n                        <li><strong>Payment Methods:</strong> Select how players will pay (Venmo, Cash App, PayPal, or Hand to Hand).</li>\n                        <li><strong>Payout Structure:</strong> Determine how the winnings will be distributed:</li>\n                        <ul>\n                            <li>Even Split: All winners share the pot equally</li>\n                            <li>Winner Takes All: Last player standing takes the entire pot</li>\n                            <li>Weighted Split: First place gets 70%, second place gets 30%</li>\n                        </ul>\n                        <li><strong>Live Odds:</strong> Toggle real-time odds data from sportsbooks. When enabled, the latest odds are fetched from actual sportsbooks.</li>\n                        <li><strong>Special Events:</strong> Bet on prop bets for major events like championships.</li>\n                    </ul>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Game Selection</h3>\n                    <ul>\n                        <li>Select a league from the dropdown to see available games.</li>\n                        <li>Each game shows the teams, date/time, and betting options.</li>\n                        <li>Click on a betting option (ML, spread, over/under) to add it to tracked games:</li>\n                        <ul>\n                            <li>ML (Money Line): Bet on which team will win outright</li>\n                            <li>Spread: Bet with a point advantage or disadvantage</li>\n                            <li>Over/Under: Bet on the total points scored by both teams</li>\n                        </ul>\n                        <li>AI predictions are shown for each game with confidence percentages.</li>\n                        <li>Selected bets appear in the \"Tracked Games\" section and player cards.</li>\n                        <li>Use \"Clear All Selections\" to remove all tracked games.</li>\n                        <li>Use \"Hide Game Tracking\" to hide the tracked games section.</li>\n                        <li>Use \"Clear Duplicate Games\" to remove any duplicate selections.</li>\n                    </ul>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Sharing Games with Friends</h3>\n                    <ul>\n                        <li>Click \"Create Shareable Link\" to generate a unique URL for your game.</li>\n                        <li>Share the link via the \"Share via Email\" or \"Share via SMS\" buttons.</li>\n                        <li>Use the \"Start Screen Share\" option to display the game to remote participants through WebRTC.</li>\n                        <li>Click \"Open Chat Room\" to communicate with other players in real-time.</li>\n                        <li>Screen sharing controls allow you to pause or stop sharing at any time.</li>\n                        <li>The participant count is displayed when sharing your screen.</li>\n                        <li>WebRTC allows peer-to-peer screen sharing without additional software.</li>\n                    </ul>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Prediction History</h3>\n                    <ul>\n                        <li>The Prediction History section shows all your past picks and results.</li>\n                        <li>Each prediction shows the game, your pick, and whether it was a win or loss.</li>\n                        <li>Win percentages are calculated to show your success rate overall and by league.</li>\n                        <li>Use the \"Clear History\" button to reset your prediction history.</li>\n                        <li>Statistics are organized by league to see where your picks perform best.</li>\n                        <li>The system tracks win percentages and provides insights on your betting patterns.</li>\n                        <li>Green rows indicate winning picks, while red rows indicate losses.</li>\n                    </ul>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Simulation &amp; Results</h3>\n                    <ul>\n                        <li>Click \"Simulate Results\" to generate random outcomes for tracked games.</li>\n                        <li>Results will show which player's picks won or lost.</li>\n                        <li>The total pot will be distributed according to the selected payout structure.</li>\n                        <li>Email notifications can be sent to players with their results using the \"Test Email\" button.</li>\n                        <li>Simulation is useful for testing the application or for fun betting without waiting for real games.</li>\n                        <li>AI players' results are calculated based on the same simulation parameters as human players.</li>\n                    </ul>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Additional Controls</h3>\n                    <ul>\n                        <li><strong>Reset All:</strong> Clears all players, selections, and settings.</li>\n                        <li><strong>Refresh Live Odds:</strong> Updates the game odds and selections from current data.</li>\n                        <li><strong>Clear Duplicate Games:</strong> Removes any duplicate game selections.</li>\n                        <li><strong>Generate AI Player:</strong> Creates an AI opponent to play against.</li>\n                        <li><strong>Theme Selector:</strong> Change the color theme (Terminal Green, Cyber Blue, Hot Red, Dark Mode).</li>\n                        <li><strong>Help Guide:</strong> Opens this help documentation.</li>\n                        <li><strong>Test Email:</strong> Send a test notification to verify email functionality.</li>\n                        <li><strong>Admin Console:</strong> Access advanced settings by clicking the copyright text 3 times.</li>\n                    </ul>\n                </div>\n\n                <div class=\"help-section\">\n                    <h3>Playing Against the Greek (AI Opponent)</h3>\n                    <ul>\n                        <li>When playing alone, generate an AI opponent using the \"Generate AI Player\" button.</li>\n                        <li>The AI will be created as a new player with \"Greek AI\" in the name.</li>\n                        <li>The AI opponent will automatically make selections based on odds and predictions.</li>\n                        <li>AI picks are made strategically based on current odds and historical performance.</li>\n                        <li>You can have multiple AI opponents with different strategies.</li>\n                        <li>AI players can be removed just like regular players using the \"Remove\" button.</li>\n                        <li>Compare your performance against the AI to improve your betting strategy.</li>\n                        <li>AI difficulty levels can be adjusted in the settings (Conservative, Balanced, Aggressive).</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Age Verification Modal -->\n    <div class=\"modal-overlay\" id=\"ageVerificationModal\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2>Age Verification</h2>\n            </div>\n            <div class=\"modal-body\">\n                <p>You must be 21 or older to use real money features. Please verify your age.</p>\n                <div class=\"form-group\">\n                    <label for=\"birthDateInput\">Enter your birth date:</label>\n                    <input type=\"date\" id=\"birthDateInput\" class=\"terminal-input\">\n                </div>\n                <button id=\"verifyAgeBtn\" class=\"terminal-button\">Verify Age</button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Admin Modal -->\n    <div class=\"modal-overlay\" id=\"adminModal\">\n        <div class=\"modal-content\">\n            <button class=\"close-modal\">×</button>\n            <div class=\"modal-header\">\n                <h2>Admin Access</h2>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"form-group\">\n                    <label for=\"adminPassword\">Enter Admin Password:</label>\n                    <input type=\"password\" id=\"adminPassword\" class=\"terminal-input\">\n                </div>\n                <button id=\"adminLoginBtn\" class=\"terminal-button\">Login</button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Admin Console Modal -->\n    <div class=\"modal-overlay\" id=\"adminConsoleModal\" style=\"display: none; overflow-y: auto;\">\n        <div class=\"modal-content\" style=\"width: 90%; max-width: 1200px; max-height: 90vh; overflow-y: auto;\">\n            <button class=\"close-modal\" id=\"closeAdminConsoleBtn\">×</button>\n            <div class=\"modal-header\">\n                <h2>SYNTHIA AI ADMIN CONSOLE</h2>\n                <div class=\"subtitle\">Betting Terminal Configuration</div>\n                <div style=\"margin-top: 10px; display: flex; justify-content: space-between; align-items: center; background-color: rgba(0, 255, 0, 0.1); padding: 10px; border-radius: 4px;\">\n                    <div>\n                        <span style=\"color: var(--neon-green); font-weight: bold;\">Admin Status:</span>\n                        <span id=\"adminLoginStatus\" style=\"color: var(--terminal-green);\">Authenticated</span>\n                    </div>\n                    <div>\n                        <span style=\"color: var(--neon-green); font-weight: bold;\">Session expires in:</span>\n                        <span id=\"sessionTimer\" style=\"color: var(--terminal-green);\">30:00</span>\n                    </div>\n                    <button id=\"extendSessionBtn\" class=\"terminal-button\" style=\"padding: 5px 10px; font-size: 0.8em;\">Extend Session</button>\n                </div>\n            </div>\n            <div class=\"modal-body\" style=\"padding: 0 20px;\">\n                <style>\n                    /* Admin Console Styles */\n                    .tab-container {\n                        display: flex;\n                        flex-direction: column;\n                        width: 100%;\n                    }\n                    \n                    .tab-buttons {\n                        display: flex;\n                        flex-wrap: wrap;\n                        gap: 5px;\n                        margin-bottom: 20px;\n                        border-bottom: 1px solid var(--neon-green);\n                        padding-bottom: 10px;\n                    }\n                    \n                    .tab-button {\n                        background: var(--dark-bg);\n                        color: var(--neon-green);\n                        border: 1px solid var(--neon-green);\n                        padding: 10px 15px;\n                        cursor: pointer;\n                        transition: all 0.3s;\n                    }\n                    \n                    .tab-button:hover {\n                        background: rgba(0, 255, 0, 0.1);\n                    }\n                    \n                    .tab-button.active {\n                        background: var(--neon-green);\n                        color: var(--dark-bg);\n                    }\n                    \n                    .tab-content {\n                        display: none;\n                        padding: 20px 0;\n                    }\n                    \n                    .tab-content.active {\n                        display: block;\n                    }\n                    \n                    .settings-group {\n                        margin-bottom: 30px;\n                        padding: 20px;\n                        border: 1px solid var(--neon-green);\n                        border-radius: 5px;\n                        background: rgba(0, 0, 0, 0.3);\n                    }\n                    \n                    .settings-title {\n                        margin-top: 0;\n                        color: var(--neon-green);\n                        border-bottom: 1px dashed var(--neon-green);\n                        padding-bottom: 10px;\n                        margin-bottom: 20px;\n                    }\n                    \n                    .setting-row {\n                        display: flex;\n                        justify-content: space-between;\n                        align-items: center;\n                        margin-bottom: 15px;\n                        padding-bottom: 15px;\n                        border-bottom: 1px solid rgba(0, 255, 0, 0.1);\n                    }\n                    \n                    .setting-label {\n                        flex: 0 0 40%;\n                    }\n                    \n                    .setting-control {\n                        flex: 0 0 55%;\n                    }\n                    \n                    .setting-control select, \n                    .setting-control input[type=\"text\"],\n                    .setting-control input[type=\"number\"],\n                    .setting-control input[type=\"password\"] {\n                        width: 100%;\n                        padding: 8px;\n                        background: var(--dark-bg);\n                        border: 1px solid var(--neon-green);\n                        color: var(--terminal-green);\n                    }\n                    \n                    .toggle-switch {\n                        position: relative;\n                        display: inline-block;\n                        width: 60px;\n                        height: 34px;\n                    }\n                    \n                    .toggle-switch input {\n                        opacity: 0;\n                        width: 0;\n                        height: 0;\n                    }\n                    \n                    .slider {\n                        position: absolute;\n                        cursor: pointer;\n                        top: 0;\n                        left: 0;\n                        right: 0;\n                        bottom: 0;\n                        background-color: rgba(0, 0, 0, 0.5);\n                        transition: .4s;\n                        border: 1px solid var(--neon-green);\n                    }\n                    \n                    .slider:before {\n                        position: absolute;\n                        content: \"\";\n                        height: 26px;\n                        width: 26px;\n                        left: 4px;\n                        bottom: 3px;\n                        background-color: var(--dark-bg);\n                        transition: .4s;\n                    }\n                    \n                    input:checked + .slider {\n                        background-color: var(--neon-green);\n                    }\n                    \n                    input:checked + .slider:before {\n                        transform: translateX(26px);\n                    }\n                    \n                    .slider.round {\n                        border-radius: 34px;\n                    }\n                    \n                    .slider.round:before {\n                        border-radius: 50%;\n                    }\n                    \n                    .options-container {\n                        margin-bottom: 15px;\n                    }\n                    \n                    .option-row {\n                        display: flex;\n                        gap: 10px;\n                        margin-bottom: 10px;\n                    }\n                    \n                    .option-text {\n                        flex: 2;\n                    }\n                    \n                    .option-odds {\n                        flex: 1;\n                    }\n                    \n                    .form-group {\n                        margin-bottom: 20px;\n                    }\n                    \n                    .form-label {\n                        display: block;\n                        margin-bottom: 5px;\n                        color: var(--neon-green);\n                    }\n                    \n                    .status-indicator {\n                        margin-top: 15px;\n                        padding: 10px;\n                        border-radius: 5px;\n                        display: none;\n                    }\n                    \n                    .status-success {\n                        background-color: rgba(0, 255, 0, 0.1);\n                        border: 1px solid var(--neon-green);\n                    }\n                    \n                    .status-error {\n                        background-color: rgba(255, 0, 0, 0.1);\n                        border: 1px solid #ff0000;\n                        color: #ff5555;\n                    }\n                    \n                    .states-grid {\n                        display: grid;\n                        grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\n                        gap: 10px;\n                        margin-top: 15px;\n                    }\n                    \n                    .state-item {\n                        padding: 8px;\n                        text-align: center;\n                        border: 1px solid var(--neon-green);\n                        background-color: rgba(0, 0, 0, 0.3);\n                        cursor: pointer;\n                        transition: all 0.2s;\n                    }\n                    \n                    .state-item.restricted {\n                        background-color: rgba(255, 0, 0, 0.2);\n                        border-color: #ff5555;\n                        color: #ff5555;\n                    }\n                    \n                    .existing-prop-bets {\n                        max-height: 300px;\n                        overflow-y: auto;\n                        border: 1px solid rgba(0, 255, 0, 0.3);\n                        border-radius: 5px;\n                        padding: 10px;\n                        margin-bottom: 15px;\n                    }\n                    \n                    .prop-bet-item {\n                        background-color: rgba(0, 0, 0, 0.3);\n                        border: 1px solid var(--neon-green);\n                        padding: 15px;\n                        margin-bottom: 15px;\n                        border-radius: 5px;\n                    }\n                    \n                    .prop-bet-header {\n                        display: flex;\n                        justify-content: space-between;\n                        align-items: center;\n                        margin-bottom: 10px;\n                        padding-bottom: 5px;\n                        border-bottom: 1px dashed var(--neon-green);\n                    }\n                    \n                    .prop-bet-question {\n                        font-weight: bold;\n                        color: var(--neon-green);\n                    }\n                    \n                    .prop-bet-options {\n                        margin-top: 10px;\n                    }\n                    \n                    .prop-bet-option {\n                        background-color: rgba(0, 0, 0, 0.5);\n                        border: 1px solid var(--neon-green);\n                        padding: 8px 12px;\n                        margin-bottom: 5px;\n                        display: flex;\n                        justify-content: space-between;\n                    }\n                    \n                    .button-group {\n                        display: flex;\n                        gap: 10px;\n                    }\n                    \n                    .button.danger {\n                        background-color: rgba(255, 0, 0, 0.1);\n                        border-color: #ff5555;\n                        color: #ff5555;\n                    }\n                </style>\n                <div class=\"tab-container\">\n                    <div class=\"tab-buttons\">\n                        <button class=\"tab-button active\" data-tab=\"general\">General Settings</button>\n                        <button class=\"tab-button\" data-tab=\"special-events\">Special Events</button>\n                        <button class=\"tab-button\" data-tab=\"location\">Location Management</button>\n                        <button class=\"tab-button\" data-tab=\"security\">Security</button>\n                        <button class=\"tab-button\" data-tab=\"advanced\">Advanced</button>\n                        <button class=\"tab-button\" data-tab=\"help\">Help</button>\n                    </div>\n\n                    <!-- General Settings Tab -->\n                    <div id=\"general\" class=\"tab-content active\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Interface Settings</h3>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Default Theme</div>\n                                <div class=\"setting-control\">\n                                    <select id=\"defaultTheme\">\n                                        <option value=\"default\">Green Theme</option>\n                                        <option value=\"blue\">Blue Theme</option>\n                                        <option value=\"red\">Red Theme</option>\n                                        <option value=\"dark\">Dark Theme</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Default Team Count</div>\n                                <div class=\"setting-control\">\n                                    <select id=\"defaultTeamCount\">\n                                        <option value=\"1\">1 Team</option>\n                                        <option value=\"2\">2 Teams</option>\n                                        <option value=\"3\" selected=\"\">3 Teams</option>\n                                        <option value=\"4\">4 Teams</option>\n                                        <option value=\"5\">5 Teams</option>\n                                        <option value=\"6\">6 Teams</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Show Team Predictions</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"showPredictions\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable AI Players</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableAIPlayers\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Live Odds Settings</h3>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Live Odds</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableLiveOdds\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button id=\"saveGeneralSettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"generalStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Special Events Tab -->\n                    <div id=\"special-events\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Prop Bets Configuration</h3>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Prop Bets</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enablePropBets\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <!-- Existing Prop Bets Section -->\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Existing Prop Bets</h3>\n                            <div id=\"existingPropBets\" class=\"existing-prop-bets\">\n                                <!-- Prop bets will be loaded here -->\n                                <div class=\"prop-bet-item\">\n                                    <div class=\"prop-bet-header\">\n                                        <div class=\"prop-bet-title\">Super Bowl LVIII</div>\n                                        <div class=\"prop-bet-actions\">\n                                            <button class=\"terminal-button edit-prop\">Edit</button>\n                                            <button class=\"terminal-button remove-prop\">Remove</button>\n                                        </div>\n                                    </div>\n                                    <div class=\"prop-bet-question\">Who will score the first touchdown?</div>\n                                    <div class=\"prop-bet-options\">\n                                        <div class=\"prop-bet-option\">\n                                            <span>Patrick Mahomes</span>\n                                            <span>+550</span>\n                                        </div>\n                                        <div class=\"prop-bet-option\">\n                                            <span>Travis Kelce</span>\n                                            <span>+650</span>\n                                        </div>\n                                        <div class=\"prop-bet-option\">\n                                            <span>Christian McCaffrey</span>\n                                            <span>+450</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"prop-bet-item\">\n                                    <div class=\"prop-bet-header\">\n                                        <div class=\"prop-bet-title\">NBA All-Star Game</div>\n                                        <div class=\"prop-bet-actions\">\n                                            <button class=\"terminal-button edit-prop\">Edit</button>\n                                            <button class=\"terminal-button remove-prop\">Remove</button>\n                                        </div>\n                                    </div>\n                                    <div class=\"prop-bet-question\">Who will be the MVP?</div>\n                                    <div class=\"prop-bet-options\">\n                                        <div class=\"prop-bet-option\">\n                                            <span>LeBron James</span>\n                                            <span>+400</span>\n                                        </div>\n                                        <div class=\"prop-bet-option\">\n                                            <span>Giannis Antetokounmpo</span>\n                                            <span>+450</span>\n                                        </div>\n                                        <div class=\"prop-bet-option\">\n                                            <span>Kevin Durant</span>\n                                            <span>+500</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"button-group\" style=\"margin-top: 15px;\">\n                                <button id=\"refreshPropBets\" class=\"terminal-button\">Refresh List</button>\n                                <button id=\"clearAllPropBets\" class=\"terminal-button danger\">Clear All</button>\n                            </div>\n                        </div>\n\n                        <!-- Prop Bet Creation Form -->\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Create New Prop Bet</h3>\n\n                            <div class=\"form-group\">\n                                <label class=\"form-label\" for=\"propEventName\">Event Name</label>\n                                <input type=\"text\" id=\"propEventName\" placeholder=\"Super Bowl LVIII\">\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label class=\"form-label\" for=\"propQuestion\">Prop Bet Question</label>\n                                <input type=\"text\" id=\"propQuestion\" placeholder=\"Who will score the first touchdown?\">\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Betting Options</label>\n                                <div id=\"optionsContainer\" class=\"options-container\">\n                                    <div class=\"option-row\">\n                                        <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                                        <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+150\">\n                                    </div>\n                                    <div class=\"option-row\">\n                                        <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                                        <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+200\">\n                                    </div>\n                                </div>\n                                <button type=\"button\" id=\"addPropOption\" class=\"terminal-button\" style=\"margin-top: 10px;\">Add Option</button>\n                            </div>\n\n                            <button type=\"button\" id=\"createPropBet\" class=\"terminal-button\">Create Prop Bet</button>\n                        </div>\n\n                        <button id=\"saveSpecialEventsSettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"specialEventsStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Location Management Tab -->\n                    <div id=\"location\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Location Restrictions</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Geolocation Check</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableGeoCheck\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Restricted States</h3>\n                            <p>Select states where real money betting should be restricted:</p>\n                            \n                            <div class=\"button-group\" style=\"margin-bottom: 15px;\">\n                                <button id=\"selectAllStates\" class=\"terminal-button\">Select All</button>\n                                <button id=\"clearAllStates\" class=\"terminal-button\">Clear All</button>\n                            </div>\n                            \n                            <div id=\"statesGrid\" class=\"states-grid\">\n                                <!-- Visual state selector grid -->\n                                <div class=\"state-item\">AL</div>\n                                <div class=\"state-item\">AK</div>\n                                <div class=\"state-item restricted\">AZ</div>\n                                <div class=\"state-item\">AR</div>\n                                <div class=\"state-item restricted\">CA</div>\n                                <div class=\"state-item\">CO</div>\n                                <div class=\"state-item\">CT</div>\n                                <div class=\"state-item\">DE</div>\n                                <div class=\"state-item restricted\">FL</div>\n                                <div class=\"state-item\">GA</div>\n                                <div class=\"state-item\">HI</div>\n                                <div class=\"state-item\">ID</div>\n                                <div class=\"state-item restricted\">IL</div>\n                                <div class=\"state-item\">IN</div>\n                                <div class=\"state-item\">IA</div>\n                                <div class=\"state-item\">KS</div>\n                                <div class=\"state-item\">KY</div>\n                                <div class=\"state-item\">LA</div>\n                                <div class=\"state-item\">ME</div>\n                                <div class=\"state-item\">MD</div>\n                                <div class=\"state-item restricted\">MA</div>\n                                <div class=\"state-item\">MI</div>\n                                <div class=\"state-item\">MN</div>\n                                <div class=\"state-item\">MS</div>\n                                <div class=\"state-item\">MO</div>\n                                <div class=\"state-item\">MT</div>\n                                <div class=\"state-item\">NE</div>\n                                <div class=\"state-item restricted\">NV</div>\n                                <div class=\"state-item\">NH</div>\n                                <div class=\"state-item restricted\">NJ</div>\n                                <div class=\"state-item\">NM</div>\n                                <div class=\"state-item restricted\">NY</div>\n                                <div class=\"state-item\">NC</div>\n                                <div class=\"state-item\">ND</div>\n                                <div class=\"state-item\">OH</div>\n                                <div class=\"state-item\">OK</div>\n                                <div class=\"state-item\">OR</div>\n                                <div class=\"state-item restricted\">PA</div>\n                                <div class=\"state-item\">RI</div>\n                                <div class=\"state-item\">SC</div>\n                                <div class=\"state-item\">SD</div>\n                                <div class=\"state-item\">TN</div>\n                                <div class=\"state-item restricted\">TX</div>\n                                <div class=\"state-item\">UT</div>\n                                <div class=\"state-item\">VT</div>\n                                <div class=\"state-item\">VA</div>\n                                <div class=\"state-item\">WA</div>\n                                <div class=\"state-item\">WV</div>\n                                <div class=\"state-item\">WI</div>\n                                <div class=\"state-item\">WY</div>\n                            </div>\n                        </div>\n                        \n                        <button id=\"saveLocationSettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"locationStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Security Tab -->\n                    <div id=\"security\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Admin Access</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Admin Password</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"password\" id=\"newAdminPassword\" value=\"\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Confirm Password</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"password\" id=\"confirmAdminPassword\" value=\"\">\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Age Verification</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Require Age Verification</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"requireAgeVerification\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Custom Age Message</div>\n                                <div class=\"setting-control\">\n                                    <textarea id=\"ageVerificationMessage\" placeholder=\"You must be 21 or older to use real money features.\" rows=\"3\" style=\"width: 100%;\">You must be 21 or older to use real money betting features. By continuing, you confirm that you are of legal age in your jurisdiction.</textarea>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Reset Age Verification</div>\n                                <div class=\"setting-control\">\n                                    <button id=\"resetAgeVerification\" class=\"terminal-button\">Reset All Verifications</button>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <button id=\"saveSecuritySettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"securityStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Advanced Tab -->\n                    <div id=\"advanced\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Data Management</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Export Settings</div>\n                                <div class=\"setting-control\">\n                                    <button id=\"exportSettings\" class=\"terminal-button\">Export to JSON</button>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Import Settings</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"file\" id=\"importSettingsFile\" accept=\".json\" style=\"display: none;\">\n                                    <button id=\"importSettings\" class=\"terminal-button\">Import from JSON</button>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Reset to Defaults</div>\n                                <div class=\"setting-control\">\n                                    <button id=\"resetSettings\" class=\"terminal-button danger\">Reset All Settings</button>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">API Configuration</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">API Key (The Odds API)</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"text\" id=\"oddsApiKey\" placeholder=\"Enter your API key\" value=\"9253c8fe591d32bce8624945ac590287\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Cache Duration (minutes)</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"number\" id=\"cacheDuration\" min=\"1\" max=\"60\" value=\"15\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Debug Mode</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableDebugMode\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <button id=\"saveAdvancedSettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"advancedStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Help Tab -->\n                    <div id=\"help\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Usage Instructions</h3>\n                            <p>Welcome to the SYNTHIA AI Administration Console. This panel allows you to configure all aspects of the SYNTHIA AI Betting Terminal.</p>\n                            \n                            <div class=\"help-section\">\n                                <h4>General Settings</h4>\n                                <p>Configure the basic appearance and behavior of the application.</p>\n                                <ul>\n                                    <li><strong>Default Theme:</strong> Choose which color scheme is applied when users first open the app.</li>\n                                    <li><strong>Default Team Count:</strong> Set the initial number of teams users can select.</li>\n                                    <li><strong>Show Team Predictions:</strong> Toggle the AI predictions display for game outcomes.</li>\n                                    <li><strong>Enable AI Players:</strong> Allow users to generate AI opponents for gameplay.</li>\n                                    <li><strong>Live Odds Settings:</strong> Configure real-time odds updates from sportsbooks.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Special Events</h4>\n                                <p>Create and manage prop bets for special events.</p>\n                                <ul>\n                                    <li><strong>Enable Prop Bets:</strong> Toggle visibility of prop bets in the main application.</li>\n                                    <li><strong>Existing Prop Bets:</strong> View, edit and manage currently configured prop bets.</li>\n                                    <li><strong>Create New Prop Bet:</strong> Add custom prop bets for special events like championships.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Location Management</h4>\n                                <p>Configure geolocation restrictions for legal compliance.</p>\n                                <ul>\n                                    <li><strong>Enable Geolocation Check:</strong> Toggle whether the app checks user locations.</li>\n                                    <li><strong>Restricted States:</strong> Select US states where real money betting should be disabled.</li>\n                                    <li><strong>Select All/Clear All:</strong> Quickly configure state restrictions.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Security</h4>\n                                <p>Set the admin password and configure access control settings.</p>\n                                <ul>\n                                    <li><strong>Admin Password:</strong> Change the password required to access the admin console.</li>\n                                    <li><strong>Age Verification:</strong> Configure how the app verifies users are of legal age.</li>\n                                    <li><strong>Custom Age Message:</strong> Set a personalized message for age verification screens.</li>\n                                    <li><strong>Reset Verifications:</strong> Clear saved verification status, requiring users to verify again.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Advanced</h4>\n                                <p>Configure technical aspects of the application.</p>\n                                <ul>\n                                    <li><strong>Data Management:</strong> Export or import all settings to/from a JSON file.</li>\n                                    <li><strong>API Configuration:</strong> Set up API keys for odds data services.</li>\n                                    <li><strong>Cache Duration:</strong> Control how long odds data is cached before refreshing.</li>\n                                    <li><strong>Debug Mode:</strong> Enable additional logging for troubleshooting.</li>\n                                </ul>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Troubleshooting</h3>\n                            <div class=\"help-section\">\n                                <h4>Common Issues</h4>\n                                <ul>\n                                    <li><strong>Odds not updating:</strong> Check your API key in Advanced settings and ensure Live Odds is enabled.</li>\n                                    <li><strong>Settings not saving:</strong> Make sure your browser allows localStorage.</li>\n                                    <li><strong>Age verification appearing repeatedly:</strong> Reset age verification in Security tab.</li>\n                                    <li><strong>Prop bets not showing:</strong> Ensure prop bets are enabled in Special Events tab.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Support</h4>\n                                <p>For additional help, please contact SYNTHIA AI support at:</p>\n                                <p><strong>Email:</strong> support@synthia-ai.example.com</p>\n                                <p><strong>Version:</strong> <span id=\"appVersion\">1.2.4</span></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"modal-overlay\" id=\"adminConsoleModal\" style=\"display: none; overflow-y: auto;\">\n        <div class=\"modal-content\" style=\"width: 90%; max-width: 1200px; max-height: 90vh; overflow-y: auto;\">\n            <button class=\"close-modal\" id=\"closeAdminConsoleBtn\">×</button>\n            <div class=\"modal-header\">\n                <h2>SYNTHIA AI ADMIN CONSOLE</h2>\n                <div class=\"subtitle\">Betting Terminal Configuration</div>\n            </div>\n            <div class=\"modal-body\" style=\"padding: 0 20px;\">\n                <style>\n                    /* Admin Console Styles */\n                    .tab-container {\n                        display: flex;\n                        flex-direction: column;\n                        width: 100%;\n                    }\n                    \n                    .tab-buttons {\n                        display: flex;\n                        flex-wrap: wrap;\n                        gap: 5px;\n                        margin-bottom: 20px;\n                        border-bottom: 1px solid var(--neon-green);\n                        padding-bottom: 10px;\n                    }\n                    \n                    .tab-button {\n                        background: var(--dark-bg);\n                        color: var(--neon-green);\n                        border: 1px solid var(--neon-green);\n                        padding: 10px 15px;\n                        cursor: pointer;\n                        transition: all 0.3s;\n                    }\n                    \n                    .tab-button:hover {\n                        background: rgba(0, 255, 0, 0.1);\n                    }\n                    \n                    .tab-button.active {\n                        background: var(--neon-green);\n                        color: var(--dark-bg);\n                    }\n                    \n                    .tab-content {\n                        display: none;\n                        padding: 20px 0;\n                    }\n                    \n                    .tab-content.active {\n                        display: block;\n                    }\n                    \n                    .settings-group {\n                        margin-bottom: 30px;\n                        padding: 20px;\n                        border: 1px solid var(--neon-green);\n                        border-radius: 5px;\n                        background: rgba(0, 0, 0, 0.3);\n                    }\n                    \n                    .settings-title {\n                        margin-top: 0;\n                        color: var(--neon-green);\n                        border-bottom: 1px dashed var(--neon-green);\n                        padding-bottom: 10px;\n                        margin-bottom: 20px;\n                    }\n                    \n                    .setting-row {\n                        display: flex;\n                        justify-content: space-between;\n                        align-items: center;\n                        margin-bottom: 15px;\n                        padding-bottom: 15px;\n                        border-bottom: 1px solid rgba(0, 255, 0, 0.1);\n                    }\n                    \n                    .setting-label {\n                        flex: 0 0 40%;\n                    }\n                    \n                    .setting-control {\n                        flex: 0 0 55%;\n                    }\n                    \n                    .setting-control select, \n                    .setting-control input[type=\"text\"],\n                    .setting-control input[type=\"number\"],\n                    .setting-control input[type=\"password\"] {\n                        width: 100%;\n                        padding: 8px;\n                        background: var(--dark-bg);\n                        border: 1px solid var(--neon-green);\n                        color: var(--terminal-green);\n                    }\n                    \n                    .toggle-switch {\n                        position: relative;\n                        display: inline-block;\n                        width: 60px;\n                        height: 34px;\n                    }\n                    \n                    .toggle-switch input {\n                        opacity: 0;\n                        width: 0;\n                        height: 0;\n                    }\n                    \n                    .slider {\n                        position: absolute;\n                        cursor: pointer;\n                        top: 0;\n                        left: 0;\n                        right: 0;\n                        bottom: 0;\n                        background-color: rgba(0, 0, 0, 0.5);\n                        transition: .4s;\n                        border: 1px solid var(--neon-green);\n                    }\n                    \n                    .slider:before {\n                        position: absolute;\n                        content: \"\";\n                        height: 26px;\n                        width: 26px;\n                        left: 4px;\n                        bottom: 3px;\n                        background-color: var(--dark-bg);\n                        transition: .4s;\n                    }\n                    \n                    input:checked + .slider {\n                        background-color: var(--neon-green);\n                    }\n                    \n                    input:checked + .slider:before {\n                        transform: translateX(26px);\n                    }\n                    \n                    .slider.round {\n                        border-radius: 34px;\n                    }\n                    \n                    .slider.round:before {\n                        border-radius: 50%;\n                    }\n                    \n                    .options-container {\n                        margin-bottom: 15px;\n                    }\n                    \n                    .option-row {\n                        display: flex;\n                        gap: 10px;\n                        margin-bottom: 10px;\n                    }\n                    \n                    .option-text {\n                        flex: 2;\n                    }\n                    \n                    .option-odds {\n                        flex: 1;\n                    }\n                    \n                    .form-group {\n                        margin-bottom: 20px;\n                    }\n                    \n                    .form-label {\n                        display: block;\n                        margin-bottom: 5px;\n                        color: var(--neon-green);\n                    }\n                    \n                    .status-indicator {\n                        margin-top: 15px;\n                        padding: 10px;\n                        border-radius: 5px;\n                        display: none;\n                    }\n                    \n                    .status-success {\n                        background-color: rgba(0, 255, 0, 0.1);\n                        border: 1px solid var(--neon-green);\n                    }\n                    \n                    .status-error {\n                        background-color: rgba(255, 0, 0, 0.1);\n                        border: 1px solid #ff0000;\n                        color: #ff5555;\n                    }\n                </style>\n                <div class=\"tab-container\">\n                    <div class=\"tab-buttons\">\n                        <button class=\"tab-button active\" data-tab=\"general\">General Settings</button>\n                        <button class=\"tab-button\" data-tab=\"special-events\">Special Events</button>\n                        <button class=\"tab-button\" data-tab=\"location\">Location Management</button>\n                        <button class=\"tab-button\" data-tab=\"security\">Security</button>\n                        <button class=\"tab-button\" data-tab=\"advanced\">Advanced</button>\n                        <button class=\"tab-button\" data-tab=\"help\">Help</button>\n                    </div>\n\n                    <!-- General Settings Tab -->\n                    <div id=\"general\" class=\"tab-content active\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Interface Settings</h3>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Default Theme</div>\n                                <div class=\"setting-control\">\n                                    <select id=\"defaultTheme\">\n                                        <option value=\"default\">Green Theme</option>\n                                        <option value=\"blue\">Blue Theme</option>\n                                        <option value=\"red\">Red Theme</option>\n                                        <option value=\"dark\">Dark Theme</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Default Team Count</div>\n                                <div class=\"setting-control\">\n                                    <select id=\"defaultTeamCount\">\n                                        <option value=\"1\">1 Team</option>\n                                        <option value=\"2\">2 Teams</option>\n                                        <option value=\"3\" selected=\"\">3 Teams</option>\n                                        <option value=\"4\">4 Teams</option>\n                                        <option value=\"5\">5 Teams</option>\n                                        <option value=\"6\">6 Teams</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Show Team Predictions</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"showPredictions\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable AI Players</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableAIPlayers\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Live Odds Settings</h3>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Live Odds</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableLiveOdds\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button id=\"saveGeneralSettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"generalStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Special Events Tab -->\n                    <div id=\"special-events\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Prop Bets Configuration</h3>\n\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Prop Bets</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enablePropBets\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <!-- Existing Prop Bets Section -->\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Existing Prop Bets</h3>\n                            <div id=\"existingPropBets\" class=\"existing-prop-bets\">\n                                <p class=\"no-items-message\">No prop bets have been created yet.</p>\n                            </div>\n                            <div class=\"button-group\" style=\"margin-top: 15px;\">\n                                <button id=\"refreshPropBets\" class=\"terminal-button\">Refresh List</button>\n                                <button id=\"clearAllPropBets\" class=\"terminal-button danger\">Clear All</button>\n                            </div>\n                        </div>\n\n                        <!-- Prop Bet Creation Form -->\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Create New Prop Bet</h3>\n\n                            <div class=\"form-group\">\n                                <label class=\"form-label\" for=\"propEventName\">Event Name</label>\n                                <input type=\"text\" id=\"propEventName\" placeholder=\"Super Bowl LVIII\">\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label class=\"form-label\" for=\"propQuestion\">Prop Bet Question</label>\n                                <input type=\"text\" id=\"propQuestion\" placeholder=\"Who will score the first touchdown?\">\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Betting Options</label>\n                                <div id=\"optionsContainer\" class=\"options-container\">\n                                    <div class=\"option-row\">\n                                        <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                                        <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+150\">\n                                    </div>\n                                    <div class=\"option-row\">\n                                        <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                                        <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+200\">\n                                    </div>\n                                </div>\n                                <button type=\"button\" id=\"addPropOption\" class=\"terminal-button\" style=\"margin-top: 10px;\">Add Option</button>\n                            </div>\n\n                            <button type=\"button\" id=\"createPropBet\" class=\"terminal-button\">Create Prop Bet</button>\n                        </div>\n\n                        <button id=\"saveSpecialEventsSettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"specialEventsStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Location Management Tab -->\n                    <div id=\"location\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Location Restrictions</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Geolocation Check</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableGeoCheck\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Restricted States</h3>\n                            <p>Select states where real money betting should be restricted:</p>\n                            \n                            <div class=\"button-group\" style=\"margin-bottom: 15px;\">\n                                <button id=\"selectAllStates\" class=\"terminal-button\">Select All</button>\n                                <button id=\"clearAllStates\" class=\"terminal-button\">Clear All</button>\n                            </div>\n                            \n                            <div id=\"statesGrid\" class=\"states-grid\">\n                                <!-- States will be populated via JavaScript -->\n                            </div>\n                        </div>\n                        \n                        <button id=\"saveLocationSettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"locationStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Security Tab -->\n                    <div id=\"security\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Admin Access</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Admin Password</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"password\" id=\"newAdminPassword\" value=\"\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Confirm Password</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"password\" id=\"confirmAdminPassword\" value=\"\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Session Timeout (minutes)</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"number\" id=\"sessionTimeout\" min=\"1\" max=\"60\" value=\"30\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Two-Factor Authentication</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableTwoFactorAuth\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\" id=\"twoFactorSetupRow\" style=\"display: none;\">\n                                <div class=\"setting-label\">Two-Factor Setup</div>\n                                <div class=\"setting-control\">\n                                    <button id=\"setupTwoFactorBtn\" class=\"terminal-button\">Set Up Two-Factor</button>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Admin Login History</div>\n                                <div class=\"setting-control\">\n                                    <button id=\"viewLoginHistoryBtn\" class=\"terminal-button\">View History</button>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Age Verification</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Require Age Verification</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"requireAgeVerification\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Minimum Age Requirement</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"number\" id=\"minimumAgeRequirement\" min=\"18\" max=\"25\" value=\"21\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Custom Age Message</div>\n                                <div class=\"setting-control\">\n                                    <textarea id=\"ageVerificationMessage\" placeholder=\"You must be 21 or older to use real money features.\" rows=\"3\" style=\"width: 100%;\">You must be 21 or older to use real money betting features. By continuing, you confirm that you are of legal age in your jurisdiction.</textarea>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Reset Age Verification</div>\n                                <div class=\"setting-control\">\n                                    <button id=\"resetAgeVerification\" class=\"terminal-button\">Reset All Verifications</button>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Content Restrictions</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Content Filtering</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableContentFiltering\" checked=\"\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Filter Level</div>\n                                <div class=\"setting-control\">\n                                    <select id=\"filterLevel\">\n                                        <option value=\"low\">Low - Basic Filtering</option>\n                                        <option value=\"medium\" selected=\"\">Medium - Standard Filtering</option>\n                                        <option value=\"high\">High - Strict Filtering</option>\n                                    </select>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Custom Filter Words</div>\n                                <div class=\"setting-control\">\n                                    <textarea id=\"customFilterWords\" placeholder=\"Enter words to filter, separated by commas\" rows=\"3\" style=\"width: 100%;\"></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <button id=\"saveSecuritySettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"securityStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Advanced Tab -->\n                    <div id=\"advanced\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Data Management</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Export Settings</div>\n                                <div class=\"setting-control\">\n                                    <button id=\"exportSettings\" class=\"terminal-button\">Export to JSON</button>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Import Settings</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"file\" id=\"importSettingsFile\" accept=\".json\" style=\"display: none;\">\n                                    <button id=\"importSettings\" class=\"terminal-button\">Import from JSON</button>\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Reset to Defaults</div>\n                                <div class=\"setting-control\">\n                                    <button id=\"resetSettings\" class=\"terminal-button danger\">Reset All Settings</button>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">API Configuration</h3>\n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">API Key (The Odds API)</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"text\" id=\"oddsApiKey\" placeholder=\"Enter your API key\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Cache Duration (minutes)</div>\n                                <div class=\"setting-control\">\n                                    <input type=\"number\" id=\"cacheDuration\" min=\"1\" max=\"60\" value=\"15\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"setting-row\">\n                                <div class=\"setting-label\">Enable Debug Mode</div>\n                                <div class=\"setting-control\">\n                                    <label class=\"toggle-switch\">\n                                        <input type=\"checkbox\" id=\"enableDebugMode\">\n                                        <span class=\"slider round\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <button id=\"saveAdvancedSettings\" class=\"terminal-button\">Save Settings</button>\n                        <div id=\"advancedStatus\" class=\"status-indicator\"></div>\n                    </div>\n\n                    <!-- Help Tab -->\n                    <div id=\"help\" class=\"tab-content\">\n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Usage Instructions</h3>\n                            <p>Welcome to the SYNTHIA AI Administration Console. This panel allows you to configure all aspects of the SYNTHIA AI Betting Terminal.</p>\n                            \n                            <div class=\"help-section\">\n                                <h4>General Settings</h4>\n                                <p>Configure the basic appearance and behavior of the application.</p>\n                                <ul>\n                                    <li><strong>Default Theme:</strong> Choose which color scheme is applied when users first open the app.</li>\n                                    <li><strong>Default Team Count:</strong> Set the initial number of teams users can select.</li>\n                                    <li><strong>Show Team Predictions:</strong> Toggle the AI predictions display for game outcomes.</li>\n                                    <li><strong>Enable AI Players:</strong> Allow users to generate AI opponents for gameplay.</li>\n                                    <li><strong>Live Odds Settings:</strong> Configure real-time odds updates from sportsbooks.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Special Events</h4>\n                                <p>Create and manage prop bets for special events.</p>\n                                <ul>\n                                    <li><strong>Enable Prop Bets:</strong> Toggle visibility of prop bets in the main application.</li>\n                                    <li><strong>Existing Prop Bets:</strong> View, edit and manage currently configured prop bets.</li>\n                                    <li><strong>Create New Prop Bet:</strong> Add custom prop bets for special events like championships.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Location Management</h4>\n                                <p>Configure geolocation restrictions for legal compliance.</p>\n                                <ul>\n                                    <li><strong>Enable Geolocation Check:</strong> Toggle whether the app checks user locations.</li>\n                                    <li><strong>Restricted States:</strong> Select US states where real money betting should be disabled.</li>\n                                    <li><strong>Select All/Clear All:</strong> Quickly configure state restrictions.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Security</h4>\n                                <p>Set the admin password and configure access control settings.</p>\n                                <ul>\n                                    <li><strong>Admin Password:</strong> Change the password required to access the admin console.</li>\n                                    <li><strong>Age Verification:</strong> Configure how the app verifies users are of legal age.</li>\n                                    <li><strong>Custom Age Message:</strong> Set a personalized message for age verification screens.</li>\n                                    <li><strong>Reset Verifications:</strong> Clear saved verification status, requiring users to verify again.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Advanced</h4>\n                                <p>Configure technical aspects of the application.</p>\n                                <ul>\n                                    <li><strong>Data Management:</strong> Export or import all settings to/from a JSON file.</li>\n                                    <li><strong>API Configuration:</strong> Set up API keys for odds data services.</li>\n                                    <li><strong>Cache Duration:</strong> Control how long odds data is cached before refreshing.</li>\n                                    <li><strong>Debug Mode:</strong> Enable additional logging for troubleshooting.</li>\n                                </ul>\n                            </div>\n                        </div>\n                        \n                        <div class=\"settings-group\">\n                            <h3 class=\"settings-title\">Troubleshooting</h3>\n                            <div class=\"help-section\">\n                                <h4>Common Issues</h4>\n                                <ul>\n                                    <li><strong>Odds not updating:</strong> Check your API key in Advanced settings and ensure Live Odds is enabled.</li>\n                                    <li><strong>Settings not saving:</strong> Make sure your browser allows localStorage.</li>\n                                    <li><strong>Age verification appearing repeatedly:</strong> Reset age verification in Security tab.</li>\n                                    <li><strong>Prop bets not showing:</strong> Ensure prop bets are enabled in Special Events tab.</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"help-section\">\n                                <h4>Support</h4>\n                                <p>For additional help, please contact SYNTHIA AI support at:</p>\n                                <p><strong>Email:</strong> support@synthia-ai.example.com</p>\n                                <p><strong>Version:</strong> <span id=\"appVersion\">1.2.4</span></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Admin Console Script for Embedded Version -->\n    [JS_CODE_14]\n\n    <!-- 50 Squares Game Modal -->\n    <div class=\"modal-overlay\" id=\"squaresGameModal\">\n        <div class=\"modal-content\">\n            <button class=\"close-modal\">×</button>\n            <div class=\"modal-header\">\n                <h2>50 Squares Football Pool</h2>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"squares-setup\">\n                    <div class=\"form-group\">\n                        <label for=\"homeTeamInput\">Home Team:</label>\n                        <input type=\"text\" id=\"homeTeamInput\" class=\"terminal-input\" placeholder=\"Enter home team\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"awayTeamInput\">Away Team:</label>\n                        <input type=\"text\" id=\"awayTeamInput\" class=\"terminal-input\" placeholder=\"Enter away team\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"squareCost\">Cost Per Square:</label>\n                        <input type=\"number\" id=\"squareCost\" class=\"terminal-input\" value=\"10\" min=\"1\">\n                    </div>\n                    <button id=\"generateSquaresBtn\" class=\"terminal-button\">Generate Grid</button>\n                    [JS_CODE_15]\n                </div>\n\n                <div class=\"squares-grid-container\" style=\"display: none;\">\n                    <div class=\"squares-info\">\n                        <div class=\"squares-teams\">\n                            <div id=\"squaresHomeTeam\" class=\"squares-team\">Home: Chiefs</div>\n                            <div id=\"squaresAwayTeam\" class=\"squares-team\">Away: 49ers</div>\n                        </div>\n                        <div class=\"squares-stats\">\n                            <div>Squares Filled: <span id=\"squaresFilled\">0</span>/50</div>\n                            <div>Total Pot: $<span id=\"squaresTotalPot\">0</span></div>\n                        </div>\n                    </div>\n\n                    <div class=\"squares-numbers\">\n                        <div class=\"squares-axis-horizontal\" id=\"homeTeamNumbers\"></div>\n                        <div class=\"squares-axis-vertical\" id=\"awayTeamNumbers\"></div>\n                        <div class=\"squares-grid\" id=\"squaresGrid\"></div>\n                    </div>\n\n                    <div class=\"squares-controls\">\n                        <div class=\"form-group\">\n                            <label for=\"squareNameInput\">Name:</label>\n                            <input type=\"text\" id=\"squareNameInput\" class=\"terminal-input\" placeholder=\"Enter name\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"squareEmailInput\">Email:</label>\n                            <input type=\"email\" id=\"squareEmailInput\" class=\"terminal-input\" placeholder=\"Enter email\">\n                        </div>\n                        <button id=\"enterSquareInfoBtn\" class=\"terminal-button\">Enter Information</button>\n                        <button id=\"assignRandomSquareBtn\" class=\"terminal-button\">Assign Random Square</button>\n                        <button id=\"shareSquaresBtn\" class=\"terminal-button\">Share Grid</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Greek Game Modal -->\n    <div class=\"modal-overlay\" id=\"greekGameModal\">\n        <div class=\"modal-content\">\n            <button class=\"close-modal\">×</button>\n            <div class=\"modal-header\">\n                <h2>Greek Game Rules</h2>\n            </div>\n            <div class=\"modal-body\">\n                <p>The Greek Survivor Game is an elimination-style betting pool where players pick one team each week. If your team wins, you survive to the next week. Last player standing wins!</p>\n\n                <h4>Rules:</h4>\n                <ol>\n                    <li>Players must select one team per week</li>\n                    <li>Each team can only be used ONCE per season</li>\n                    <li>If your pick wins, you advance to the next week</li>\n                    <li>If your pick loses or ties, you're eliminated</li>\n                    <li>Last player(s) standing wins the pot</li>\n                </ol>\n\n                <div class=\"greek-game-controls\">\n                    <button id=\"startNewGreekGameBtn\" class=\"terminal-button\">Start New Greek Game</button>\n                    <button id=\"joinExistingGreekGameBtn\" class=\"terminal-button\">Join Existing Game</button>\n                </div>\n                [JS_CODE_16]\n            </div>\n        </div>\n    </div>\n\n    <!-- Screen Share UI -->\n    <div id=\"screenShareContainer\">\n        <div class=\"screen-share-header\">\n            <h3>Screen Sharing</h3>\n            <button id=\"closeScreenShareBtn\" class=\"terminal-button\">Close</button>\n        </div>\n        <div class=\"screen-share-content\">\n            <p>You are sharing your screen with <span id=\"participantCount\">0</span> participants.</p>\n            <div id=\"shareParticipantsList\"></div>\n        </div>\n        <div class=\"screen-share-controls\">\n            <button id=\"pauseScreenShareBtn\" class=\"terminal-button\">Pause</button>\n            <button id=\"stopScreenShareBtn\" class=\"terminal-button\">Stop Sharing</button>\n        </div>\n    </div>\n\n    [JS_CODE_17]\n\n\n    <!-- Super Admin Modal -->\n    <div class=\"modal-overlay\" id=\"superAdminModal\">\n        <div class=\"modal-content\" style=\"width: 90%; max-width: 1200px; max-height: 90vh; overflow-y: auto;\">\n            <button class=\"close-modal\" id=\"closeSuperAdminModalBtn\">×</button>\n            <div id=\"superAdminContent\"></div>ModalBtn\"&gt;×\n            <div id=\"superAdminContent\">\n                <!-- Content from super-admin.html will be loaded here -->\n            </div>\n        </div>\n    </div>\n\n    [JS_CODE_18]",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_anchor": "custom-html-n",
          "_PHPplaceholders": [],
          "_JSplaceholders": [
            "<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js\"></script>",
            "<script>\n        (function() {\n            try {\n                emailjs.init(\"Rne7cyNgL_TdFtDvZ\");\n                console.log(\"EmailJS initialized successfully\");\n            } catch (e) {\n                console.error(\"Error initializing EmailJS:\", e);\n            }\n        })();\n    </script>",
            "<script>\n// License Client JS\nconst LicenseClient = {\n    // License validation\n    validateLicense: function(licenseId, gameId) {\n        // Check if license is in localStorage\n        const storedLicense = localStorage.getItem('gsgLicense');\n        \n        if (!storedLicense) {\n            return {valid: false, message: 'No license found'};\n        }\n        \n        try {\n            const license = JSON.parse(storedLicense);\n            \n            // Verify license ID and game ID match\n            if (license.licenseId !== licenseId || license.gameId !== gameId) {\n                return {valid: false, message: 'Invalid license for this game'};\n            }\n            \n            // Check license status\n            if (license.status !== 'active') {\n                return {valid: false, message: 'License is not active'};\n            }\n            \n            // Check expiration\n            const now = new Date();\n            const expiry = new Date(license.expires);\n            \n            if (now > expiry) {\n                license.status = 'expired';\n                localStorage.setItem('gsgLicense', JSON.stringify(license));\n                return {valid: false, message: 'License has expired'};\n            }\n            \n            // Update last check-in time\n            license.lastCheckin = now.toISOString();\n            localStorage.setItem('gsgLicense', JSON.stringify(license));\n            \n            // Track activity\n            this.trackActivity(licenseId, 'validate');\n            \n            return {\n                valid: true, \n                message: 'License valid',\n                expires: expiry.toLocaleDateString(),\n                type: license.type\n            };\n        } catch (error) {\n            console.error('License validation error:', error);\n            return {valid: false, message: 'License validation failed'};\n        }\n    },\n    \n    // Store license locally\n    storeLicense: function(licenseData) {\n        localStorage.setItem('gsgLicense', JSON.stringify(licenseData));\n        this.trackActivity(licenseData.licenseId, 'store');\n    },\n    \n    // Remove license\n    removeLicense: function() {\n        const storedLicense = localStorage.getItem('gsgLicense');\n        if (storedLicense) {\n            const license = JSON.parse(storedLicense);\n            this.trackActivity(license.licenseId, 'remove');\n        }\n        localStorage.removeItem('gsgLicense');\n    },\n    \n    // Track activity\n    trackActivity: function(licenseId, action) {\n        // Create activity record\n        const activity = {\n            licenseId: licenseId,\n            timestamp: new Date().toISOString(),\n            action: action,\n            browser: navigator.userAgent,\n            online: navigator.onLine\n        };\n        \n        // Try to send activity to server\n        if (navigator.onLine) {\n            this.sendActivityToServer(activity);\n        } else {\n            // Store offline activities to send later\n            const offlineActivities = JSON.parse(localStorage.getItem('offlineActivities') || '[]');\n            offlineActivities.push(activity);\n            localStorage.setItem('offlineActivities', JSON.stringify(offlineActivities));\n        }\n    },\n    \n    // Send activity to server (simulation)\n    sendActivityToServer: function(activity) {\n        // In a real implementation, this would send data to your server\n        console.log('Activity sent to server:', activity);\n        \n        // For demo, we'll just store it locally\n        const activities = JSON.parse(localStorage.getItem('licenseActivities') || '[]');\n        activities.push(activity);\n        \n        // Only keep the last 1000 activities to prevent localStorage overflow\n        if (activities.length > 1000) {\n            activities.shift();\n        }\n        \n        localStorage.setItem('licenseActivities', JSON.stringify(activities));\n    },\n    \n    // Check for offline activities to sync\n    syncOfflineActivities: function() {\n        if (!navigator.onLine) return;\n        \n        const offlineActivities = JSON.parse(localStorage.getItem('offlineActivities') || '[]');\n        \n        if (offlineActivities.length === 0) return;\n        \n        // Send each activity to server\n        offlineActivities.forEach(activity => {\n            this.sendActivityToServer(activity);\n        });\n        \n        // Clear offline activities\n        localStorage.removeItem('offlineActivities');\n    },\n    \n    // Initialize\n    init: function() {\n        // Setup online/offline event listeners to sync activities\n        window.addEventListener('online', () => {\n            this.syncOfflineActivities();\n        });\n        \n        // Sync on initialization if online\n        if (navigator.onLine) {\n            this.syncOfflineActivities();\n        }\n        \n        // Add visibility change listener to track when user is active\n        document.addEventListener('visibilitychange', () => {\n            const storedLicense = localStorage.getItem('gsgLicense');\n            if (storedLicense) {\n                const license = JSON.parse(storedLicense);\n                if (document.visibilityState === 'visible') {\n                    this.trackActivity(license.licenseId, 'visible');\n                } else {\n                    this.trackActivity(license.licenseId, 'hidden');\n                }\n            }\n        });\n        \n        return this;\n    },\n    \n    // Check if license exists and is valid\n    hasValidLicense: function(gameId) {\n        const storedLicense = localStorage.getItem('gsgLicense');\n        if (!storedLicense) return false;\n        \n        try {\n            const license = JSON.parse(storedLicense);\n            \n            // Must match game ID\n            if (license.gameId !== gameId) return false;\n            \n            // Check status\n            if (license.status !== 'active') return false;\n            \n            // Check expiration\n            const now = new Date();\n            const expiry = new Date(license.expires);\n            \n            return now <= expiry;\n        } catch (error) {\n            console.error('License check error:', error);\n            return false;\n        }\n    },\n    \n    // Get license info\n    getLicenseInfo: function() {\n        const storedLicense = localStorage.getItem('gsgLicense');\n        if (!storedLicense) return null;\n        \n        try {\n            const license = JSON.parse(storedLicense);\n            return {\n                licenseId: license.licenseId,\n                gameId: license.gameId,\n                expires: new Date(license.expires).toLocaleDateString(),\n                type: license.type,\n                status: license.status\n            };\n        } catch (error) {\n            console.error('Get license info error:', error);\n            return null;\n        }\n    }\n};\n\n// Super Admin Object\nconst SuperAdmin = {\n    // Authentication\n    authenticate: function(username, password) {\n        const storedSuperUsers = JSON.parse(localStorage.getItem('superUsers') || '[]');\n        return storedSuperUsers.find(user => user.username === username && user.password === password);\n    },\n    \n    // PNL Data for Bars and Casinos\n    getPNLData: function() {\n        return {\n            bars: [\n                { name: \"Lucky's Bar\", revenue: 28450, expenses: 15320, profit: 13130, holdPercentage: 12 },\n                { name: \"Golden Eagle\", revenue: 42800, expenses: 31250, profit: 11550, holdPercentage: 9 },\n                { name: \"Silver Tavern\", revenue: 35620, expenses: 22340, profit: 13280, holdPercentage: 11 }\n            ],\n            casinos: [\n                { name: \"Royal Casino\", revenue: 128750, expenses: 89320, profit: 39430, holdPercentage: 15 },\n                { name: \"Lucky Star\", revenue: 95430, expenses: 62180, profit: 33250, holdPercentage: 13 },\n                { name: \"Golden Palace\", revenue: 156890, expenses: 103450, profit: 53440, holdPercentage: 14 }\n            ]\n        };\n    },\n    \n    // User tracking data\n    getUserStatistics: function() {\n        return {\n            totalUsers: 382,\n            activeUsersToday: 118,\n            newUsersThisWeek: 43,\n            averageSessionTime: \"28 minutes\",\n            topLocations: [\"Nevada\", \"New Jersey\", \"California\", \"Texas\", \"Florida\"],\n            deviceBreakdown: {\n                desktop: 42,\n                mobile: 48,\n                tablet: 10\n            }\n        };\n    },\n    \n    // License Management\n    generateLicense: function(gameId, duration, licenseType) {\n        const licenseId = 'GSG-' + Math.random().toString(36).substring(2, 10).toUpperCase() + '-' + gameId;\n        const today = new Date();\n        \n        let expiryDate = new Date(today);\n        if (duration === 'trial') {\n            expiryDate.setDate(today.getDate() + 10); // 10 day trial\n        } else if (duration === 'monthly') {\n            expiryDate.setMonth(today.getMonth() + 1); // Monthly\n        } else if (duration === '6month') {\n            expiryDate.setMonth(today.getMonth() + 6); // 6 months\n        } else if (duration === 'annual') {\n            expiryDate.setFullYear(today.getFullYear() + 1); // Annual\n        } else if (duration === 'lifetime') {\n            expiryDate.setFullYear(today.getFullYear() + 100); // Effectively lifetime\n        }\n        \n        const license = {\n            licenseId: licenseId,\n            gameId: gameId,\n            created: today.toISOString(),\n            expires: expiryDate.toISOString(),\n            type: licenseType,\n            status: 'active',\n            lastCheckin: today.toISOString(),\n            features: this.getLicenseFeatures(licenseType)\n        };\n        \n        // Store the license\n        const licenses = JSON.parse(localStorage.getItem('gameLicenses') || '[]');\n        licenses.push(license);\n        localStorage.setItem('gameLicenses', JSON.stringify(licenses));\n        \n        return license;\n    },\n    \n    getLicenseFeatures: function(licenseType) {\n        // Define available features based on license type\n        const features = {\n            basic: ['core', 'basic_odds', 'player_management'],\n            premium: ['core', 'live_odds', 'player_management', 'ai_players', 'stat_tracking'],\n            enterprise: ['core', 'live_odds', 'player_management', 'ai_players', 'stat_tracking', 'api_access', 'white_label']\n        };\n        \n        return features[licenseType] || features.basic;\n    },\n    \n    validateLicense: function(licenseId, gameId) {\n        const licenses = JSON.parse(localStorage.getItem('gameLicenses') || '[]');\n        const license = licenses.find(l => l.licenseId === licenseId && l.gameId === gameId);\n        \n        if (!license) {\n            return {valid: false, message: 'License not found'};\n        }\n        \n        if (license.status !== 'active') {\n            return {valid: false, message: 'License is not active'};\n        }\n        \n        const now = new Date();\n        const expiry = new Date(license.expires);\n        \n        if (now > expiry) {\n            license.status = 'expired';\n            this.updateLicense(license);\n            return {valid: false, message: 'License has expired'};\n        }\n        \n        // Calculate days remaining\n        const msPerDay = 24 * 60 * 60 * 1000;\n        const daysRemaining = Math.round((expiry - now) / msPerDay);\n        \n        // Update last check-in time\n        license.lastCheckin = now.toISOString();\n        this.updateLicense(license);\n        \n        return {\n            valid: true, \n            message: 'License valid',\n            expires: expiry.toLocaleDateString(),\n            type: license.type,\n            features: license.features || this.getLicenseFeatures(license.type),\n            daysRemaining: daysRemaining,\n            showWarning: daysRemaining <= 14,\n            urgentWarning: daysRemaining <= 7\n        };\n    },\n    \n    updateLicense: function(updatedLicense) {\n        const licenses = JSON.parse(localStorage.getItem('gameLicenses') || '[]');\n        const index = licenses.findIndex(l => l.licenseId === updatedLicense.licenseId);\n        \n        if (index !== -1) {\n            licenses[index] = updatedLicense;\n            localStorage.setItem('gameLicenses', JSON.stringify(licenses));\n            return true;\n        }\n        return false;\n    },\n    \n    revokeLicense: function(licenseId) {\n        const licenses = JSON.parse(localStorage.getItem('gameLicenses') || '[]');\n        const license = licenses.find(l => l.licenseId === licenseId);\n        \n        if (license) {\n            license.status = 'revoked';\n            this.updateLicense(license);\n            return true;\n        }\n        return false;\n    },\n    \n    getAllLicenses: function() {\n        return JSON.parse(localStorage.getItem('gameLicenses') || '[]');\n    },\n    \n    // Super User Management\n    createSuperUser: function(username, password, email, role) {\n        const superUsers = JSON.parse(localStorage.getItem('superUsers') || '[]');\n        \n        // Check if user already exists\n        if (superUsers.some(user => user.username === username)) {\n            return {success: false, message: 'Username already exists'};\n        }\n        \n        const newUser = {\n            id: Date.now(),\n            username: username,\n            password: password, // In production, use proper password hashing\n            email: email,\n            role: role || 'admin',\n            created: new Date().toISOString(),\n            lastLogin: null\n        };\n        \n        superUsers.push(newUser);\n        localStorage.setItem('superUsers', JSON.stringify(superUsers));\n        \n        return {success: true, message: 'Super user created successfully'};\n    },\n    \n    getAllUsers: function() {\n        return JSON.parse(localStorage.getItem('superUsers') || '[]');\n    },\n    \n    updateUser: function(userId, updates) {\n        const superUsers = JSON.parse(localStorage.getItem('superUsers') || '[]');\n        const index = superUsers.findIndex(user => user.id === userId);\n        \n        if (index !== -1) {\n            // Update user fields\n            Object.assign(superUsers[index], updates);\n            localStorage.setItem('superUsers', JSON.stringify(superUsers));\n            return {success: true, message: 'User updated successfully'};\n        }\n        \n        return {success: false, message: 'User not found'};\n    },\n    \n    deleteUser: function(userId) {\n        const superUsers = JSON.parse(localStorage.getItem('superUsers') || '[]');\n        const filteredUsers = superUsers.filter(user => user.id !== userId);\n        \n        if (filteredUsers.length < superUsers.length) {\n            localStorage.setItem('superUsers', JSON.stringify(filteredUsers));\n            return {success: true, message: 'User deleted successfully'};\n        }\n        \n        return {success: false, message: 'User not found'};\n    },\n    \n    updateLoginTime: function(username) {\n        const superUsers = JSON.parse(localStorage.getItem('superUsers') || '[]');\n        const user = superUsers.find(u => u.username === username);\n        \n        if (user) {\n            user.lastLogin = new Date().toISOString();\n            localStorage.setItem('superUsers', JSON.stringify(superUsers));\n            return true;\n        }\n        \n        return false;\n    },\n    \n    // Utilities\n    generateUniqueIdentifier: function() {\n        return 'GSG-' + Date.now().toString(36).toUpperCase() + \n               '-' + Math.random().toString(36).substring(2, 10).toUpperCase();\n    },\n    \n    formatPrice: function(type) {\n        switch(type) {\n            case 'trial': return 'Free for 10 days';\n            case 'monthly': return '$39.99/month';\n            case '6month': return '$229.99/6 months';\n            case 'annual': return '$349.99/year';\n            case 'lifetime': return '$999.99 one-time';\n            default: return 'Unknown';\n        }\n    },\n    \n    // Activity Tracking\n    trackUserActivity: function(licenseId, action) {\n        const activities = JSON.parse(localStorage.getItem('licenseActivities') || '[]');\n        \n        activities.push({\n            licenseId: licenseId,\n            timestamp: new Date().toISOString(),\n            action: action,\n            browser: navigator.userAgent,\n            online: navigator.onLine\n        });\n        \n        // Only keep the last 1000 activities to prevent localStorage overflow\n        if (activities.length > 1000) {\n            activities.shift();\n        }\n        \n        localStorage.setItem('licenseActivities', JSON.stringify(activities));\n    },\n    \n    getActivities: function(limit = 100) {\n        const activities = JSON.parse(localStorage.getItem('licenseActivities') || '[]');\n        return activities.slice(-limit);\n    },\n    \n    // Dashboard Statistics\n    getDashboardStats: function() {\n        const licenses = JSON.parse(localStorage.getItem('gameLicenses') || '[]');\n        const users = JSON.parse(localStorage.getItem('superUsers') || '[]');\n        const activities = JSON.parse(localStorage.getItem('licenseActivities') || '[]');\n        \n        const activeCount = licenses.filter(l => l.status === 'active').length;\n        const expiredCount = licenses.filter(l => l.status === 'expired').length;\n        const trialCount = licenses.filter(l => l.type === 'trial' && l.status === 'active').length;\n        \n        // Get licenses expiring in the next 7 days\n        const now = new Date();\n        const next7Days = new Date(now);\n        next7Days.setDate(now.getDate() + 7);\n        \n        const expiringCount = licenses.filter(l => {\n            const expiry = new Date(l.expires);\n            return l.status === 'active' && expiry > now && expiry <= next7Days;\n        }).length;\n        \n        // Calculate revenue (in a real app this would come from a proper database)\n        let revenue = 0;\n        licenses.forEach(l => {\n            if (l.status === 'active' || l.status === 'expired') {\n                switch(l.type) {\n                    case 'monthly': revenue += 39.99; break;\n                    case '6month': revenue += 229.99; break;\n                    case 'annual': revenue += 349.99; break;\n                    case 'lifetime': revenue += 999.99; break;\n                }\n            }\n        });\n        \n        // Get recent activity\n        const recentActivities = activities.slice(-5);\n        \n        return {\n            activeLicenses: activeCount,\n            expiredLicenses: expiredCount,\n            trialLicenses: trialCount,\n            expiringLicenses: expiringCount,\n            totalUsers: users.length,\n            totalRevenue: revenue.toFixed(2),\n            recentActivities: recentActivities\n        };\n    },\n    \n    // Export/Import functionality for backup\n    exportData: function() {\n        const data = {\n            licenses: JSON.parse(localStorage.getItem('gameLicenses') || '[]'),\n            users: JSON.parse(localStorage.getItem('superUsers') || '[]'),\n            activities: JSON.parse(localStorage.getItem('licenseActivities') || '[]'),\n            timestamp: new Date().toISOString()\n        };\n        \n        return JSON.stringify(data);\n    },\n    \n    importData: function(jsonData) {\n        try {\n            const data = JSON.parse(jsonData);\n            \n            if (data.licenses) {\n                localStorage.setItem('gameLicenses', JSON.stringify(data.licenses));\n            }\n            \n            if (data.users) {\n                localStorage.setItem('superUsers', JSON.stringify(data.users));\n            }\n            \n            if (data.activities) {\n                localStorage.setItem('licenseActivities', JSON.stringify(data.activities));\n            }\n            \n            return {success: true, message: 'Data imported successfully'};\n        } catch (error) {\n            return {success: false, message: 'Error importing data: ' + error.message};\n        }\n    }\n};\n\n// Initialize some default super users if none exist\ndocument.addEventListener('DOMContentLoaded', function() {\n    // License client initialization\n    LicenseClient.init();\n    \n    // Set up license verification button\n    const verifyLicenseBtn = document.getElementById('verifyLicenseBtn');\n    if (verifyLicenseBtn) {\n        verifyLicenseBtn.addEventListener('click', function() {\n            const gameId = document.getElementById('gameIdentifier').value;\n            const licenseKey = document.getElementById('licenseKey').value;\n            \n            if (!gameId || !licenseKey) {\n                alert('Please enter both Game Identifier and License Key');\n                return;\n            }\n            \n            // Validate the license\n            const validation = LicenseClient.validateLicense(licenseKey, gameId);\n            \n            if (validation.valid) {\n                // Show license details\n                const licenseForm = document.getElementById('licenseForm');\n                const licenseInfo = document.getElementById('licenseInfo');\n                const licenseDetails = document.getElementById('licenseDetails');\n                \n                if (licenseForm) licenseForm.style.display = 'none';\n                if (licenseInfo) licenseInfo.style.display = 'block';\n                \n                if (licenseDetails) {\n                    licenseDetails.innerHTML = `\n                        <p><strong>License Status:</strong> <span style=\"color: #00FF00;\">Valid</span></p>\n                        <p><strong>License ID:</strong> ${licenseKey}</p>\n                        <p><strong>Game ID:</strong> ${gameId}</p>\n                        <p><strong>Expires:</strong> ${validation.expires}</p>\n                        <p><strong>Type:</strong> ${validation.type}</p>\n                    `;\n                }\n                \n                // Update footer license info\n                updateFooterLicenseInfo();\n            } else {\n                alert(`License verification failed: ${validation.message}`);\n            }\n        });\n    }\n    \n    // Function to update footer license info\n    function updateFooterLicenseInfo() {\n        const footerLicenseInfo = document.getElementById('footerLicenseInfo');\n        if (footerLicenseInfo) {\n            const licenseInfo = LicenseClient.getLicenseInfo();\n            if (licenseInfo) {\n                footerLicenseInfo.innerHTML = `\n                    <span>License: ${licenseInfo.licenseId} (${licenseInfo.status}, expires: ${licenseInfo.expires})</span>\n                `;\n            } else {\n                footerLicenseInfo.innerHTML = '<span>License: Not activated</span>';\n            }\n        }\n    }\n    \n    // Check if we should open a specific tab (from license management redirect)\n    const tabToOpen = localStorage.getItem('openTab');\n    if (tabToOpen) {\n        // Find the tab button for this tab\n        const tabButton = document.querySelector(`.tab-button[data-tab=\"${tabToOpen}\"]`);\n        if (tabButton) {\n            // Simulate click on the tab\n            tabButton.click();\n        }\n        // Clear the stored tab to prevent it from reopening on refresh\n        localStorage.removeItem('openTab');\n    }\n    \n    // Function to initialize all button event listeners\n    function initializeEventListeners() {\n        // Add event listeners to license buttons\n        document.querySelectorAll('.terminal-button').forEach(button => {\n            // Remove any existing listeners first to prevent duplicates\n            const newButton = button.cloneNode(true);\n            button.parentNode.replaceChild(newButton, button);\n            \n            // Add click event\n            newButton.addEventListener('click', function() {\n                const action = this.textContent.trim();\n                \n                if (action === 'Generate License') {\n                    const gameId = document.getElementById('gameId')?.value;\n                    const licenseType = document.getElementById('licenseType')?.value;\n                    \n                    if (!gameId) {\n                        alert('Please enter a Game Identifier');\n                        return;\n                    }\n                    \n                    const license = SuperAdmin.generateLicense(gameId, licenseType, licenseType);\n                    alert(`License generated successfully: ${license.licenseId}`);\n                }\n                \n                if (action === 'Save Settings') {\n                    alert('Settings saved successfully!');\n                }\n                \n                if (action === 'Revoke') {\n                    if (confirm('Are you sure you want to revoke this license?')) {\n                        const licenseItem = this.closest('.license-item');\n                        if (licenseItem) {\n                            licenseItem.remove();\n                        }\n                    }\n                }\n                \n                if (action === 'Create User') {\n                    const username = document.getElementById('username')?.value;\n                    const email = document.getElementById('email')?.value;\n                    \n                    if (!username || !email) {\n                        alert('Please enter both username and email');\n                        return;\n                    }\n                    \n                    alert(`User ${username} created successfully!`);\n                }\n            });\n        });\n    }\n    \n    // Check for super users, create default if none exist\n    const superUsers = JSON.parse(localStorage.getItem('superUsers') || '[]');\n    if (superUsers.length === 0) {\n        SuperAdmin.createSuperUser('superadmin', 'admin123', 'admin@greeksurvivorgame.com', 'superadmin');\n    }\n\n    // Update footer license info on page load\n    updateFooterLicenseInfo();\n    \n    // Set up link between license management and super admin dashboard\n    const licenseManagementBtn = document.getElementById('licenseManagementBtn');\n    if (licenseManagementBtn) {\n        licenseManagementBtn.addEventListener('click', function(e) {\n            e.preventDefault();\n            \n            // First check if super user modal exists\n            const superUserModal = document.getElementById('superUserModal');\n            if (superUserModal) {\n                superUserModal.style.display = 'flex';\n                \n                // Try to switch to licenses tab if iframe is loaded\n                try {\n                    const iframe = superUserModal.querySelector('iframe');\n                    if (iframe && iframe.contentWindow) {\n                        const licenseTabBtn = iframe.contentWindow.document.querySelector('[data-tab=\"licenses\"]');\n                        if (licenseTabBtn) {\n                            licenseTabBtn.click();\n                        }\n                    }\n                } catch (e) {\n                    console.error(\"Could not access iframe content:\", e);\n                }\n            } else {\n                // Show password modal\n                createSuperAdminPasswordModal();\n                localStorage.setItem('openTab', 'licenses');\n            }\n        });\n    }\n    \n    // Set up the hold percentage feature\n    const enableHoldToggle = document.getElementById('enableHoldToggle');\n    const holdPercentageInput = document.getElementById('holdPercentage');\n    \n    if (enableHoldToggle && holdPercentageInput) {\n        // Load saved values\n        enableHoldToggle.checked = localStorage.getItem('enableHoldPercentage') === 'true';\n        holdPercentageInput.value = localStorage.getItem('holdPercentage') || '10';\n        \n        // Set up change handlers\n        enableHoldToggle.addEventListener('change', function() {\n            localStorage.setItem('enableHoldPercentage', this.checked);\n        });\n        \n        holdPercentageInput.addEventListener('change', function() {\n            localStorage.setItem('holdPercentage', this.value);\n        });\n    }\n    \n    // Password modal functionality\n    const verifyPasswordBtn = document.getElementById('verifyPasswordBtn');\n    const passwordInput = document.getElementById('superAdminPassword');\n    const passwordError = document.getElementById('passwordError');\n    \n    if (verifyPasswordBtn && passwordInput) {\n        verifyPasswordBtn.addEventListener('click', function() {\n            const enteredPassword = passwordInput.value;\n            \n            if (enteredPassword === 'admin123') {\n                const passwordModal = document.getElementById('passwordModal');\n                const superAdminDashboard = document.getElementById('superAdminDashboard');\n                \n                if (passwordModal) passwordModal.style.display = 'none';\n                if (superAdminDashboard) superAdminDashboard.style.display = 'block';\n                \n                passwordInput.value = '';\n                if (passwordError) passwordError.style.display = 'none';\n            } else {\n                if (passwordError) passwordError.style.display = 'block';\n                passwordInput.value = '';\n                passwordInput.focus();\n            }\n        });\n        \n        // Allow Enter key to submit\n        passwordInput.addEventListener('keypress', function(e) {\n            if (e.key === 'Enter') {\n                verifyPasswordBtn.click();\n            }\n        });\n    }\n    \n    // License verification button setup\n    const showLicenseBtn = document.getElementById('showLicenseBtn');\n    if (showLicenseBtn) {\n        showLicenseBtn.addEventListener('click', function(e) {\n            e.preventDefault();\n            \n            const licenseModal = document.getElementById('licenseModal');\n            if (licenseModal) {\n                licenseModal.style.display = 'flex';\n                \n                // Set up close button\n                const closeBtn = licenseModal.querySelector('.close-modal');\n                if (closeBtn) {\n                    closeBtn.addEventListener('click', function() {\n                        licenseModal.style.display = 'none';\n                    });\n                }\n                \n                // Check if license already exists\n                if (LicenseClient.getLicenseInfo()) {\n                    // Show license info\n                    document.getElementById('licenseForm').style.display = 'none';\n                    document.getElementById('licenseInfo').style.display = 'block';\n                    \n                    const licenseInfo = LicenseClient.getLicenseInfo();\n                    document.getElementById('licenseDetails').innerHTML = `\n                        <p><strong>License Status:</strong> <span style=\"color: #00FF00;\">${licenseInfo.status.charAt(0).toUpperCase() + licenseInfo.status.slice(1)}</span></p>\n                        <p><strong>License ID:</strong> ${licenseInfo.licenseId}</p>\n                        <p><strong>Game ID:</strong> ${licenseInfo.gameId}</p>\n                        <p><strong>Expires:</strong> ${licenseInfo.expires}</p>\n                        <p><strong>Type:</strong> ${licenseInfo.type}</p>\n                    `;\n                } else {\n                    // Show license form\n                    document.getElementById('licenseForm').style.display = 'block';\n                    document.getElementById('licenseInfo').style.display = 'none';\n                }\n            }\n        });\n    }\n});\n\n// Function to create a password modal if it doesn't exist\nfunction createSuperAdminPasswordModal() {\n    const modal = document.createElement('div');\n    modal.id = 'passwordModal';\n    modal.classList.add('modal-overlay');\n    modal.style.display = 'flex';\n    modal.style.position = 'fixed';\n    modal.style.top = '0';\n    modal.style.left = '0';\n    modal.style.width = '100%';\n    modal.style.height = '100%';\n    modal.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n    modal.style.justifyContent = 'center';\n    modal.style.alignItems = 'center';\n    modal.style.zIndex = '1000';\n    \n    modal.innerHTML = `\n        <div class=\"modal\" style=\"background-color: #0C0C0C; border: 2px solid #00FF00; border-radius: 10px; padding: 30px; width: 90%; max-width: 400px; color: #33FF33; font-family: monospace; box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);\">\n            <h2 style=\"color: #00FF00; text-align: center; margin-bottom: 20px;\">SUPER ADMIN ACCESS</h2>\n            <p style=\"text-align: center;\">Enter the super admin password to continue</p>\n            <input type=\"password\" id=\"superAdminPassword\" placeholder=\"Password\" style=\"width: 100%; padding: 12px; margin: 20px 0; background-color: rgba(0, 0, 0, 0.7); border: 1px solid #00FF00; color: #33FF33; font-family: monospace; font-size: 16px; border-radius: 5px; box-sizing: border-box;\">\n            <button id=\"submitSuperAdminPassword\" style=\"background-color: rgba(0, 255, 0, 0.1); color: #00FF00; border: 1px solid #00FF00; padding: 12px 25px; cursor: pointer; font-family: monospace; font-size: 16px; font-weight: bold; transition: all 0.3s; border-radius: 5px; width: 100%; margin-bottom: 10px;\">VERIFY</button>\n            <button id=\"closePasswordModal\" style=\"background-color: rgba(255, 0, 0, 0.1); color: #FF3333; border: 1px solid #FF3333; padding: 8px 15px; cursor: pointer; font-family: monospace; transition: all 0.3s; border-radius: 5px; width: 100%;\">CANCEL</button>\n            <div id=\"passwordErrorMsg\" style=\"color: #FF3333; margin-top: 15px; display: none; text-align: center;\">Incorrect password. Please try again.</div>\n            <p style=\"margin-top: 15px; font-size: 0.8em; color: #33FF33; text-align: center;\">For testing: use \"admin123\" as the password</p>\n        </div>\n    `;\n    document.body.appendChild(modal);\n\n    const submitBtn = document.getElementById('submitSuperAdminPassword');\n    const closeBtn = document.getElementById('closePasswordModal');\n    const passwordInput = document.getElementById('superAdminPassword');\n    \n    submitBtn.addEventListener('click', function() {\n        const password = passwordInput.value;\n        if (password === 'admin123') { // The test password\n            modal.style.display = 'none';\n            \n            // Load super-admin.html content\n            fetch('super-admin.html')\n                .then(response => response.text())\n                .then(html => {\n                    // Create modal for super admin dashboard if it doesn't exist\n                    let superUserModal = document.getElementById('superUserModal');\n                    if (!superUserModal) {\n                        superUserModal = document.createElement('div');\n                        superUserModal.id = 'superUserModal';\n                        superUserModal.className = 'modal-overlay';\n                        superUserModal.style.display = 'flex';\n                        superUserModal.style.position = 'fixed';\n                        superUserModal.style.top = '0';\n                        superUserModal.style.left = '0';\n                        superUserModal.style.width = '100%';\n                        superUserModal.style.height = '100%';\n                        superUserModal.style.backgroundColor = 'rgba(0, 0, 0, 0.9)';\n                        superUserModal.style.justifyContent = 'center';\n                        superUserModal.style.alignItems = 'center';\n                        superUserModal.style.zIndex = '1000';\n                        \n                        const modalContent = document.createElement('div');\n                        modalContent.className = 'super-admin-content';\n                        modalContent.style.width = '90%';\n                        modalContent.style.maxWidth = '1200px';\n                        modalContent.style.maxHeight = '90vh';\n                        modalContent.style.overflowY = 'auto';\n                        modalContent.style.backgroundColor = '#0C0C0C';\n                        modalContent.style.border = '2px solid #00FF00';\n                        modalContent.style.borderRadius = '10px';\n                        modalContent.style.padding = '20px';\n                        modalContent.style.position = 'relative';\n                        \n                        const closeButton = document.createElement('button');\n                        closeButton.id = 'closeSuperUserModalBtn';\n                        closeButton.innerHTML = '×';\n                        closeButton.style.position = 'absolute';\n                        closeButton.style.top = '10px';\n                        closeButton.style.right = '10px';\n                        closeButton.style.backgroundColor = 'transparent';\n                        closeButton.style.border = 'none';\n                        closeButton.style.color = '#FF3333';\n                        closeButton.style.fontSize = '24px';\n                        closeButton.style.cursor = 'pointer';\n                        \n                        modalContent.appendChild(closeButton);\n                        superUserModal.appendChild(modalContent);\n                        document.body.appendChild(superUserModal);\n                        \n                        closeButton.addEventListener('click', function() {\n                            superUserModal.style.display = 'none';\n                        });\n                    } else {\n                        // If it exists, just display it\n                        superUserModal.style.display = 'flex';\n                    }\n                    \n                    // Parse the HTML content\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString(html, 'text/html');\n                    \n                    // Insert the dashboard content\n                    const dashboardContent = doc.querySelector('.container');\n                    if (dashboardContent) {\n                        const contentArea = superUserModal.querySelector('.super-admin-content');\n                        if (contentArea) {\n                            contentArea.innerHTML = '';\n                            \n                            // Add close button\n                            const closeButton = document.createElement('button');\n                            closeButton.id = 'closeSuperUserModalBtn';\n                            closeButton.innerHTML = '×';\n                            closeButton.style.position = 'absolute';\n                            closeButton.style.top = '10px';\n                            closeButton.style.right = '10px';\n                            closeButton.style.backgroundColor = 'transparent';\n                            closeButton.style.border = 'none';\n                            closeButton.style.color = '#FF3333';\n                            closeButton.style.fontSize = '24px';\n                            closeButton.style.cursor = 'pointer';\n                            \n                            contentArea.appendChild(closeButton);\n                            contentArea.appendChild(dashboardContent);\n                            \n                            closeButton.addEventListener('click', function() {\n                                superUserModal.style.display = 'none';\n                            });\n                            \n                            // Initialize dashboard after it's loaded\n                            initializeDashboard();\n                        }\n                    }\n                })\n                .catch(error => {\n                    console.error('Error loading super-admin.html:', error);\n                    alert('Error loading Super Admin Dashboard. Please try again.');\n                });\n        } else {\n            document.getElementById('passwordErrorMsg').style.display = 'block';\n            passwordInput.value = '';\n            passwordInput.focus();\n        }\n    });\n    \n    closeBtn.addEventListener('click', function() {\n        modal.style.display = 'none';\n    });\n    \n    // Allow pressing Enter to submit\n    passwordInput.addEventListener('keypress', function(e) {\n        if (e.key === 'Enter') {\n            submitBtn.click();\n        }\n    });\n    \n    // Focus the password input\n    passwordInput.focus();\n}\n\n// Initialize the dashboard\nfunction initializeDashboard() {\n    // Setup tab navigation\n    const tabButtons = document.querySelectorAll('.tab-button');\n    const tabContents = document.querySelectorAll('.tab-content');\n\n    tabButtons.forEach(button => {\n        button.addEventListener('click', function() {\n            const tabId = this.getAttribute('data-tab');\n            \n            // Remove active class from all buttons and tabs\n            tabButtons.forEach(btn => btn.classList.remove('active'));\n            tabContents.forEach(content => content.classList.remove('active'));\n            \n            // Add active class to clicked button and corresponding tab\n            this.classList.add('active');\n            const tabContent = document.getElementById(tabId);\n            if (tabContent) {\n                tabContent.classList.add('active');\n            }\n        });\n    });\n    \n    // PNL Dashboard tabs\n    const pnlTabButtons = document.querySelectorAll('[data-pnl-tab]');\n    if (pnlTabButtons.length > 0) {\n        pnlTabButtons.forEach(button => {\n            button.addEventListener('click', function() {\n                const tabId = 'pnl-' + this.getAttribute('data-pnl-tab');\n                \n                // Remove active class from all buttons and contents\n                pnlTabButtons.forEach(btn => btn.classList.remove('active'));\n                document.querySelectorAll('.pnl-content').forEach(content => content.classList.remove('active'));\n                \n                // Add active class to clicked button and corresponding content\n                this.classList.add('active');\n                const tabContent = document.getElementById(tabId);\n                if (tabContent) {\n                    tabContent.classList.add('active');\n                }\n            });\n        });\n    }\n    \n    // License generation button\n    const generateLicenseBtn = document.getElementById('generateLicenseBtn');\n    if (generateLicenseBtn) {\n        generateLicenseBtn.addEventListener('click', function() {\n            const gameId = document.getElementById('gameId')?.value;\n            const licenseType = document.getElementById('licenseType')?.value;\n            \n            if (!gameId) {\n                alert('Please enter a Game Identifier');\n                return;\n            }\n            \n            // Generate a license ID\n            const licenseId = 'GSG-' + Math.random().toString(36).substring(2, 8).toUpperCase() + '-' + gameId;\n            \n            // Get expiration date based on license type\n            const today = new Date();\n            let expiryDate = new Date(today);\n            \n            switch(licenseType) {\n                case 'trial':\n                    expiryDate.setDate(today.getDate() + 10); // 10 day trial\n                    break;\n                case 'monthly':\n                    expiryDate.setMonth(today.getMonth() + 1); // Monthly\n                    break;\n                case '6month':\n                    expiryDate.setMonth(today.getMonth() + 6); // 6 months\n                    break;\n                case 'annual':\n                    expiryDate.setFullYear(today.getFullYear() + 1); // Annual\n                    break;\n            }\n            \n            const formattedExpiry = expiryDate.toLocaleDateString();\n            \n            // Create a new license item and add it to the list\n            const licensesList = document.getElementById('activeLicensesList');\n            if (licensesList) {\n                const newLicense = document.createElement('li');\n                newLicense.className = 'license-item';\n                newLicense.innerHTML = `\n                    <span><strong>License ID:</strong> ${licenseId}</span>\n                    <span><strong>Game ID:</strong> ${gameId}</span>\n                    <span><strong>Type:</strong> ${document.getElementById('licenseType').options[document.getElementById('licenseType').selectedIndex].text}</span>\n                    <span><strong>Expires:</strong> ${formattedExpiry}</span>\n                    <span><strong>Status:</strong> Active</span>\n                    <button class=\"terminal-button\">Revoke</button>\n                `;\n                \n                licensesList.insertBefore(newLicense, licensesList.firstChild);\n                \n                // Add event listener to the new revoke button\n                const revokeBtn = newLicense.querySelector('.terminal-button');\n                revokeBtn.addEventListener('click', function() {\n                    if (confirm('Are you sure you want to revoke this license?')) {\n                        newLicense.remove();\n                    }\n                });\n                \n                // Clear the game ID field\n                document.getElementById('gameId').value = '';\n                \n                // Add to activity log\n                const activityLog = document.getElementById('activityLog');\n                if (activityLog) {\n                    const now = new Date();\n                    const formattedDate = now.toLocaleDateString() + ' ' + now.toLocaleTimeString();\n                    const activityItem = document.createElement('div');\n                    activityItem.textContent = `[${formattedDate}] New license ${licenseId} generated`;\n                    activityLog.insertBefore(activityItem, activityLog.firstChild);\n                }\n                \n                alert(`License generated successfully:\\nLicense ID: ${licenseId}\\nExpires: ${formattedExpiry}`);\n            }\n        });\n    }\n    \n    // Load sample PNL data\n    loadSamplePNLData();\n}\n\n// Sample PNL data for the dashboard\nfunction loadSamplePNLData() {\n    const sampleData = {\n        bars: [\n            { name: \"Lucky's Bar\", revenue: 28450, expenses: 15320, profit: 13130, holdPercentage: 12 },\n            { name: \"Golden Eagle\", revenue: 42800, expenses: 31250, profit: 11550, holdPercentage: 9 },\n            { name: \"Silver Tavern\", revenue: 35620, expenses: 22340, profit: 13280, holdPercentage: 11 }\n        ],\n        casinos: [\n            { name: \"Royal Casino\", revenue: 128750, expenses: 89320, profit: 39430, holdPercentage: 15 },\n            { name: \"Lucky Star\", revenue: 95430, expenses: 62180, profit: 33250, holdPercentage: 13 },\n            { name: \"Golden Palace\", revenue: 156890, expenses: 103450, profit: 53440, holdPercentage: 14 }\n        ]\n    };\n\n    // Process bars data\n    const barsTable = document.getElementById('bars-pnl-data');\n    if (barsTable) {\n        const tbody = barsTable.querySelector('tbody') || barsTable;\n        let barsHtml = '';\n        let barsTotalRevenue = 0;\n        let barsTotalProfit = 0;\n        let barsHoldTotal = 0;\n\n        sampleData.bars.forEach(bar => {\n            barsTotalRevenue += bar.revenue;\n            barsTotalProfit += bar.profit;\n            barsHoldTotal += bar.holdPercentage;\n\n            barsHtml += `\n                <tr>\n                    <td>${bar.name}</td>\n                    <td>$${bar.revenue.toLocaleString()}</td>\n                    <td>$${bar.expenses.toLocaleString()}</td>\n                    <td>$${bar.profit.toLocaleString()}</td>\n                    <td>${bar.holdPercentage}%</td>\n                    <td>\n                        <button class=\"terminal-button\">View</button>\n                        <button class=\"terminal-button\">Edit</button>\n                    </td>\n                </tr>\n            `;\n        });\n\n        tbody.innerHTML = barsHtml;\n        \n        if (document.getElementById('bars-total-revenue')) {\n            document.getElementById('bars-total-revenue').textContent = '$' + barsTotalRevenue.toLocaleString();\n        }\n        if (document.getElementById('bars-total-profit')) {\n            document.getElementById('bars-total-profit').textContent = '$' + barsTotalProfit.toLocaleString();\n        }\n        if (document.getElementById('bars-avg-hold')) {\n            document.getElementById('bars-avg-hold').textContent = (barsHoldTotal / sampleData.bars.length).toFixed(1) + '%';\n        }\n    }\n\n    // Process casinos data\n    const casinosTable = document.getElementById('casinos-pnl-data');\n    if (casinosTable) {\n        const tbody = casinosTable.querySelector('tbody') || casinosTable;\n        let casinosHtml = '';\n        let casinosTotalRevenue = 0;\n        let casinosTotalProfit = 0;\n        let casinosHoldTotal = 0;\n\n        sampleData.casinos.forEach(casino => {\n            casinosTotalRevenue += casino.revenue;\n            casinosTotalProfit += casino.profit;\n            casinosHoldTotal += casino.holdPercentage;\n\n            casinosHtml += `\n                <tr>\n                    <td>${casino.name}</td>\n                    <td>$${casino.revenue.toLocaleString()}</td>\n                    <td>$${casino.expenses.toLocaleString()}</td>\n                    <td>$${casino.profit.toLocaleString()}</td>\n                    <td>${casino.holdPercentage}%</td>\n                    <td>\n                        <button class=\"terminal-button\">View</button>\n                        <button class=\"terminal-button\">Edit</button>\n                    </td>\n                </tr>\n            `;\n        });\n\n        tbody.innerHTML = casinosHtml;\n        \n        if (document.getElementById('casinos-total-revenue')) {\n            document.getElementById('casinos-total-revenue').textContent = '$' + casinosTotalRevenue.toLocaleString();\n        }\n        if (document.getElementById('casinos-total-profit')) {\n            document.getElementById('casinos-total-profit').textContent = '$' + casinosTotalProfit.toLocaleString();\n        }\n        if (document.getElementById('casinos-avg-hold')) {\n            document.getElementById('casinos-avg-hold').textContent = (casinosHoldTotal / sampleData.casinos.length).toFixed(1) + '%';\n        }\n    }\n}\n\n// Function to update footer license info\nfunction updateFooterLicenseInfo() {\n    // Replace with your actual license info update logic\n    const licenseInfo = localStorage.getItem('licenseInfo') || 'License not found';\n    const footerLicenseInfo = document.getElementById('footerLicenseInfo');\n    if (footerLicenseInfo) {\n        footerLicenseInfo.textContent = licenseInfo;\n    }\n}\n</script>",
            "<script src=\"license-client.js\"></script>",
            "<script src=\"admin-payment.js\"></script>",
            "<script src=\"super-admin.js\"></script>",
            "<script src=\"script.js\"></script>",
            "<script>\n                // Test email functionality\n                document.addEventListener('DOMContentLoaded', function() {\n                    const testEmailBtn = document.getElementById('testEmailBtn');\n                    if (testEmailBtn) {\n                        testEmailBtn.addEventListener('click', function() {\n                            // Call the testEmail function from script.js\n                            if (typeof testEmail === 'function') {\n                                testEmail();\n                            } else {\n                                console.error('testEmail function not found');\n                                alert('Email test function is not available');\n                            }\n                        });\n                    }\n                    \n                    // Initialize AI Player button\n                    const generateAIPlayerBtn = document.getElementById('generateAIPlayerBtn');\n                    if (generateAIPlayerBtn) {\n                        generateAIPlayerBtn.addEventListener('click', function() {\n                            generateAIPlayer();\n                        });\n                    }\n                    \n                    // Check if AI Players are enabled in admin settings\n                    const enableAIPlayers = localStorage.getItem('enableAIPlayers') !== 'false';\n                    if (generateAIPlayerBtn) {\n                        generateAIPlayerBtn.style.display = enableAIPlayers ? 'inline-block' : 'none';\n                    }\n                });\n                \n                // Function to generate an AI player\n                function generateAIPlayer() {\n                    // Check if AI Players are enabled in admin settings\n                    const enableAIPlayers = localStorage.getItem('enableAIPlayers') !== 'false';\n                    if (!enableAIPlayers) {\n                        alert(\"AI Players have been disabled by the administrator\");\n                        return null;\n                    }\n                    \n                    // Get AI difficulty\n                    const aiDifficulty = document.querySelector('input[name=\"aiDifficulty\"]:checked')?.value || 'balanced';\n                    const difficultyNames = {\n                        'conservative': 'Conservative',\n                        'balanced': 'Balanced',\n                        'aggressive': 'Aggressive'\n                    };\n                    \n                    // Generate a random name for the AI\n                    const aiNames = [\n                        'Greek AI', 'Smart Bettor', 'The Oracle', 'Nostradamus', 'Vegas Insider', \n                        'Odds Master', 'Prophet', 'Predictor', 'The Algorithm', 'BetMaster'\n                    ];\n                    const randomName = aiNames[Math.floor(Math.random() * aiNames.length)];\n                    const aiName = `${randomName} (${difficultyNames[aiDifficulty]})`;\n                    \n                    // Add AI player to the players list\n                    const playersList = document.getElementById('playersList');\n                    if (!playersList) {\n                        console.error(\"Players list element not found\");\n                        alert(\"Error: Could not find players list element\");\n                        return null;\n                    }\n                    \n                    // Check for no players message and remove it\n                    const noPlayersMessage = document.getElementById('noPlayersMessage');\n                    if (noPlayersMessage && playersList.contains(noPlayersMessage)) {\n                        playersList.removeChild(noPlayersMessage);\n                    }\n                    \n                    // Create player box\n                    const playerBox = document.createElement('div');\n                    playerBox.className = 'player-box ai-player';\n                    playerBox.setAttribute('data-player-id', 'ai_' + Date.now());\n                    playerBox.setAttribute('data-ai-difficulty', aiDifficulty);\n                    \n                    playerBox.innerHTML = `\n                        <div class=\"player-info\">\n                            <span class=\"player-name\">${aiName}</span>\n                            <span class=\"player-status\">AI Player</span>\n                        </div>\n                        <div class=\"player-actions\">\n                            <button class=\"terminal-button remove-player-btn\">Remove</button>\n                            <button class=\"terminal-button generate-picks-btn\">Generate Picks</button>\n                        </div>\n                        <div class=\"parlay-card\">\n                            <h4>${aiName}'s Picks</h4>\n                            <div class=\"parlay-card-content\">\n                                <p>AI picks will be generated automatically</p>\n                            </div>\n                        </div>\n                    `;\n                    \n                    playersList.appendChild(playerBox);\n                    \n                    // Add event listeners to buttons\n                    const removeBtn = playerBox.querySelector('.remove-player-btn');\n                    if (removeBtn) {\n                        removeBtn.addEventListener('click', function() {\n                            if (confirm('Remove this AI player?')) {\n                                playerBox.remove();\n                                updatePlayerCount();\n                                \n                                // Add back no players message if no players left\n                                if (playersList.children.length === 0) {\n                                    playersList.innerHTML = '<p id=\"noPlayersMessage\">No players added yet. Add players above.</p>';\n                                }\n                            }\n                        });\n                    }\n                    \n                    const generateBtn = playerBox.querySelector('.generate-picks-btn');\n                    if (generateBtn) {\n                        generateBtn.addEventListener('click', function() {\n                            generateAIPicks(playerBox, aiDifficulty);\n                            this.disabled = true;\n                            this.textContent = 'Picks Generated';\n                            playerBox.setAttribute('data-submitted', 'true');\n                        });\n                    }\n                    \n                    // Update player count\n                    updatePlayerCount();\n                    \n                    // Show AI difficulty settings\n                    const difficultyRow = document.getElementById('aiDifficultyRow');\n                    if (difficultyRow) {\n                        difficultyRow.style.display = 'flex';\n                    }\n                    \n                    // Generate picks automatically after a short delay\n                    setTimeout(() => {\n                        generateAIPicks(playerBox, aiDifficulty);\n                        const generatePicksBtn = playerBox.querySelector('.generate-picks-btn');\n                        if (generatePicksBtn) {\n                            generatePicksBtn.disabled = true;\n                            generatePicksBtn.textContent = 'Picks Generated';\n                        }\n                        playerBox.setAttribute('data-submitted', 'true');\n                    }, 1500);\n                    \n                    return playerBox;\n                }\n                \n                // Function to generate AI picks based on difficulty\n                function generateAIPicks(playerBox, difficulty) {\n                    if (!playerBox) return;\n                    \n                    const parlayContent = playerBox.querySelector('.parlay-card-content');\n                    if (!parlayContent) return;\n                    \n                    // Clear existing content\n                    parlayContent.innerHTML = '';\n                    \n                    // Get current games\n                    const league = document.getElementById('leagueSelect')?.value;\n                    if (!league || !currentGames || currentGames.length === 0) {\n                        parlayContent.innerHTML = '<p>No games available to make picks</p>';\n                        return;\n                    }\n                    \n                    // Get team limit\n                    const teamLimit = parseInt(document.getElementById('teamOptions')?.value) || 3;\n                    \n                    // Make AI picks based on difficulty\n                    const aiPicks = [];\n                    \n                    // Create a copy of games to work with\n                    const availableGames = [...currentGames];\n                    \n                    // Different strategies based on difficulty\n                    switch(difficulty) {\n                        case 'conservative':\n                            // Conservative: Pick favorites with lowest risk\n                            for (let i = 0; i < teamLimit && availableGames.length > 0; i++) {\n                                // Sort by closest to even odds (least risk)\n                                availableGames.sort((a, b) => {\n                                    const aOdds = parseInt(a.homeOdds) || 0;\n                                    const bOdds = parseInt(b.homeOdds) || 0;\n                                    return Math.abs(aOdds) - Math.abs(bOdds);\n                                });\n                                \n                                const game = availableGames.shift();\n                                const pick = {\n                                    game: game,\n                                    betType: 'ML',\n                                    team: parseInt(game.homeOdds) < parseInt(game.awayOdds) ? game.homeTeam : game.awayTeam,\n                                    odds: parseInt(game.homeOdds) < parseInt(game.awayOdds) ? game.homeOdds : game.awayOdds,\n                                    gameId: game.id\n                                };\n                                aiPicks.push(pick);\n                            }\n                            break;\n                            \n                        case 'aggressive':\n                            // Aggressive: Pick underdogs with high potential return\n                            for (let i = 0; i < teamLimit && availableGames.length > 0; i++) {\n                                // Sort by highest positive odds (highest risk/reward)\n                                availableGames.sort((a, b) => {\n                                    const aOdds = Math.max(parseInt(a.homeOdds) || 0, parseInt(a.awayOdds) || 0);\n                                    const bOdds = Math.max(parseInt(b.homeOdds) || 0, parseInt(b.awayOdds) || 0);\n                                    return bOdds - aOdds; // Highest odds first\n                                });\n                                \n                                const game = availableGames.shift();\n                                const useHomeTeam = parseInt(game.homeOdds) > parseInt(game.awayOdds);\n                                const pick = {\n                                    game: game,\n                                    betType: 'ML',\n                                    team: useHomeTeam ? game.homeTeam : game.awayTeam,\n                                    odds: useHomeTeam ? game.homeOdds : game.awayOdds,\n                                    gameId: game.id\n                                };\n                                aiPicks.push(pick);\n                            }\n                            break;\n                            \n                        default: // balanced\n                            // Balanced: Mix of safe bets and some calculated risks\n                            for (let i = 0; i < teamLimit && availableGames.length > 0; i++) {\n                                // Random mix of strategies\n                                if (Math.random() > 0.4) {\n                                    // 60% favorite picks\n                                    const game = availableGames[Math.floor(Math.random() * availableGames.length)];\n                                    const useHomeTeam = parseInt(game.homeOdds) < parseInt(game.awayOdds);\n                                    const pick = {\n                                        game: game,\n                                        betType: Math.random() > 0.3 ? 'ML' : 'SPREAD',\n                                        team: useHomeTeam ? game.homeTeam : game.awayTeam,\n                                        odds: useHomeTeam ? game.homeOdds : game.awayOdds,\n                                        value: useHomeTeam ? game.homeSpread : game.awaySpread,\n                                        gameId: game.id\n                                    };\n                                    aiPicks.push(pick);\n                                } else {\n                                    // 40% underdog picks\n                                    const game = availableGames[Math.floor(Math.random() * availableGames.length)];\n                                    const useHomeTeam = parseInt(game.homeOdds) > parseInt(game.awayOdds);\n                                    const pick = {\n                                        game: game,\n                                        betType: Math.random() > 0.3 ? 'ML' : 'SPREAD',\n                                        team: useHomeTeam ? game.homeTeam : game.awayTeam,\n                                        odds: useHomeTeam ? game.homeOdds : game.awayOdds,\n                                        value: useHomeTeam ? game.homeSpread : game.awaySpread,\n                                        gameId: game.id\n                                    };\n                                    aiPicks.push(pick);\n                                }\n                                \n                                // Remove used game\n                                const gameIndex = availableGames.findIndex(g => g.id === aiPicks[aiPicks.length-1].gameId);\n                                if (gameIndex >= 0) {\n                                    availableGames.splice(gameIndex, 1);\n                                }\n                            }\n                    }\n                    \n                    // Display AI picks in the player card\n                    if (aiPicks.length === 0) {\n                        parlayContent.innerHTML = '<p>AI could not make any picks</p>';\n                        return;\n                    }\n                    \n                    aiPicks.forEach((pick, index) => {\n                        const gameItem = document.createElement('div');\n                        gameItem.className = 'parlay-item';\n                        \n                        let betDetails = '';\n                        if (pick.betType === 'ML') {\n                            betDetails = `${pick.team} ML (${pick.odds})`;\n                        } else if (pick.betType === 'SPREAD') {\n                            betDetails = `${pick.team} ${pick.value} (${pick.odds})`;\n                        }\n                        \n                        gameItem.innerHTML = `\n                            <span>${pick.game.homeTeam} vs ${pick.game.awayTeam}: ${betDetails}</span>\n                            <span class=\"ai-confidence\">${Math.floor(Math.random() * 30) + 70}%</span>\n                        `;\n                        \n                        parlayContent.appendChild(gameItem);\n                    });\n                    \n                    // Add an informational note about AI strategy\n                    const strategyNote = document.createElement('div');\n                    strategyNote.className = 'ai-strategy-note';\n                    strategyNote.innerHTML = `\n                        <p style=\"font-size: 0.8em; margin-top: 10px; color: var(--neon-green); font-style: italic;\">\n                            AI Strategy: ${difficulty.charAt(0).toUpperCase() + difficulty.slice(1)} - \n                            ${difficulty === 'conservative' ? 'Low risk, consistent returns' : \n                              difficulty === 'aggressive' ? 'High risk, high reward' : \n                              'Balanced approach with mixed risk'}\n                        </p>\n                    `;\n                    parlayContent.appendChild(strategyNote);\n                }\n            </script>",
            "<script>\n                    // Check if AI Players are enabled in admin settings\n                    document.addEventListener('DOMContentLoaded', function() {\n                        const enableAIPlayers = localStorage.getItem('enableAIPlayers') !== 'false';\n                        const generateAIPlayerBtn = document.getElementById('generateAIPlayerBtn');\n                        if (generateAIPlayerBtn) {\n                            generateAIPlayerBtn.style.display = enableAIPlayers ? 'inline-block' : 'none';\n                        }\n                    });\n                </script>",
            "<script>\n                        // Setup share game button\n                        document.getElementById('shareGameBtn').addEventListener('click', function() {\n                            // Generate a unique game ID\n                            const gameId = 'GSG-' + Date.now().toString(36).toUpperCase() + \n                                   '-' + Math.random().toString(36).substring(2, 10).toUpperCase();\n                            \n                            // Create shareable URL\n                            const shareUrl = window.location.origin + window.location.pathname + '?game=' + gameId;\n                            \n                            // Show URL in container\n                            const shareUrlContainer = document.getElementById('shareUrlContainer');\n                            const shareUrlElement = document.getElementById('shareUrl');\n                            \n                            if (shareUrlContainer && shareUrlElement) {\n                                shareUrlElement.textContent = shareUrl;\n                                shareUrlContainer.style.display = 'block';\n                            }\n                        });\n                    </script>",
            "<script>\n                // Screen Share Button handler\n                document.getElementById('startScreenShareBtn').addEventListener('click', function() {\n                    // Show brief explanation about permissions\n                    const statusIndicator = document.getElementById('statusIndicator');\n                    if (statusIndicator) {\n                        statusIndicator.textContent = 'Starting screen share... Please select which content to share in the popup dialog.';\n                        statusIndicator.style.display = 'block';\n                        setTimeout(() => {\n                            startScreenShare();\n                        }, 500);\n                    } else {\n                        startScreenShare();\n                    }\n                });\n                \n                // Function to start screen sharing\n                function startScreenShare() {\n                    const screenShareContainer = document.getElementById('screenShareContainer');\n                    if (!screenShareContainer) return;\n                    \n                    screenShareContainer.style.display = 'block';\n                    \n                    // Get participant count element\n                    const participantCount = document.getElementById('participantCount');\n                    if (participantCount) {\n                        participantCount.textContent = '0';\n                    }\n                    \n                    // Check if browser supports screen sharing\n                    if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n                        navigator.mediaDevices.getDisplayMedia({\n                            video: true,\n                            audio: true\n                        }).then(stream => {\n                            // Display local preview\n                            const localPreview = document.createElement('div');\n                            localPreview.className = 'local-preview';\n                            localPreview.innerHTML = '<div class=\"preview-label\">Your Screen (Preview)</div>';\n                            \n                            const videoElement = document.createElement('video');\n                            videoElement.srcObject = stream;\n                            videoElement.autoplay = true;\n                            videoElement.muted = true;\n                            videoElement.style.width = '100%';\n                            videoElement.style.maxHeight = '100px';\n                            \n                            localPreview.appendChild(videoElement);\n                            screenShareContainer.querySelector('.screen-share-content').appendChild(localPreview);\n                            \n                            // Simulate viewer connection\n                            setTimeout(() => {\n                                const participantCount = document.getElementById('participantCount');\n                                const participantsList = document.getElementById('shareParticipantsList');\n                                \n                                if (participantCount) {\n                                    participantCount.textContent = '1';\n                                }\n                                \n                                if (participantsList) {\n                                    participantsList.innerHTML = '<div>Guest User (Connected)</div>';\n                                }\n                            }, 2000);\n                            \n                            // Add stop handler\n                            stream.getVideoTracks()[0].onended = function() {\n                                stopScreenShare();\n                            };\n                        }).catch(error => {\n                            console.error('Error accessing display media:', error);\n                            alert('Unable to access your screen. Please make sure you have granted permission.');\n                        });\n                    } else {\n                        alert('Screen sharing is not supported in your browser.');\n                    }\n                }\n                \n                // Function to stop screen sharing\n                function stopScreenShare() {\n                    const screenShareContainer = document.getElementById('screenShareContainer');\n                    if (screenShareContainer) {\n                        screenShareContainer.style.display = 'none';\n                        \n                        // Clean up preview\n                        const localPreview = screenShareContainer.querySelector('.local-preview');\n                        if (localPreview) {\n                            localPreview.remove();\n                        }\n                    }\n                    \n                    // Reset participant count\n                    const participantCount = document.getElementById('participantCount');\n                    if (participantCount) {\n                        participantCount.textContent = '0';\n                    }\n                    \n                    // Clear participants list\n                    const participantsList = document.getElementById('shareParticipantsList');\n                    if (participantsList) {\n                        participantsList.innerHTML = '';\n                    }\n                }\n                \n                // Set up stop screen share button\n                document.getElementById('stopScreenShareBtn').addEventListener('click', function() {\n                    stopScreenShare();\n                });\n                \n                // Set up close screen share button\n                document.getElementById('closeScreenShareBtn').addEventListener('click', function() {\n                    const screenShareContainer = document.getElementById('screenShareContainer');\n                    if (screenShareContainer) {\n                        screenShareContainer.style.display = 'none';\n                    }\n                });\n            </script>",
            "<script>\n                    // Add event listener for the close button\n                    document.addEventListener('DOMContentLoaded', function() {\n                        const closeShareUrlBtn = document.getElementById('closeShareUrlBtn');\n                        if (closeShareUrlBtn) {\n                            closeShareUrlBtn.addEventListener('click', function() {\n                                const shareUrlContainer = document.getElementById('shareUrlContainer');\n                                if (shareUrlContainer) {\n                                    shareUrlContainer.style.display = 'none';\n                                }\n                            });\n                        }\n                        \n                        // Setup create link button\n                        const createLinkBtn = document.getElementById('createLinkBtn');\n                        if (createLinkBtn) {\n                            createLinkBtn.addEventListener('click', function() {\n                                // Generate a unique game ID\n                                const gameId = 'GSG-' + Date.now().toString(36).toUpperCase() + \n                                       '-' + Math.random().toString(36).substring(2, 10).toUpperCase();\n                                \n                                // Create shareable URL\n                                const shareUrl = window.location.origin + window.location.pathname + '?game=' + gameId;\n                                \n                                // Show URL in container\n                                const shareUrlContainer = document.getElementById('shareUrlContainer');\n                                const shareUrlElement = document.getElementById('shareUrl');\n                                \n                                if (shareUrlContainer && shareUrlElement) {\n                                    shareUrlElement.textContent = shareUrl;\n                                    shareUrlContainer.style.display = 'block';\n                                }\n                            });\n                        }\n                        \n                        // Setup open chat button\n                        const openChatBtn = document.getElementById('openChatBtn');\n                        if (openChatBtn) {\n                            openChatBtn.addEventListener('click', function() {\n                                const shareChatContainer = document.getElementById('shareChatContainer');\n                                if (shareChatContainer) {\n                                    shareChatContainer.style.display = 'block';\n                                }\n                            });\n                        }\n                        \n                        // Setup send chat button\n                        const sendChatBtn = document.getElementById('sendChatBtn');\n                        if (sendChatBtn) {\n                            sendChatBtn.addEventListener('click', function() {\n                                const chatInput = document.getElementById('shareChatInput');\n                                const chatMessages = document.getElementById('shareChatMessages');\n                                \n                                if (chatInput && chatMessages && chatInput.value.trim()) {\n                                    const message = document.createElement('div');\n                                    message.className = 'chat-message host';\n                                    message.innerHTML = `<span class=\"chat-name host\">You:</span> ${chatInput.value}`;\n                                    \n                                    chatMessages.appendChild(message);\n                                    chatInput.value = '';\n                                    \n                                    // Auto scroll to bottom\n                                    chatMessages.scrollTop = chatMessages.scrollHeight;\n                                    \n                                    // Simulate response after delay\n                                    setTimeout(() => {\n                                        const responses = [\n                                            \"Sounds good to me!\",\n                                            \"When does the game start?\",\n                                            \"How much is the entry fee?\",\n                                            \"Thanks for setting this up!\",\n                                            \"I'll be joining soon\"\n                                        ];\n                                        \n                                        const responseMsg = document.createElement('div');\n                                        responseMsg.className = 'chat-message guest';\n                                        responseMsg.innerHTML = `<span class=\"chat-name guest\">Guest:</span> ${responses[Math.floor(Math.random() * responses.length)]}`;\n                                        \n                                        chatMessages.appendChild(responseMsg);\n                                        chatMessages.scrollTop = chatMessages.scrollHeight;\n                                    }, 1500);\n                                }\n                            });\n                            \n                            // Allow Enter key to send messages\n                            document.getElementById('shareChatInput').addEventListener('keypress', function(e) {\n                                if (e.key === 'Enter') {\n                                    sendChatBtn.click();\n                                }\n                            });\n                        }\n                    });\n                </script>",
            "<script>\n                document.getElementById('superUserDashboardBtn').addEventListener('click', function(e) {\n                    e.preventDefault();\n                    // First show password modal\n                    const passwordModal = document.getElementById('passwordModal');\n                    if (passwordModal) {\n                        passwordModal.style.display = 'flex';\n                    } else {\n                        // If password modal doesn't exist, create one\n                        createSuperAdminPasswordModal();\n                    }\n                });\n                \n                // Create password modal if it doesn't exist\n                function createSuperAdminPasswordModal() {\n                    const modal = document.createElement('div');\n                    modal.id = 'passwordModal';\n                    modal.className = 'modal-overlay';\n                    modal.style.display = 'flex';\n                    modal.innerHTML = `\n                        <div class=\"modal-content\" style=\"max-width: 400px;\">\n                            <button class=\"close-modal\" onclick=\"document.getElementById('passwordModal').style.display='none'\">×</button>\n                            <div class=\"modal-header\">\n                                <h2>Super Admin Access</h2>\n                            </div>\n                            <div class=\"modal-body\">\n                                <div class=\"form-group\">\n                                    <label for=\"superAdminPassword\">Enter Password:</label>\n                                    <input type=\"password\" id=\"superAdminPassword\" class=\"terminal-input\" placeholder=\"Enter admin password\">\n                                </div>\n                                <button id=\"verifySuperAdminPasswordBtn\" class=\"terminal-button\">Login</button>\n                                <div id=\"passwordError\" style=\"color: red; display: none; margin-top: 10px;\">Incorrect password</div>\n                            </div>\n                        </div>\n                    `;\n                    document.body.appendChild(modal);\n                    \n                    // Set up the verify button\n                    document.getElementById('verifySuperAdminPasswordBtn').addEventListener('click', function() {\n                        const password = document.getElementById('superAdminPassword').value;\n                        // For demo purposes, password is hardcoded\n                        if (password === 'admin123') {\n                            document.getElementById('passwordModal').style.display = 'none';\n                            loadSuperAdminInModal();\n                        } else {\n                            document.getElementById('passwordError').style.display = 'block';\n                        }\n                    });\n                }\n\n                // Function to load super-admin.html in modal\n                function loadSuperAdminInModal() {\n                    // Get or create the super user modal\n                    let superUserModal = document.getElementById('superUserModal');\n                    if (!superUserModal) {\n                        superUserModal = document.createElement('div');\n                        superUserModal.id = 'superUserModal';\n                        superUserModal.className = 'modal-overlay';\n                        superUserModal.style.position = 'fixed';\n                        superUserModal.style.top = '0';\n                        superUserModal.style.left = '0';\n                        superUserModal.style.width = '100%';\n                        superUserModal.style.height = '100%';\n                        superUserModal.style.backgroundColor = 'rgba(0, 0, 0, 0.9)';\n                        superUserModal.style.zIndex = '1000';\n                        \n                        const modalContent = document.createElement('div');\n                        modalContent.className = 'modal-content';\n                        modalContent.style.width = '90%';\n                        modalContent.style.maxWidth = '1200px';\n                        modalContent.style.maxHeight = '90vh';\n                        modalContent.style.overflowY = 'auto';\n                        \n                        const closeButton = document.createElement('button');\n                        closeButton.id = 'closeSuperUserModalBtn';\n                        closeButton.innerHTML = '×';\n                        closeButton.className = 'close-modal';\n                        \n                        const contentDiv = document.createElement('div');\n                        contentDiv.className = 'super-admin-content';\n                        \n                        modalContent.appendChild(closeButton);\n                        modalContent.appendChild(contentDiv);\n                        superUserModal.appendChild(modalContent);\n                        document.body.appendChild(superUserModal);\n                    }\n                    \n                    // Show the modal\n                    superUserModal.style.display = 'flex';\n                    \n                    // Load super-admin.html content\n                    fetch('super-admin.html')\n                        .then(response => response.text())\n                        .then(html => {\n                            const parser = new DOMParser();\n                            const doc = parser.parseFromString(html, 'text/html');\n                            \n                            // Get the container content\n                            const container = doc.querySelector('.container');\n                            if (container) {\n                                const contentDiv = document.querySelector('.super-admin-content');\n                                if (contentDiv) {\n                                    contentDiv.innerHTML = '';\n                                    contentDiv.appendChild(container.cloneNode(true));\n                                    \n                                    // Add event listeners to the close button\n                                    const closeBtn = document.getElementById('closeSuperUserModalBtn');\n                                    if (closeBtn) {\n                                        closeBtn.addEventListener('click', function() {\n                                            superUserModal.style.display = 'none';\n                                        });\n                                    }\n                                    \n                                    // Initialize dashboard functionality\n                                    if (typeof initializeDashboard === 'function') {\n                                        setTimeout(initializeDashboard, 100);\n                                    }\n                                }\n                            }\n                        })\n                        .catch(error => {\n                            console.error('Error loading super-admin.html:', error);\n                            const contentDiv = document.querySelector('.super-admin-content');\n                            if (contentDiv) {\n                                contentDiv.innerHTML = '<p>Error loading Super Admin Dashboard. Please try again.</p>';\n                            }\n                        });\n                }\n            </script>",
            "<script>\n                // Show license modal when \"Verify License\" is clicked\n                document.addEventListener('DOMContentLoaded', function() {\n                    const showLicenseBtn = document.getElementById('showLicenseBtn');\n                    const licenseModal = document.getElementById('licenseModal');\n                    const licenseCloseBtn = document.querySelector('#licenseModal .close-modal');\n                    \n                    if (showLicenseBtn) {\n                        showLicenseBtn.addEventListener('click', function(e) {\n                            e.preventDefault();\n                            if (licenseModal) {\n                                licenseModal.style.display = 'flex';\n                                if (typeof checkLicense === 'function') {\n                                    checkLicense();\n                                }\n                            }\n                        });\n                    }\n                    \n                    if (licenseCloseBtn) {\n                        licenseCloseBtn.addEventListener('click', function() {\n                            licenseModal.style.display = 'none';\n                        });\n                    }\n                    \n                    // Initialize license verification\n                    function checkLicense() {\n                        if (typeof LicenseClient !== 'undefined') {\n                            // Generate a unique game identifier if one doesn't exist\n                            let gameId = localStorage.getItem('gameIdentifier');\n                            if (!gameId) {\n                                gameId = 'GSG-' + Date.now().toString(36).toUpperCase() + \n                                       '-' + Math.random().toString(36).substring(2, 10).toUpperCase();\n                                localStorage.setItem('gameIdentifier', gameId);\n                            }\n                            \n                            // Pre-fill game identifier\n                            const gameIdentifierInput = document.getElementById('gameIdentifier');\n                            if (gameIdentifierInput) {\n                                gameIdentifierInput.value = gameId;\n                            }\n\n                            if (LicenseClient.hasValidLicense(gameId)) {\n                                showLicenseInfo();\n                            } else {\n                                showLicenseForm();\n                            }\n                            \n                            // Update footer license info\n                            updateFooterLicenseInfo();\n                        }\n                    }\n                    \n                    // Show license information\n                    function showLicenseInfo() {\n                        const licenseInfo = LicenseClient.getLicenseInfo();\n                        const licenseDetails = document.getElementById('licenseDetails');\n                        const licenseForm = document.getElementById('licenseForm');\n                        const licenseInfoDiv = document.getElementById('licenseInfo');\n                        \n                        if (!licenseInfo) {\n                            showLicenseForm();\n                            return;\n                        }\n                        \n                        licenseDetails.innerHTML = `\n                            <p><strong>License ID:</strong> ${licenseInfo.licenseId}</p>\n                            <p><strong>Status:</strong> ${licenseInfo.status.charAt(0).toUpperCase() + licenseInfo.status.slice(1)}</p>\n                            <p><strong>Expires:</strong> ${licenseInfo.expires}</p>\n                            <p><strong>Type:</strong> ${licenseInfo.type.charAt(0).toUpperCase() + licenseInfo.type.slice(1)}</p>\n                            ${licenseInfo.showWarning ? \n                                `<p style=\"color: ${licenseInfo.urgentWarning ? 'red' : 'orange'}; font-weight: bold\">\n                                    Warning: Your license will expire in ${licenseInfo.daysRemaining} days. \n                                    Please contact support to renew your license.\n                                </p>` : ''}\n                            <p><strong>Contact Support:</strong> <a href=\"mailto:support@greeksurvivorgame.com\">support@greeksurvivorgame.com</a></p>\n                        `;\n                        \n                        licenseForm.style.display = 'none';\n                        licenseInfoDiv.style.display = 'block';\n                    }\n                    \n                    // Show license form\n                    function showLicenseForm() {\n                        const licenseForm = document.getElementById('licenseForm');\n                        const licenseInfoDiv = document.getElementById('licenseInfo');\n                        \n                        licenseForm.style.display = 'block';\n                        licenseInfoDiv.style.display = 'none';\n                    }\n                    \n                    // Update footer license info\n                    function updateFooterLicenseInfo() {\n                        const footerLicenseInfo = document.getElementById('footerLicenseInfo');\n                        if (!footerLicenseInfo) return;\n                        \n                        const gameId = localStorage.getItem('gameIdentifier');\n                        if (LicenseClient.hasValidLicense(gameId)) {\n                            const licenseInfo = LicenseClient.getLicenseInfo();\n                            footerLicenseInfo.innerHTML = `\n                                <span style=\"color: #00FF00; font-size: 0.8em;\">\n                                    Licensed: ${licenseInfo.type.charAt(0).toUpperCase() + licenseInfo.type.slice(1)} \n                                    (Expires: ${licenseInfo.expires})\n                                </span>\n                            `;\n                        } else {\n                            footerLicenseInfo.innerHTML = `\n                                <span style=\"color: #FFA500; font-size: 0.8em;\">\n                                    No active license - Some features may be limited\n                                </span>\n                            `;\n                        }\n                    }\n                    \n                    // Activate license button\n                    const activateLicenseBtn = document.getElementById('activateLicenseBtn');\n                    if (activateLicenseBtn) {\n                        activateLicenseBtn.addEventListener('click', function() {\n                            const licenseKey = document.getElementById('licenseKey').value;\n                            const gameIdentifier = document.getElementById('gameIdentifier').value;\n                            const licenseNotification = document.getElementById('licenseNotification');\n                            \n                            if (!licenseKey || !gameIdentifier) {\n                                showNotification(licenseNotification, 'Please enter both license key and game identifier', 'error');\n                                return;\n                            }\n                            \n                            // Simulate license validation\n                            // In a real implementation, this would contact your license server\n                            const license = {\n                                licenseId: licenseKey,\n                                gameId: gameIdentifier,\n                                status: 'active',\n                                created: new Date().toISOString(),\n                                expires: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString(), // 1 year\n                                type: 'annual',\n                                lastCheckin: new Date().toISOString()\n                            };\n                            \n                            // Store license\n                            LicenseClient.storeLicense(license);\n                            \n                            showNotification(licenseNotification, 'License activated successfully!', 'success');\n                            showLicenseInfo();\n                            updateFooterLicenseInfo();\n                            checkLicenseAndEnableFeatures();\n                        });\n                    }\n                    \n                    // Try trial button\n                    const tryTrialBtn = document.getElementById('tryTrialBtn');\n                    if (tryTrialBtn) {\n                        tryTrialBtn.addEventListener('click', function() {\n                            const gameIdentifier = document.getElementById('gameIdentifier').value;\n                            const licenseNotification = document.getElementById('licenseNotification');\n                            \n                            if (!gameIdentifier) {\n                                showNotification(licenseNotification, 'Please enter your game identifier', 'error');\n                                return;\n                            }\n                            \n                            // Create trial license\n                            const trialLicense = {\n                                licenseId: 'TRIAL-' + Math.random().toString(36).substring(2, 10).toUpperCase(),\n                                gameId: gameIdentifier,\n                                status: 'active',\n                                created: new Date().toISOString(),\n                                expires: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000).toISOString(), // 10 days\n                                type: 'trial',\n                                lastCheckin: new Date().toISOString()\n                            };\n                            \n                            // Store license\n                            LicenseClient.storeLicense(trialLicense);\n                            \n                            showNotification(licenseNotification, 'Trial activated successfully! Valid for 10 days.', 'success');\n                            showLicenseInfo();\n                            updateFooterLicenseInfo();\n                            checkLicenseAndEnableFeatures();\n                        });\n                    }\n                    \n                    // Deactivate license button\n                    const deactivateLicenseBtn = document.getElementById('deactivateLicenseBtn');\n                    if (deactivateLicenseBtn) {\n                        deactivateLicenseBtn.addEventListener('click', function() {\n                            if (confirm('Are you sure you want to deactivate your license? You will need to reactivate it later.')) {\n                                LicenseClient.removeLicense();\n                                showNotification(document.getElementById('licenseNotification'), 'License deactivated successfully', 'success');\n                                showLicenseForm();\n                                updateFooterLicenseInfo();\n                                checkLicenseAndEnableFeatures();\n                            }\n                        });\n                    }\n                    \n                    // Show notification\n                    function showNotification(element, message, type) {\n                        if (!element) return;\n                        \n                        element.className = 'notification ' + type;\n                        element.textContent = message;\n                        \n                        // Auto hide after 5 seconds\n                        setTimeout(() => {\n                            element.textContent = '';\n                            element.className = '';\n                        }, 5000);\n                    }\n                    \n                    // Check license on page load\n                    setTimeout(function() {\n                        updateFooterLicenseInfo();\n                        checkLicenseAndEnableFeatures();\n                    }, 1000);\n                });\n                \n                // Check license and enable premium features\n                function checkLicenseAndEnableFeatures() {\n                    // Replace this with your actual license checking mechanism\n                    const gameId = localStorage.getItem('gameIdentifier');\n                    const featuresEnabled = typeof LicenseClient !== 'undefined' ? \n                        LicenseClient.hasValidLicense(gameId) : false;\n\n                    if (featuresEnabled) {\n                        enablePremiumFeatures();\n                    } else {\n                        disablePremiumFeatures();\n                    }\n                }\n            </script>",
            "<script>\n        // Function to handle admin access with embedded console\n        function verifyAdminAccess() {\n            const password = document.getElementById('adminPassword').value;\n            const storedPassword = localStorage.getItem('adminPassword') || 'admin123';\n\n            if (password === storedPassword) {\n                // Hide the password modal\n                document.getElementById('adminModal').style.display = 'none';\n                \n                // Show the embedded admin console\n                document.getElementById('adminConsoleModal').style.display = 'flex';\n                \n                // Set up the admin console tabs and functionality\n                setupAdminConsole();\n                \n                // Start the session timer\n                startSessionTimer();\n            } else {\n                alert('Invalid password');\n            }\n        }\n\n        // Function to start session timer\n        function startSessionTimer() {\n            const sessionTimer = document.getElementById('sessionTimer');\n            if (!sessionTimer) return;\n            \n            let minutes = 30;\n            let seconds = 0;\n            \n            // Clear any existing timer\n            if (window.sessionInterval) {\n                clearInterval(window.sessionInterval);\n            }\n            \n            // Start a new timer\n            window.sessionInterval = setInterval(() => {\n                if (seconds === 0) {\n                    if (minutes === 0) {\n                        clearInterval(window.sessionInterval);\n                        document.getElementById('adminConsoleModal').style.display = 'none';\n                        alert('Admin session timed out. Please login again.');\n                        return;\n                    }\n                    minutes--;\n                    seconds = 59;\n                } else {\n                    seconds--;\n                }\n                \n                sessionTimer.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n            }, 1000);\n            \n            // Setup extend session button\n            const extendSessionBtn = document.getElementById('extendSessionBtn');\n            if (extendSessionBtn) {\n                extendSessionBtn.addEventListener('click', () => {\n                    minutes = 30;\n                    seconds = 0;\n                    sessionTimer.textContent = '30:00';\n                });\n            }\n        }\n\n        // Function to set up admin console\n        function setupAdminConsole() {\n            console.log(\"Setting up admin console...\");\n            \n            // Tab navigation\n            const tabButtons = document.querySelectorAll('.tab-button');\n            const tabContents = document.querySelectorAll('.tab-content');\n\n            // First, remove any existing event listeners\n            tabButtons.forEach(button => {\n                button.replaceWith(button.cloneNode(true));\n            });\n            \n            // Re-select buttons after cloning\n            const newTabButtons = document.querySelectorAll('.tab-button');\n            \n            // Add click event listeners\n            newTabButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    const tabId = this.getAttribute('data-tab');\n                    console.log(\"Tab clicked:\", tabId);\n\n                    // Hide all tab contents\n                    tabContents.forEach(content => {\n                        content.style.display = 'none';\n                        content.classList.remove('active');\n                    });\n                    \n                    // Remove active class from all buttons\n                    newTabButtons.forEach(btn => {\n                        btn.classList.remove('active');\n                    });\n\n                    // Show the selected tab content\n                    const selectedTab = document.getElementById(tabId);\n                    if (selectedTab) {\n                        selectedTab.style.display = 'block';\n                        selectedTab.classList.add('active');\n                        this.classList.add('active');\n                    } else {\n                        console.error(\"Tab content not found:\", tabId);\n                    }\n                });\n            });\n\n            // Make sure the first tab is active by default\n            if (newTabButtons.length > 0 && tabContents.length > 0) {\n                newTabButtons[0].classList.add('active');\n                tabContents[0].classList.add('active');\n                tabContents[0].style.display = 'block';\n                \n                // Hide other tabs\n                for (let i = 1; i < tabContents.length; i++) {\n                    tabContents[i].style.display = 'none';\n                }\n            }\n\n            // Load settings\n            loadAdminSettings();\n\n            // Set up save buttons with cloning to remove any existing listeners\n            const buttons = [\n                'saveGeneralSettings', \n                'saveSpecialEventsSettings', \n                'saveLocationSettings', \n                'saveSecuritySettings', \n                'saveAdvancedSettings', \n                'resetSettings',\n                'addPropOption',\n                'createPropBet',\n                'selectAllStates',\n                'clearAllStates',\n                'resetAgeVerification',\n                'exportSettings',\n                'importSettings',\n                'setupTwoFactorBtn',\n                'viewLoginHistoryBtn',\n                'refreshPropBets',\n                'clearAllPropBets'\n            ];\n            \n            buttons.forEach(buttonId => {\n                const button = document.getElementById(buttonId);\n                if (button) {\n                    const newButton = button.cloneNode(true);\n                    button.parentNode.replaceChild(newButton, button);\n                }\n            });\n            \n            // Add event listeners to new button elements\n            document.getElementById('saveGeneralSettings').addEventListener('click', saveGeneralSettings);\n            document.getElementById('saveSpecialEventsSettings').addEventListener('click', saveSpecialEventsSettings);\n            document.getElementById('saveLocationSettings').addEventListener('click', saveLocationSettings);\n            document.getElementById('saveSecuritySettings').addEventListener('click', saveSecuritySettings);\n            document.getElementById('saveAdvancedSettings').addEventListener('click', saveAdvancedSettings);\n            document.getElementById('resetSettings').addEventListener('click', resetSettings);\n            document.getElementById('addPropOption').addEventListener('click', addPropBetOption);\n            document.getElementById('createPropBet').addEventListener('click', createPropBet);\n            \n            // Set up state management UI\n            const selectAllStatesBtn = document.getElementById('selectAllStates');\n            const clearAllStatesBtn = document.getElementById('clearAllStates');\n            \n            if (selectAllStatesBtn) {\n                selectAllStatesBtn.addEventListener('click', function() {\n                    document.querySelectorAll('#statesGrid .state-item').forEach(state => {\n                        state.classList.add('restricted');\n                    });\n                });\n            }\n            \n            if (clearAllStatesBtn) {\n                clearAllStatesBtn.addEventListener('click', function() {\n                    document.querySelectorAll('#statesGrid .state-item').forEach(state => {\n                        state.classList.remove('restricted');\n                    });\n                });\n            }\n            \n            // Add click handlers for state items\n            document.querySelectorAll('#statesGrid .state-item').forEach(state => {\n                state.addEventListener('click', function() {\n                    this.classList.toggle('restricted');\n                });\n            });\n            \n            // Additional UI handlers\n            \n            // Reset age verification\n            const resetAgeBtn = document.getElementById('resetAgeVerification');\n            if (resetAgeBtn) {\n                resetAgeBtn.addEventListener('click', function() {\n                    localStorage.removeItem('ageVerified');\n                    showStatus('securityStatus', 'Age verification reset successfully!', 'success');\n                });\n            }\n            \n            // Export settings\n            const exportBtn = document.getElementById('exportSettings');\n            if (exportBtn) {\n                exportBtn.addEventListener('click', function() {\n                    exportAdminSettings();\n                });\n            }\n            \n            // Import settings\n            const importBtn = document.getElementById('importSettings');\n            if (importBtn) {\n                importBtn.addEventListener('click', function() {\n                    document.getElementById('importSettingsFile').click();\n                });\n            }\n            \n            // Handle file selection for import\n            const importFile = document.getElementById('importSettingsFile');\n            if (importFile) {\n                importFile.addEventListener('change', function(e) {\n                    if (e.target.files.length > 0) {\n                        importAdminSettings(e.target.files[0]);\n                    }\n                });\n            }\n            \n            // Special Events handlers\n            const refreshPropBetsBtn = document.getElementById('refreshPropBets');\n            if (refreshPropBetsBtn) {\n                refreshPropBetsBtn.addEventListener('click', function() {\n                    loadPropBets();\n                });\n            }\n            \n            const clearAllPropBetsBtn = document.getElementById('clearAllPropBets');\n            if (clearAllPropBetsBtn) {\n                clearAllPropBetsBtn.addEventListener('click', function() {\n                    if (confirm('Are you sure you want to delete all prop bets?')) {\n                        localStorage.setItem('propBets', '[]');\n                        loadPropBets();\n                        showStatus('specialEventsStatus', 'All prop bets cleared!', 'success');\n                    }\n                });\n            }\n            \n            // Load existing prop bets\n            loadPropBets();\n            \n            // Close button\n            const closeBtn = document.getElementById('closeAdminConsoleBtn');\n            if (closeBtn) {\n                const newCloseBtn = closeBtn.cloneNode(true);\n                closeBtn.parentNode.replaceChild(newCloseBtn, closeBtn);\n                newCloseBtn.addEventListener('click', function() {\n                    document.getElementById('adminConsoleModal').style.display = 'none';\n                    if (window.sessionInterval) {\n                        clearInterval(window.sessionInterval);\n                    }\n                });\n            }\n            \n            console.log(\"Admin console setup complete\");\n        }\n        \n        // Export admin settings to a file\n        function exportAdminSettings() {\n            // Get all settings\n            const settings = {\n                general: {\n                    defaultTheme: localStorage.getItem('defaultTheme') || 'default',\n                    defaultTeamCount: localStorage.getItem('defaultTeamCount') || '3',\n                    showPredictions: localStorage.getItem('showPredictions') !== 'false',\n                    enableAIPlayers: localStorage.getItem('enableAIPlayers') !== 'false',\n                    enableLiveOdds: localStorage.getItem('enableLiveOdds') !== 'false',\n                    enableHousePercentage: localStorage.getItem('enableHousePercentage') !== 'false',\n                    housePercentage: localStorage.getItem('housePercentage') || '10'\n                },\n                security: {\n                    requireAgeVerification: localStorage.getItem('requireAgeVerification') !== 'false',\n                    ageVerificationMessage: localStorage.getItem('ageVerificationMessage'),\n                    enableContentFiltering: localStorage.getItem('enableContentFiltering') !== 'false',\n                    filterLevel: localStorage.getItem('filterLevel') || 'medium'\n                },\n                location: {\n                    enableGeoCheck: localStorage.getItem('enableGeoCheck') !== 'false'\n                },\n                api: {\n                    oddsApiKey: localStorage.getItem('oddsApiKey'),\n                    cacheDuration: localStorage.getItem('cacheDuration') || '15'\n                },\n                propBets: JSON.parse(localStorage.getItem('propBets') || '[]')\n            };\n            \n            // Create a blob with settings\n            const blob = new Blob([JSON.stringify(settings, null, 2)], { type: 'application/json' });\n            const url = URL.createObjectURL(blob);\n            \n            // Create a download link\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'greek_game_settings.json';\n            document.body.appendChild(a);\n            a.click();\n            \n            // Clean up\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n            \n            showStatus('advancedStatus', 'Settings exported successfully!', 'success');\n        }\n        \n        // Import admin settings from a file\n        function importAdminSettings(file) {\n            const reader = new FileReader();\n            \n            reader.onload = function(e) {\n                try {\n                    const settings = JSON.parse(e.target.result);\n                    \n                    // Import general settings\n                    if (settings.general) {\n                        localStorage.setItem('defaultTheme', settings.general.defaultTheme || 'default');\n                        localStorage.setItem('defaultTeamCount', settings.general.defaultTeamCount || '3');\n                        localStorage.setItem('showPredictions', settings.general.showPredictions !== false);\n                        localStorage.setItem('enableAIPlayers', settings.general.enableAIPlayers !== false);\n                        localStorage.setItem('enableLiveOdds', settings.general.enableLiveOdds !== false);\n                        localStorage.setItem('enableHousePercentage', settings.general.enableHousePercentage !== false);\n                        localStorage.setItem('housePercentage', settings.general.housePercentage || '10');\n                    }\n                    \n                    // Import security settings\n                    if (settings.security) {\n                        localStorage.setItem('requireAgeVerification', settings.security.requireAgeVerification !== false);\n                        if (settings.security.ageVerificationMessage) {\n                            localStorage.setItem('ageVerificationMessage', settings.security.ageVerificationMessage);\n                        }\n                        localStorage.setItem('enableContentFiltering', settings.security.enableContentFiltering !== false);\n                        localStorage.setItem('filterLevel', settings.security.filterLevel || 'medium');\n                    }\n                    \n                    // Import location settings\n                    if (settings.location) {\n                        localStorage.setItem('enableGeoCheck', settings.location.enableGeoCheck !== false);\n                    }\n                    \n                    // Import API settings\n                    if (settings.api) {\n                        if (settings.api.oddsApiKey) {\n                            localStorage.setItem('oddsApiKey', settings.api.oddsApiKey);\n                        }\n                        localStorage.setItem('cacheDuration', settings.api.cacheDuration || '15');\n                    }\n                    \n                    // Import prop bets\n                    if (settings.propBets) {\n                        localStorage.setItem('propBets', JSON.stringify(settings.propBets));\n                    }\n                    \n                    // Reload settings in UI\n                    loadAdminSettings();\n                    loadPropBets();\n                    \n                    showStatus('advancedStatus', 'Settings imported successfully!', 'success');\n                } catch (error) {\n                    console.error('Error importing settings:', error);\n                    showStatus('advancedStatus', 'Error importing settings: ' + error.message, 'error');\n                }\n            };\n            \n            reader.readAsText(file);\n        }\n        \n        // Load admin settings from localStorage\n        function loadAdminSettings() {\n            // General Settings\n            document.getElementById('defaultTheme').value = localStorage.getItem('defaultTheme') || 'default';\n            document.getElementById('defaultTeamCount').value = localStorage.getItem('defaultTeamCount') || '3';\n            document.getElementById('showPredictions').checked = localStorage.getItem('showPredictions') !== 'false';\n            document.getElementById('enableAIPlayers').checked = localStorage.getItem('enableAIPlayers') !== 'false';\n            document.getElementById('enableLiveOdds').checked = localStorage.getItem('enableLiveOdds') !== 'false';\n            \n            // House percentage settings\n            const enableHousePercentage = document.getElementById('enableHousePercentage');\n            const housePercentage = document.getElementById('housePercentage');\n            if (enableHousePercentage) {\n                enableHousePercentage.checked = localStorage.getItem('enableHousePercentage') !== 'false';\n            }\n            if (housePercentage) {\n                housePercentage.value = localStorage.getItem('housePercentage') || '10';\n            }\n            \n            // Special Events\n            document.getElementById('enablePropBets').checked = localStorage.getItem('propBetsEnabled') === 'true';\n            \n            // Location\n            document.getElementById('enableGeoCheck').checked = localStorage.getItem('enableGeoCheck') !== 'false';\n            \n            // Security\n            const requireAgeVerification = document.getElementById('requireAgeVerification');\n            const ageVerificationMessage = document.getElementById('ageVerificationMessage');\n            if (requireAgeVerification) {\n                requireAgeVerification.checked = localStorage.getItem('requireAgeVerification') !== 'false';\n            }\n            if (ageVerificationMessage) {\n                ageVerificationMessage.value = localStorage.getItem('ageVerificationMessage') || \n                    'You must be 21 or older to use real money betting features. By continuing, you confirm that you are of legal age in your jurisdiction.';\n            }\n            \n            // Content filtering\n            const enableContentFiltering = document.getElementById('enableContentFiltering');\n            const filterLevel = document.getElementById('filterLevel');\n            if (enableContentFiltering) {\n                enableContentFiltering.checked = localStorage.getItem('enableContentFiltering') !== 'false';\n            }\n            if (filterLevel) {\n                filterLevel.value = localStorage.getItem('filterLevel') || 'medium';\n            }\n            \n            // Advanced settings\n            const oddsApiKey = document.getElementById('oddsApiKey');\n            const cacheDuration = document.getElementById('cacheDuration');\n            if (oddsApiKey) {\n                oddsApiKey.value = localStorage.getItem('oddsApiKey') || '';\n            }\n            if (cacheDuration) {\n                cacheDuration.value = localStorage.getItem('cacheDuration') || '15';\n            }\n        }\n        \n        // Load existing prop bets\n        function loadPropBets() {\n            const existingPropBets = document.getElementById('existingPropBets');\n            if (!existingPropBets) return;\n            \n            const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n            \n            if (propBets.length === 0) {\n                existingPropBets.innerHTML = '<p class=\"no-items-message\">No prop bets have been created yet.</p>';\n                return;\n            }\n            \n            let propBetsHTML = '';\n            \n            propBets.forEach(bet => {\n                let optionsHTML = '';\n                \n                bet.options.forEach(option => {\n                    optionsHTML += `\n                        <div class=\"prop-bet-option\">\n                            <span>${option.text}</span>\n                            <span>${option.odds}</span>\n                        </div>\n                    `;\n                });\n                \n                propBetsHTML += `\n                    <div class=\"prop-bet-item\" data-id=\"${bet.id}\">\n                        <div class=\"prop-bet-header\">\n                            <div class=\"prop-bet-title\">${bet.eventName}</div>\n                            <div class=\"prop-bet-actions\">\n                                <button class=\"terminal-button edit-prop\" data-id=\"${bet.id}\">Edit</button>\n                                <button class=\"terminal-button remove-prop\" data-id=\"${bet.id}\">Remove</button>\n                            </div>\n                        </div>\n                        <div class=\"prop-bet-question\">${bet.question}</div>\n                        <div class=\"prop-bet-options\">\n                            ${optionsHTML}\n                        </div>\n                    </div>\n                `;\n            });\n            \n            existingPropBets.innerHTML = propBetsHTML;\n            \n            // Add event listeners to edit/remove buttons\n            document.querySelectorAll('.edit-prop').forEach(button => {\n                button.addEventListener('click', function() {\n                    const betId = this.getAttribute('data-id');\n                    editPropBet(betId);\n                });\n            });\n            \n            document.querySelectorAll('.remove-prop').forEach(button => {\n                button.addEventListener('click', function() {\n                    const betId = this.getAttribute('data-id');\n                    removePropBet(betId);\n                });\n            });\n        }\n        \n        // Edit a prop bet\n        function editPropBet(betId) {\n            const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n            const bet = propBets.find(b => b.id == betId);\n            \n            if (!bet) {\n                showStatus('specialEventsStatus', 'Error: Prop bet not found', 'error');\n                return;\n            }\n            \n            // Fill in the form with bet details\n            document.getElementById('propEventName').value = bet.eventName;\n            document.getElementById('propQuestion').value = bet.question;\n            \n            // Create option rows\n            const optionsContainer = document.getElementById('optionsContainer');\n            optionsContainer.innerHTML = '';\n            \n            bet.options.forEach(option => {\n                const optionRow = document.createElement('div');\n                optionRow.className = 'option-row';\n                optionRow.innerHTML = `\n                    <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"${option.text}\">\n                    <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"${option.odds}\">\n                `;\n                optionsContainer.appendChild(optionRow);\n            });\n            \n            // Change create button to update\n            const createBtn = document.getElementById('createPropBet');\n            createBtn.textContent = 'Update Prop Bet';\n            createBtn.setAttribute('data-edit-id', betId);\n            \n            // Scroll to the form\n            const form = document.querySelector('.settings-group:nth-child(3)');\n            if (form) {\n                form.scrollIntoView({ behavior: 'smooth' });\n            }\n            \n            showStatus('specialEventsStatus', 'Edit the prop bet and click Update', 'success');\n        }\n        \n        // Remove a prop bet\n        function removePropBet(betId) {\n            if (confirm('Are you sure you want to delete this prop bet?')) {\n                const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n                const updatedBets = propBets.filter(b => b.id != betId);\n                \n                localStorage.setItem('propBets', JSON.stringify(updatedBets));\n                loadPropBets();\n                \n                showStatus('specialEventsStatus', 'Prop bet removed successfully!', 'success');\n            }\n        }\n        \n        // Save general settings\n        function saveGeneralSettings() {\n            try {\n                localStorage.setItem('defaultTheme', document.getElementById('defaultTheme').value);\n                localStorage.setItem('defaultTeamCount', document.getElementById('defaultTeamCount').value);\n                localStorage.setItem('showPredictions', document.getElementById('showPredictions').checked);\n                localStorage.setItem('enableAIPlayers', document.getElementById('enableAIPlayers').checked);\n                localStorage.setItem('enableLiveOdds', document.getElementById('enableLiveOdds').checked);\n                \n                // Save house percentage settings\n                const enableHousePercentage = document.getElementById('enableHousePercentage');\n                const housePercentage = document.getElementById('housePercentage');\n                if (enableHousePercentage && housePercentage) {\n                    localStorage.setItem('enableHousePercentage', enableHousePercentage.checked);\n                    localStorage.setItem('housePercentage', housePercentage.value);\n                }\n\n                showStatus('generalStatus', 'Settings saved successfully!', 'success');\n            } catch (error) {\n                showStatus('generalStatus', 'Error saving settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Save special events settings\n        function saveSpecialEventsSettings() {\n            try {\n                localStorage.setItem('propBetsEnabled', document.getElementById('enablePropBets').checked);\n                showStatus('specialEventsStatus', 'Settings saved successfully!', 'success');\n                \n                // Update special events section visibility in the main app\n                const specialEventsSection = document.getElementById('specialEventsSection');\n                if (specialEventsSection) {\n                    const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n                    specialEventsSection.style.display = \n                        document.getElementById('enablePropBets').checked && propBets.length > 0 ? 'block' : 'none';\n                }\n            } catch (error) {\n                showStatus('specialEventsStatus', 'Error saving settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Save location settings\n        function saveLocationSettings() {\n            try {\n                localStorage.setItem('enableGeoCheck', document.getElementById('enableGeoCheck').checked);\n                \n                // Save restricted states\n                const restrictedStates = [];\n                document.querySelectorAll('#statesGrid .state-item.restricted').forEach(state => {\n                    restrictedStates.push(state.textContent.trim());\n                });\n                \n                localStorage.setItem('restrictedStates', JSON.stringify(restrictedStates));\n                \n                showStatus('locationStatus', 'Location settings saved successfully!', 'success');\n            } catch (error) {\n                showStatus('locationStatus', 'Error saving location settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Save security settings\n        function saveSecuritySettings() {\n            try {\n                // Save admin password\n                const password = document.getElementById('newAdminPassword').value;\n                const confirmPassword = document.getElementById('confirmAdminPassword').value;\n                \n                if (password) {\n                    if (password !== confirmPassword) {\n                        throw new Error('Passwords do not match');\n                    }\n                    localStorage.setItem('adminPassword', password);\n                }\n                \n                // Save age verification settings\n                const requireAgeVerification = document.getElementById('requireAgeVerification');\n                const ageVerificationMessage = document.getElementById('ageVerificationMessage');\n                \n                if (requireAgeVerification) {\n                    localStorage.setItem('requireAgeVerification', requireAgeVerification.checked);\n                }\n                \n                if (ageVerificationMessage) {\n                    localStorage.setItem('ageVerificationMessage', ageVerificationMessage.value);\n                }\n                \n                // Save content filtering settings\n                const enableContentFiltering = document.getElementById('enableContentFiltering');\n                const filterLevel = document.getElementById('filterLevel');\n                \n                if (enableContentFiltering) {\n                    localStorage.setItem('enableContentFiltering', enableContentFiltering.checked);\n                }\n                \n                if (filterLevel) {\n                    localStorage.setItem('filterLevel', filterLevel.value);\n                }\n                \n                showStatus('securityStatus', 'Security settings saved successfully!', 'success');\n            } catch (error) {\n                showStatus('securityStatus', 'Error saving security settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Save advanced settings\n        function saveAdvancedSettings() {\n            try {\n                // Save API key\n                const oddsApiKey = document.getElementById('oddsApiKey');\n                if (oddsApiKey) {\n                    localStorage.setItem('oddsApiKey', oddsApiKey.value);\n                }\n                \n                // Save cache duration\n                const cacheDuration = document.getElementById('cacheDuration');\n                if (cacheDuration) {\n                    localStorage.setItem('cacheDuration', cacheDuration.value);\n                }\n                \n                // Save debug mode\n                const enableDebugMode = document.getElementById('enableDebugMode');\n                if (enableDebugMode) {\n                    localStorage.setItem('enableDebugMode', enableDebugMode.checked);\n                }\n                \n                showStatus('advancedStatus', 'Advanced settings saved successfully!', 'success');\n            } catch (error) {\n                showStatus('advancedStatus', 'Error saving advanced settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Reset settings\n        function resetSettings() {\n            if (confirm('Are you sure you want to reset all settings to their default values?')) {\n                // Clear localStorage (except for critical items)\n                const adminPassword = localStorage.getItem('adminPassword');\n                const propBets = localStorage.getItem('propBets');\n                const predictionHistory = localStorage.getItem('predictionHistory');\n                \n                localStorage.clear();\n\n                // Restore the preserved items\n                if (adminPassword) {\n                    localStorage.setItem('adminPassword', adminPassword);\n                }\n                \n                if (propBets) {\n                    localStorage.setItem('propBets', propBets);\n                }\n                \n                if (predictionHistory) {\n                    localStorage.setItem('predictionHistory', predictionHistory);\n                }\n                \n                // Set defaults\n                localStorage.setItem('defaultTheme', 'default');\n                localStorage.setItem('defaultTeamCount', '3');\n                localStorage.setItem('showPredictions', 'true');\n                localStorage.setItem('enableAIPlayers', 'true');\n                localStorage.setItem('enableLiveOdds', 'true');\n                localStorage.setItem('enableHousePercentage', 'true');\n                localStorage.setItem('housePercentage', '10');\n                localStorage.setItem('requireAgeVerification', 'true');\n                localStorage.setItem('enableGeoCheck', 'true');\n                localStorage.setItem('cacheDuration', '15');\n\n                // Reload settings\n                loadAdminSettings();\n                \n                showStatus('advancedStatus', 'All settings have been reset to defaults', 'success');\n            }\n        }\n        \n        // Show status message\n        function showStatus(elementId, message, type) {\n            const statusElement = document.getElementById(elementId);\n            if (!statusElement) return;\n\n            statusElement.textContent = message;\n            statusElement.className = 'status-indicator';\n            statusElement.classList.add('status-' + type);\n            statusElement.style.display = 'block';\n\n            // Hide the status message after 3 seconds\n            setTimeout(() => {\n                statusElement.style.display = 'none';\n            }, 3000);\n        }\n        \n        // Add a new option to the prop bet form\n        function addPropBetOption() {\n            console.log(\"Adding prop bet option\");\n            const optionsContainer = document.getElementById('optionsContainer');\n\n            const optionRow = document.createElement('div');\n            optionRow.className = 'option-row';\n\n            optionRow.innerHTML = `\n                <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+100\">\n                <button class=\"terminal-button remove-option\">✕</button>\n            `;\n            \n            // Add event listener to remove button\n            const removeBtn = optionRow.querySelector('.remove-option');\n            if (removeBtn) {\n                removeBtn.addEventListener('click', function() {\n                    optionsContainer.removeChild(optionRow);\n                });\n            }\n\n            optionsContainer.appendChild(optionRow);\n        }\n        \n        // Create a new prop bet\n        function createPropBet() {\n            try {\n                const eventName = document.getElementById('propEventName').value.trim();\n                const question = document.getElementById('propQuestion').value.trim();\n                const editId = document.getElementById('createPropBet').getAttribute('data-edit-id');\n\n                if (!eventName || !question) {\n                    throw new Error('Event name and question are required');\n                }\n\n                // Get options\n                const optionRows = document.querySelectorAll('#optionsContainer .option-row');\n                const options = [];\n\n                optionRows.forEach(row => {\n                    const optionText = row.querySelector('.option-text').value.trim();\n                    const optionOdds = row.querySelector('.option-odds').value.trim();\n\n                    if (optionText && optionOdds) {\n                        options.push({\n                            text: optionText,\n                            odds: optionOdds\n                        });\n                    }\n                });\n\n                if (options.length < 2) {\n                    throw new Error('At least two valid options are required');\n                }\n\n                // Create or update the prop bet\n                const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n                \n                if (editId) {\n                    // Update existing prop bet\n                    const index = propBets.findIndex(b => b.id == editId);\n                    if (index >= 0) {\n                        propBets[index] = {\n                            ...propBets[index],\n                            eventName,\n                            question,\n                            options,\n                            updated: new Date().toISOString()\n                        };\n                        \n                        // Reset edit mode\n                        document.getElementById('createPropBet').textContent = 'Create Prop Bet';\n                        document.getElementById('createPropBet').removeAttribute('data-edit-id');\n                    }\n                } else {\n                    // Create new prop bet\n                    const propBet = {\n                        id: Date.now(),\n                        eventName,\n                        question,\n                        options,\n                        enabled: true,\n                        created: new Date().toISOString()\n                    };\n                    \n                    propBets.push(propBet);\n                }\n\n                // Save to localStorage\n                localStorage.setItem('propBets', JSON.stringify(propBets));\n\n                // Clear the form\n                document.getElementById('propEventName').value = '';\n                document.getElementById('propQuestion').value = '';\n                \n                // Reset options to just two\n                const optionsContainer = document.getElementById('optionsContainer');\n                optionsContainer.innerHTML = `\n                    <div class=\"option-row\">\n                        <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                        <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+150\">\n                        <button class=\"terminal-button remove-option\">✕</button>\n                    </div>\n                    <div class=\"option-row\">\n                        <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                        <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+200\">\n                        <button class=\"terminal-button remove-option\">✕</button>\n                    </div>\n                `;\n                \n                // Add event listeners to remove buttons\n                document.querySelectorAll('.remove-option').forEach(btn => {\n                    btn.addEventListener('click', function() {\n                        const row = this.closest('.option-row');\n                        if (row) {\n                            row.parentNode.removeChild(row);\n                        }\n                    });\n                });\n\n                // Reload prop bets list\n                loadPropBets();\n                \n                // Update special events section in main app\n                const specialEventsSection = document.getElementById('specialEventsSection');\n                if (specialEventsSection && document.getElementById('enablePropBets').checked) {\n                    specialEventsSection.style.display = 'block';\n                }\n\n                showStatus('specialEventsStatus', editId ? 'Prop bet updated successfully!' : 'Prop bet created successfully!', 'success');\n            } catch (error) {\n                showStatus('specialEventsStatus', 'Error creating prop bet: ' + error.message, 'error');\n            }\n        }\n\n        // Handle admin login and ensure admin login button has event listener\n        document.addEventListener('DOMContentLoaded', function() {\n            // Set up the copyright click handler for admin access\n            const copyright = document.getElementById('copyrightText');\n            if (copyright) {\n                let clickCount = 0;\n                let clickTimer = null;\n                \n                copyright.addEventListener('click', function() {\n                    clickCount++;\n\n                    if (clickTimer) clearTimeout(clickTimer);\n\n                    clickTimer = setTimeout(() => {\n                        if (clickCount >= 3) {\n                            const adminModal = document.getElementById('adminModal');\n                            if (adminModal) {\n                                adminModal.style.display = 'flex';\n                            }\n                        }\n                        clickCount = 0;\n                    }, 1000);\n                });\n            }\n            \n            // Setup admin login button\n            const adminLoginBtn = document.getElementById('adminLoginBtn');\n            if (adminLoginBtn) {\n                adminLoginBtn.addEventListener('click', verifyAdminAccess);\n            }\n            \n            // Setup admin modal close button\n            const closeModalButtons = document.querySelectorAll('.close-modal');\n            closeModalButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    // Find the parent modal and close it\n                    const modal = this.closest('.modal-overlay');\n                    if (modal) {\n                        modal.style.display = 'none';\n                    }\n                });\n            });\n            \n            // Initialize props section visibility based on settings\n            const specialEventsSection = document.getElementById('specialEventsSection');\n            if (specialEventsSection) {\n                const propBetsEnabled = localStorage.getItem('propBetsEnabled') === 'true';\n                const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n                specialEventsSection.style.display = propBetsEnabled && propBets.length > 0 ? 'block' : 'none';\n            }\n        });\n    </script>",
            "<script>\n                        document.getElementById('generateSquaresBtn').addEventListener('click', function() {\n                            const homeTeam = document.getElementById('homeTeamInput').value;\n                            const awayTeam = document.getElementById('awayTeamInput').value;\n                            const squareCost = document.getElementById('squareCost').value;\n                            \n                            if (!homeTeam || !awayTeam) {\n                                alert('Please enter both team names');\n                                return;\n                            }\n                            \n                            // Update team names\n                            document.getElementById('squaresHomeTeam').textContent = 'Home: ' + homeTeam;\n                            document.getElementById('squaresAwayTeam').textContent = 'Away: ' + awayTeam;\n                            document.getElementById('squaresTotalPot').textContent = '0';\n                            document.getElementById('squaresFilled').textContent = '0';\n                            \n                            // Generate the grid\n                            const grid = document.getElementById('squaresGrid');\n                            grid.innerHTML = '';\n                            \n                            // Generate a proper 50 squares (5x10 grid) - 5 rows, 10 columns\n                            grid.style.gridTemplateRows = 'repeat(5, 40px)';\n                            grid.style.gridTemplateColumns = 'repeat(10, 40px)';\n                            \n                            for (let i = 0; i < 50; i++) {\n                                const square = document.createElement('div');\n                                square.className = 'square';\n                                square.setAttribute('data-index', i);\n                                square.innerHTML = '';\n                                \n                                // Add row and column information for tracking\n                                const row = Math.floor(i / 10);\n                                const col = i % 10;\n                                square.setAttribute('data-row', row);\n                                square.setAttribute('data-col', col);\n                                \n                                square.addEventListener('click', function() {\n                                    if (!this.classList.contains('taken')) {\n                                        const name = document.getElementById('squareNameInput').value;\n                                        if (!name) {\n                                            alert('Please enter a name first');\n                                            return;\n                                        }\n                                        this.innerHTML = name;\n                                        this.classList.add('taken');\n                                        \n                                        // Update filled squares count and pot total\n                                        const filledCount = document.querySelectorAll('.square.taken').length;\n                                        document.getElementById('squaresFilled').textContent = filledCount;\n                                        document.getElementById('squaresTotalPot').textContent = filledCount * squareCost;\n                                    }\n                                });\n                                \n                                grid.appendChild(square);\n                            }\n                            \n                            // Generate random numbers for the axes\n                            const homeTeamNumbers = document.getElementById('homeTeamNumbers');\n                            const awayTeamNumbers = document.getElementById('awayTeamNumbers');\n                            homeTeamNumbers.innerHTML = '';\n                            awayTeamNumbers.innerHTML = '';\n                            \n                            // Generate random 0-9 array for both axes (no duplicates)\n                            const homeNums = [...Array(10).keys()].sort(() => Math.random() - 0.5);\n                            const awayNums = [...Array(10).keys()].sort(() => Math.random() - 0.5);\n                            \n                            // Add numbers to home axis\n                            homeNums.forEach(num => {\n                                const numDiv = document.createElement('div');\n                                numDiv.className = 'squares-axis-number';\n                                numDiv.textContent = num;\n                                homeTeamNumbers.appendChild(numDiv);\n                            });\n                            \n                            // Add numbers to away axis\n                            awayNums.forEach(num => {\n                                const numDiv = document.createElement('div');\n                                numDiv.className = 'squares-axis-number';\n                                numDiv.textContent = num;\n                                awayTeamNumbers.appendChild(numDiv);\n                            });\n                            \n                            // Show the grid container\n                            document.querySelector('.squares-grid-container').style.display = 'block';\n                        });\n                        \n                        // Function to validate and display player info\n                        function validateAndShowPlayerInfo() {\n                            const name = document.getElementById('squareNameInput').value;\n                            const email = document.getElementById('squareEmailInput').value;\n                            \n                            if (!name) {\n                                alert('Please enter a name');\n                                return false;\n                            }\n                            \n                            // Show confirmation\n                            alert(`Player Info: ${name} ${email ? '(' + email + ')' : ''}\\nClick on a square to assign it to this player or use 'Assign Random Square' button.`);\n                            return true;\n                        }\n                        \n                        // Enter Information button handler\n                        document.getElementById('enterSquareInfoBtn').addEventListener('click', function() {\n                            validateAndShowPlayerInfo();\n                        });\n                        \n                        // Also allow pressing Enter in input fields\n                        document.getElementById('squareNameInput').addEventListener('keypress', function(e) {\n                            if (e.key === 'Enter') {\n                                document.getElementById('squareEmailInput').focus();\n                            }\n                        });\n                        \n                        document.getElementById('squareEmailInput').addEventListener('keypress', function(e) {\n                            if (e.key === 'Enter') {\n                                validateAndShowPlayerInfo();\n                            }\n                        });\n                        \n                        document.getElementById('assignRandomSquareBtn').addEventListener('click', function() {\n                            const name = document.getElementById('squareNameInput').value;\n                            if (!name) {\n                                alert('Please enter a name first');\n                                return;\n                            }\n                            \n                            const availableSquares = Array.from(document.querySelectorAll('.square:not(.taken)'));\n                            if (availableSquares.length === 0) {\n                                alert('No squares available! All 50 squares have been taken.');\n                                return;\n                            }\n                            \n                            // Pick a random available square\n                            const randomIndex = Math.floor(Math.random() * availableSquares.length);\n                            const square = availableSquares[randomIndex];\n                            \n                            // Mark it as taken\n                            square.innerHTML = name;\n                            square.classList.add('taken');\n                            \n                            // Update filled squares count and pot total\n                            const squareCost = document.getElementById('squareCost').value;\n                            const filledCount = document.querySelectorAll('.square.taken').length;\n                            document.getElementById('squaresFilled').textContent = filledCount;\n                            document.getElementById('squaresTotalPot').textContent = filledCount * squareCost;\n                        });\n                        \n                        // Share Squares button handler\n                        document.getElementById('shareSquaresBtn').addEventListener('click', function() {\n                            alert('Grid sharing feature will be available soon!');\n                        });\n                    </script>",
            "<script>\n                    document.getElementById('startNewGreekGameBtn').addEventListener('click', function() {\n                        document.getElementById('greekGameModal').style.display = 'none';\n                        alert('Greek Game started! Please select a league to view available games.');\n                    });\n                    \n                    document.getElementById('joinExistingGreekGameBtn').addEventListener('click', function() {\n                        const gameCode = prompt('Enter the Game Code provided by the host:');\n                        if (gameCode) {\n                            document.getElementById('greekGameModal').style.display = 'none';\n                            alert('Joined Greek Game with code: ' + gameCode);\n                        }\n                    });\n                </script>",
            "<script>\n        // WebRTC peer connection variables\n        let peerConnection = null;\n        let dataChannel = null;\n        let roomId = null;\n        let isHost = false;\n        let chatMessages = [];\n        let screenShareActive = false;\n        \n        // Global variables\n        let clickCount = 0;\n        let clickTimer = null;\n        const ADMIN_PASSWORD = 'admin123'; // Default admin password\n        let trackedGames = []; // Initialize tracked games array\n        let currentGames = []; // Initialize current games array\n        let currentUserState = null; // Initialize current user state\n        let predictionsEnabled = true; // Enable predictions by default\n        let liveOddsActive = true; // Enable live odds by default\n        let predictionHistory = []; // Initialize prediction history\n\n        const US_STATES = {\n            \"AL\": \"Alabama\",\n            \"AK\": \"Alaska\",\n            \"AZ\": \"Arizona\",\n            \"AR\": \"Arkansas\",\n            \"CA\": \"California\",\n            \"CO\": \"Colorado\",\n            \"CT\": \"Connecticut\",\n            \"DE\": \"Delaware\",\n            \"FL\": \"Florida\",\n            \"GA\": \"Georgia\",\n            \"HI\": \"Hawaii\",\n            \"ID\": \"Idaho\",\n            \"IL\": \"Illinois\",\n            \"IN\": \"Indiana\",\n            \"IA\": \"Iowa\",\n            \"KS\": \"Kansas\",\n            \"KY\": \"Kentucky\",\n            \"LA\": \"Louisiana\",\n            \"ME\": \"Maine\",\n            \"MD\": \"Maryland\",\n            \"MA\": \"Massachusetts\",\n            \"MI\": \"Michigan\",\n            \"MN\": \"Minnesota\",\n            \"MS\": \"Mississippi\",\n            \"MO\": \"Missouri\",\n            \"MT\": \"Montana\",\n            \"NE\": \"Nebraska\",\n            \"NV\": \"Nevada\",\n            \"NH\": \"New Hampshire\",\n            \"NJ\": \"New Jersey\",\n            \"NM\": \"New Mexico\",\n            \"NY\": \"New York\",\n            \"NC\": \"North Carolina\",\n            \"ND\": \"North Dakota\",\n            \"OH\": \"Ohio\",\n            \"OK\": \"Oklahoma\",\n            \"OR\": \"Oregon\",\n            \"PA\": \"Pennsylvania\",\n            \"RI\": \"Rhode Island\",\n            \"SC\": \"South Carolina\",\n            \"SD\": \"South Dakota\",\n            \"TN\": \"Tennessee\",\n            \"TX\": \"Texas\",\n            \"UT\": \"Utah\",\n            \"VT\": \"Vermont\",\n            \"VA\": \"Virginia\",\n            \"WA\": \"Washington\",\n            \"WV\": \"West Virginia\",\n            \"WI\": \"Wisconsin\",\n            \"WY\": \"Wyoming\"\n        };\n\n\n        // Initialize the application\n        document.addEventListener('DOMContentLoaded', function() {\n            console.log('Initializing SYNTHIA AI Betting Terminal - Test Change');\n\n            // Force age verification to always show at startup regardless of previous verifications\n            localStorage.removeItem('ageVerified');\n            \n            // Set a small delay to ensure all elements are loaded before showing modal\n            setTimeout(() => {\n                const ageVerificationModal = document.getElementById('ageVerificationModal');\n                if (ageVerificationModal) {\n                    // Make sure all other modals are hidden first\n                    document.querySelectorAll('.modal-overlay').forEach(modal => {\n                        if (modal.id !== 'ageVerificationModal') {\n                            modal.style.display = 'none';\n                        }\n                    });\n                    \n                    // Show age verification modal\n                    ageVerificationModal.style.display = 'flex';\n                    console.log(\"Age verification modal displayed at startup\");\n                    \n                    // Make sure the modal can't be closed except through verification\n                    const closeButtons = ageVerificationModal.querySelectorAll('.close-modal');\n                    closeButtons.forEach(button => {\n                        button.style.display = 'none';\n                    });\n                }\n            }, 300);\n\n            // Set up theme selector if it exists\n            const themeSelector = document.getElementById('themeSelector');\n            if (themeSelector) {\n                themeSelector.addEventListener('change', function() {\n                    applyTheme(themeSelector.value);\n                });\n                // Apply initial theme\n                applyTheme(themeSelector.value || 'default');\n            }\n\n            // Initialize email service if available\n            if (typeof emailjs !== 'undefined') {\n                initializeEmailJS();\n            }\n\n            // Set up admin access\n            setupCopyrightHandler();\n\n            // Set up admin modal close button\n            const closeModalButtons = document.querySelectorAll('.close-modal');\n            closeModalButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    // Find the parent modal and close it\n                    const modal = this.closest('.modal-overlay');\n                    if (modal) {\n                        modal.style.display = 'none';\n                    }\n                });\n            });\n\n            // Setup admin login button\n            const adminLoginBtn = document.getElementById('adminLoginBtn');\n            if (adminLoginBtn) {\n                adminLoginBtn.addEventListener('click', verifyAdminAccess);\n            }\n\n            // Setup age verification button\n            const verifyAgeBtn = document.getElementById('verifyAgeBtn');\n            if (verifyAgeBtn) {\n                verifyAgeBtn.addEventListener('click', verifyAge);\n            }\n\n            // Always show age verification at startup\n            setTimeout(() => {\n                const ageVerificationModal = document.getElementById('ageVerificationModal');\n                if (ageVerificationModal) {\n                    // Make sure all other modals are hidden first\n                    document.querySelectorAll('.modal-overlay').forEach(modal => {\n                        if (modal.id !== 'ageVerificationModal') {\n                            modal.style.display = 'none';\n                        }\n                    });\n                    \n                    if (localStorage.getItem('ageVerified') !== 'true') {\n                        ageVerificationModal.style.display = 'flex';\n                        console.log(\"Age verification modal displayed at startup\");\n                        \n                        // Position the modal properly\n                        const modalContent = ageVerificationModal.querySelector('.modal-content');\n                        if (modalContent) {\n                            modalContent.style.marginTop = '80px';\n                        }\n                    }\n                }\n            }, 500);\n\n            // Initialize special events\n            loadSpecialEvents();\n\n            // Enable live odds by default for demo purposes\n            toggleLiveOdds(true);\n\n            // Initialize GPS location\n            initializeGPS();\n\n            // Initialize games list with a prompt to select a league\n            const greekGamesList = document.getElementById('greekGamesList');\n            if (greekGamesList) {\n                greekGamesList.innerHTML = '<p>Please select a league to view available games</p>';\n            }\n\n            // Setup league selector event with ESPN API integration\n            const leagueSelect = document.getElementById('leagueSelect');\n            if (leagueSelect) {\n                leagueSelect.addEventListener('change', function() {\n                    const league = this.value;\n                    \n                    // If NCAAB is selected, use ESPN API for current games\n                    if (league === 'NCAAB') {\n                        fetchESPNGames(league);\n                    } else {\n                        generateGreekGames(league);\n                    }\n\n                    // Update prediction history for the selected league\n                    updatePredictionHistory(league);\n                });\n            }\n            \n            // Function to fetch current games from ESPN API\n            async function fetchESPNGames(league) {\n                const statusIndicator = document.getElementById('statusIndicator');\n                if (statusIndicator) {\n                    statusIndicator.textContent = `Fetching latest ${league} games from ESPN...`;\n                    statusIndicator.style.display = 'block';\n                }\n                \n                try {\n                    // Map of league codes to ESPN API endpoints\n                    const leagueAPIs = {\n                        \"NBA\": \"https://site.api.espn.com/apis/site/v2/sports/basketball/nba/scoreboard\",\n                        \"NCAAB\": \"https://site.api.espn.com/apis/site/v2/sports/basketball/mens-college-basketball/scoreboard\",\n                        \"MLB\": \"https://site.api.espn.com/apis/site/v2/sports/baseball/mlb/scoreboard\",\n                        \"NHL\": \"https://site.api.espn.com/apis/site/v2/sports/hockey/nhl/scoreboard\",\n                        \"NCAAF\": \"https://site.api.espn.com/apis/site/v2/sports/football/college-football/scoreboard\",\n                        \"WNBA\": \"https://site.api.espn.com/apis/site/v2/sports/basketball/wnba/scoreboard\",\n                        \"MMA\": \"https://site.api.espn.com/apis/site/v2/sports/mma/ufc/scoreboard\",\n                        \"BOXING\": \"https://site.api.espn.com/apis/site/v2/sports/boxing/scoreboard\"\n                    };\n                    \n                    // Get the correct API endpoint\n                    const apiUrl = leagueAPIs[league];\n                    if (!apiUrl) {\n                        throw new Error(`No ESPN API endpoint for ${league}`);\n                    }\n                    \n                    // Fetch data from ESPN\n                    const response = await fetch(apiUrl);\n                    if (!response.ok) {\n                        throw new Error(`ESPN API responded with status: ${response.status}`);\n                    }\n                    \n                    const data = await response.json();\n                    console.log(`ESPN data for ${league}:`, data);\n                    \n                    // Transform ESPN data to our game format\n                    const games = [];\n                    \n                    if (data.events && data.events.length > 0) {\n                        data.events.forEach((event, index) => {\n                            // Only include events with two competitors\n                            if (event.competitions && \n                                event.competitions[0] && \n                                event.competitions[0].competitors && \n                                event.competitions[0].competitors.length === 2) {\n                                \n                                const competition = event.competitions[0];\n                                const homeTeam = competition.competitors.find(c => c.homeAway === 'home');\n                                const awayTeam = competition.competitors.find(c => c.homeAway === 'away');\n                                \n                                if (homeTeam && awayTeam) {\n                                    // Get odds data if available\n                                    let homeOdds = '+110';\n                                    let awayOdds = '-110';\n                                    let homeSpread = -3.5;\n                                    let awaySpread = 3.5;\n                                    let totalPoints = 145;\n                                    \n                                    if (competition.odds && competition.odds.length > 0) {\n                                        const odds = competition.odds[0];\n                                        \n                                        if (odds.homeTeamOdds && odds.homeTeamOdds.moneyLine) {\n                                            const moneyLine = odds.homeTeamOdds.moneyLine;\n                                            homeOdds = moneyLine > 0 ? `+${moneyLine}` : moneyLine.toString();\n                                        }\n                                        \n                                        if (odds.awayTeamOdds && odds.awayTeamOdds.moneyLine) {\n                                            const moneyLine = odds.awayTeamOdds.moneyLine;\n                                            awayOdds = moneyLine > 0 ? `+${moneyLine}` : moneyLine.toString();\n                                        }\n                                        \n                                        if (odds.spread) {\n                                            homeSpread = -parseFloat(odds.spread);\n                                            awaySpread = parseFloat(odds.spread);\n                                        }\n                                        \n                                        if (odds.overUnder) {\n                                            totalPoints = parseFloat(odds.overUnder);\n                                        }\n                                    }\n                                    \n                                    // Format date and time\n                                    const startTime = new Date(event.date);\n                                    const formattedDate = startTime.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' });\n                                    const formattedTime = startTime.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });\n                                    \n                                    games.push({\n                                        id: index + 1,\n                                        homeTeam: homeTeam.team.displayName,\n                                        awayTeam: awayTeam.team.displayName,\n                                        homeOdds: homeOdds,\n                                        awayOdds: awayOdds,\n                                        homeSpread: homeSpread,\n                                        awaySpread: awaySpread,\n                                        totalPoints: totalPoints,\n                                        date: formattedDate,\n                                        time: formattedTime,\n                                        league: league,\n                                        status: event.status.type.state, // in progress, pre, post\n                                        clock: event.status.displayClock || '',\n                                        period: event.status.period || 0\n                                    });\n                                }\n                            }\n                        });\n                    }\n                    \n                    // If we got games from ESPN, use them\n                    if (games.length > 0) {\n                        currentGames = games;\n                        displayGames(games);\n                        \n                        if (statusIndicator) {\n                            statusIndicator.textContent = `Found ${games.length} live ${league} games from ESPN`;\n                            statusIndicator.style.display = 'block';\n                            setTimeout(() => {\n                                statusIndicator.style.display = 'none';\n                            }, 3000);\n                        }\n                    } else {\n                        // Fall back to odds API if no games found\n                        generateGreekGames(league);\n                    }\n                    \n                } catch (error) {\n                    console.error(\"Error fetching ESPN data:\", error);\n                    // Fall back to original method\n                    generateGreekGames(league);\n                } finally {\n                    if (statusIndicator) {\n                        statusIndicator.style.display = 'none';\n                    }\n                }\n            }\n            \n            // Function to display games from any data source\n            function displayGames(games) {\n                const greekGamesList = document.getElementById('greekGamesList');\n                if (!greekGamesList) return;\n                \n                if (games.length === 0) {\n                    greekGamesList.innerHTML = '<p>No games available for this league</p>';\n                    return;\n                }\n                \n                const liveOddsActive = localStorage.getItem('enableLiveOdds') !== 'false';\n                \n                let gamesHTML = '';\n                \n                games.forEach(game => {\n                    const spreadValue = game.homeSpread || (Math.floor(Math.random() * 140) + 10) / 10;\n                    const homeSpread = game.homeSpread ? game.homeSpread.toFixed(1) : (Math.random() > 0.5 ? \"-\" : \"+\") + spreadValue.toFixed(1);\n                    const awaySpread = game.awaySpread ? game.awaySpread.toFixed(1) : (homeSpread.startsWith(\"-\") ? \"+\" + homeSpread.substring(1) : \"-\" + homeSpread.substring(1));\n                    const totalPoints = game.totalPoints || (Math.floor(Math.random() * 35) + 40);\n                    \n                    // Generate prediction\n                    const homeWinProb = Math.floor(Math.random() * 70) + 30;\n                    const awayWinProb = 100 - homeWinProb;\n                    \n                    let recommendedBet = '';\n                    if (homeWinProb > 57) {\n                        recommendedBet = `${game.homeTeam} ML`;\n                    } else if (awayWinProb > 57) {\n                        recommendedBet = `${game.awayTeam} ML`;\n                    } else if (Math.random() > 0.5) {\n                        recommendedBet = homeSpread.startsWith('+') ? `${game.homeTeam} ${homeSpread}` : `${game.awayTeam} ${awaySpread}`;\n                    } else {\n                        recommendedBet = Math.random() > 0.5 ? `OVER ${totalPoints}` : `UNDER ${totalPoints}`;\n                    }\n                    \n                    const confidenceLevel = Math.floor(Math.random() * 40) + 60; // 60-99%\n                    \n                    // Add live indicator if game is in progress\n                    const isLiveGame = game.status === 'in';\n                    const statusDisplay = isLiveGame ? \n                        `<span style=\"color: red; font-weight: bold;\">LIVE: Q${game.period} ${game.clock}</span>` : \n                        `${game.date || 'Today'} ${game.time || '7:00 PM'}`;\n                    \n                    gamesHTML += `\n                        <div class=\"greek-game-card\" data-game-id=\"${game.id}\">\n                            <div class=\"game-teams\">\n                                <span class=\"team home\">${game.homeTeam}</span>\n                                <span class=\"vs\">vs</span>\n                                <span class=\"team away\">${game.awayTeam}</span>\n                                <span class=\"live-odds-indicator ${liveOddsActive ? 'active' : ''}\">\n                                    <span class=\"live-pulse\"></span>\n                                    ${liveOddsActive ? 'LIVE' : 'DELAYED'}\n                                </span>\n                            </div>\n                            <div class=\"game-details\">\n                                <span>${statusDisplay}</span>\n                            </div>\n                            <div class=\"game-prediction\">\n                                <div class=\"prediction-text\">Prediction: ${homeWinProb > awayWinProb ? game.homeTeam : game.awayTeam} to win</div>\n                                <div class=\"prediction-text\">Recommended bet: ${recommendedBet}</div>\n                                <div class=\"prediction-confidence\">\n                                    <span>Confidence:</span>\n                                    <div class=\"confidence-meter\">\n                                        <div class=\"confidence-level\" style=\"width: ${confidenceLevel}%\"></div>\n                                    </div>\n                                    <span>${confidenceLevel}%</span>\n                                </div>\n                            </div>\n                            <div class=\"betting-options\">\n                                <button class=\"bet-option home-ml\" data-type=\"ML\" data-team=\"${game.homeTeam}\" data-odds=\"${game.homeOdds}\" data-game-id=\"${game.id}\">\n                                    ${game.homeTeam} ML ${game.homeOdds}\n                                </button>\n                                <button class=\"bet-option away-ml\" data-type=\"ML\" data-team=\"${game.awayTeam}\" data-odds=\"${game.awayOdds}\" data-game-id=\"${game.id}\">\n                                    ${game.awayTeam} ML ${game.awayOdds}\n                                </button>\n                                <button class=\"bet-option home-spread\" data-type=\"SPREAD\" data-team=\"${game.homeTeam}\" data-odds=\"-110\" data-value=\"${homeSpread}\" data-game-id=\"${game.id}\">\n                                    ${game.homeTeam} ${homeSpread} (-110)\n                                </button>\n                                <button class=\"bet-option away-spread\" data-type=\"SPREAD\" data-team=\"${game.awayTeam}\" data-odds=\"-110\" data-value=\"${awaySpread}\" data-game-id=\"${game.id}\">\n                                    ${game.awayTeam} ${awaySpread} (-110)\n                                </button>\n                                <button class=\"bet-option over\" data-type=\"OVER\" data-odds=\"-110\" data-value=\"${totalPoints}\" data-game-id=\"${game.id}\">\n                                    OVER ${totalPoints} (-110)\n                                </button>\n                                <button class=\"bet-option under\" data-type=\"UNDER\" data-odds=\"-110\" data-value=\"${totalPoints}\" data-game-id=\"${game.id}\">\n                                    UNDER ${totalPoints} (-110)\n                                </button>\n                            </div>\n                        </div>\n                    `;\n                });\n                \n                greekGamesList.innerHTML = gamesHTML;\n                \n                // Add event listeners to betting options\n                const betOptions = document.querySelectorAll('.bet-option');\n                betOptions.forEach(option => {\n                    option.addEventListener('click', function() {\n                        const gameId = this.getAttribute('data-game-id');\n                        const betType = this.getAttribute('data-type');\n                        const team = this.getAttribute('data-team') || '';\n                        const odds = this.getAttribute('data-odds');\n                        const value = this.getAttribute('data-value') || '';\n                        \n                        // Add pick and update UI\n                        addToTrackedGames(gameId, betType, team, odds, value);\n                        updateGameTracking();\n                        \n                        // Visual feedback for click\n                        this.classList.add('selected');\n                        setTimeout(() => {\n                            this.classList.remove('selected');\n                        }, 200);\n                    });\n                });\n            }\n\n            // Setup refresh live odds button\n            const refreshBtn = document.getElementById('refreshLiveOddsBtn');\n            if (refreshBtn) {\n                refreshBtn.addEventListener('click', function() {\n                    const league = leagueSelect.value;\n                    if (league) {\n                        generateGreekGames(league);\n                    } else {                        alert('Please select a league first');\n                    }\n                });\n            }\n\n            // Setup live odds toggle\n            const liveOddsToggle = document.getElementById('liveOddsToggle');\n            if (liveOddsToggle) {\n                liveOddsToggle.addEventListener('change', function() {\n                    toggleLiveOdds(this.checked);\n                });\n            }\n\n            // Setup game tracking toggle\n            const hideGameTrackingCheckbox = document.getElementById('disableGameTracking');\n            const trackedGamesSection = document.querySelector('.tracked-games');\n\n            if (hideGameTrackingCheckbox && trackedGamesSection) {\n                hideGameTrackingCheckbox.addEventListener('change', function() {\n                    trackedGamesSection.style.display = this.checked ? 'none' : 'block';\n                    console.log(\"Toggled game tracking to:\", this.checked ? \"hidden\" : \"visible\");\n                    if (!this.checked) {\n                        updateGameTracking();\n                    }\n                });\n            }\n\n            // Setup prediction history\n            updatePredictionHistory();\n\n            // Display prediction history\n            const predictionHistoryContent = document.getElementById('predictionHistoryTable');\n            if (predictionHistoryContent) {\n                displayPredictionHistory();\n            }\n\n            // Setup other buttons\n            setupAllButtons();\n            setupPaymentMethodsHandlers(); // Initialize payment methods handlers\n\n            // Initialize help guide, squares and Greek game buttons\n            const helpGuideBtn = document.getElementById('helpGuideBtn');\n            if (helpGuideBtn) {\n                helpGuideBtn.addEventListener('click', function() {\n                    document.getElementById('helpGuideModal').style.display = 'block';\n                });\n            }\n\n            const squaresGameBtn = document.getElementById('squaresGameBtn');\n            if (squaresGameBtn) {\n                squaresGameBtn.addEventListener('click', function() {\n                    document.getElementById('squaresGameModal').style.display = 'block';\n                });\n            }\n\n            const greekGameBtn = document.getElementById('greekGameBtn');\n            if (greekGameBtn) {\n                greekGameBtn.addEventListener('click', function() {\n                    document.getElementById('greekGameModal').style.display = 'block';\n                });\n            }\n            \n            // Initialize sharing functionality\n            setupSharingFunctionality();\n        });\n\n        // Apply theme to the UI\n        function applyTheme(theme) {\n            const root = document.documentElement;\n\n            switch (theme) {\n                case 'blue':\n                    root.style.setProperty('--neon-green', '#00aaff');\n                    root.style.setProperty('--dark-bg', '#0a1a2a');\n                    root.style.setProperty('--terminal-green', '#33bbff');\n                    root.style.setProperty('--highlight-color', '#ffcc00');\n                    break;\n                case 'red':\n                    root.style.setProperty('--neon-green', '#ff3333');\n                    root.style.setProperty('--dark-bg', '#1a0a0a');\n                    root.style.setProperty('--terminal-green', '#ff5555');\n                    root.style.setProperty('--highlight-color', '#ffcc00');\n                    break;\n                case 'dark':\n                    root.style.setProperty('--neon-green', '#aaaaaa');\n                    root.style.setProperty('--dark-bg', '#0a0a0a');\n                    root.style.setProperty('--terminal-green', '#cccccc');\n                    root.style.setProperty('--highlight-color', '#888888');\n                    break;\n                default: // green (default)\n                    root.style.setProperty('--neon-green', '#00ff00');\n                    root.style.setProperty('--dark-bg', '#0c0c0c');\n                    root.style.setProperty('--terminal-green', '#33ff33');\n                    root.style.setProperty('--highlight-color', '#3a87ad');\n                    break;\n            }\n        }\n\n        // Initialize EmailJS service\n        function initializeEmailJS() {\n            // Initialize EmailJS for email notifications\n            (function() {\n                emailjs.init(\"Rne7cyNgL_TdFtDvZ\");\n            })();\n        }\n\n        // Set up the copyright click handler for admin access\n        function setupCopyrightHandler() {\n            const copyright = document.getElementById('copyrightText');\n            if (copyright) {\n                copyright.addEventListener('click', function() {\n                    clickCount++;\n                    console.log(\"Copyright clicked, count:\", clickCount);\n\n                    if (clickTimer) clearTimeout(clickTimer);\n\n                    clickTimer = setTimeout(() => {\n                        if (clickCount >= 3) {\n                            const adminModal = document.getElementById('adminModal');\n                            if (adminModal) {\n                                adminModal.style.display = 'block';\n                            }\n                        }\n                        clickCount = 0;\n                    }, 1000);\n                });\n            }\n        }\n\n        // Function to handle admin access with embedded console\n        function verifyAdminAccess() {\n            const password = document.getElementById('adminPassword').value;\n            const storedPassword = localStorage.getItem('adminPassword') || 'admin123';\n\n            if (password === storedPassword) {\n                // Hide the password modal\n                document.getElementById('adminModal').style.display = 'none';\n                \n                // Show the embedded admin console\n                document.getElementById('adminConsoleModal').style.display = 'flex';\n                \n                // Set up the admin console tabs and functionality\n                setupAdminConsole();\n            } else {\n                alert('Invalid password');\n            }\n        }\n\n        // Function to set up admin console\n        function setupAdminConsole() {\n            // Tab navigation\n            const tabButtons = document.querySelectorAll('.tab-button');\n            const tabContents = document.querySelectorAll('.tab-content');\n\n            tabButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    const tabId = this.getAttribute('data-tab');\n\n                    // Deactivate all buttons and tabs\n                    tabButtons.forEach(btn => btn.classList.remove('active'));\n                    tabContents.forEach(content => content.classList.remove('active'));\n\n                    // Activate the clicked button and corresponding tab\n                    this.classList.add('active');\n                    document.getElementById(tabId).classList.add('active');\n                });\n            });\n\n            // Load settings\n            loadAdminSettings();\n\n            // Set up save buttons\n            document.getElementById('saveGeneralSettings').addEventListener('click', saveGeneralSettings);\n            document.getElementById('saveSpecialEventsSettings').addEventListener('click', saveSpecialEventsSettings);\n            document.getElementById('saveLocationSettings').addEventListener('click', saveLocationSettings);\n            document.getElementById('saveSecuritySettings').addEventListener('click', saveSecuritySettings);\n            document.getElementById('saveAdvancedSettings').addEventListener('click', saveAdvancedSettings);\n            document.getElementById('resetSettings').addEventListener('click', resetSettings);\n            \n            // Set up prop bet functionality\n            document.getElementById('addPropOption').addEventListener('click', addPropBetOption);\n            document.getElementById('createPropBet').addEventListener('click', createPropBet);\n            \n            // Close button\n            document.getElementById('closeAdminConsoleBtn').addEventListener('click', function() {\n                document.getElementById('adminConsoleModal').style.display = 'none';\n            });\n        }\n        \n        // Load admin settings from localStorage\n        function loadAdminSettings() {\n            // General Settings\n            document.getElementById('defaultTheme').value = localStorage.getItem('defaultTheme') || 'default';\n            document.getElementById('defaultTeamCount').value = localStorage.getItem('defaultTeamCount') || '3';\n            document.getElementById('showPredictions').checked = localStorage.getItem('showPredictions') !== 'false';\n            document.getElementById('enableAIPlayers').checked = localStorage.getItem('enableAIPlayers') !== 'false';\n            document.getElementById('enableLiveOdds').checked = localStorage.getItem('enableLiveOdds') !== 'false';\n            \n            // Special Events\n            document.getElementById('enablePropBets').checked = localStorage.getItem('propBetsEnabled') === 'true';\n            \n            // Location\n            document.getElementById('enableGeoCheck').checked = localStorage.getItem('enableGeoCheck') !== 'false';\n        }\n        \n        // Save general settings\n        function saveGeneralSettings() {\n            try {\n                localStorage.setItem('defaultTheme', document.getElementById('defaultTheme').value);\n                localStorage.setItem('defaultTeamCount', document.getElementById('defaultTeamCount').value);\n                localStorage.setItem('showPredictions', document.getElementById('showPredictions').checked);\n                localStorage.setItem('enableAIPlayers', document.getElementById('enableAIPlayers').checked);\n                localStorage.setItem('enableLiveOdds', document.getElementById('enableLiveOdds').checked);\n\n                showStatus('generalStatus', 'Settings saved successfully!', 'success');\n            } catch (error) {\n                showStatus('generalStatus', 'Error saving settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Save special events settings\n        function saveSpecialEventsSettings() {\n            try {\n                localStorage.setItem('propBetsEnabled', document.getElementById('enablePropBets').checked);\n                showStatus('specialEventsStatus', 'Settings saved successfully!', 'success');\n            } catch (error) {\n                showStatus('specialEventsStatus', 'Error saving settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Save location settings\n        function saveLocationSettings() {\n            try {\n                localStorage.setItem('enableGeoCheck', document.getElementById('enableGeoCheck').checked);\n                showStatus('locationStatus', 'Location settings saved successfully!', 'success');\n            } catch (error) {\n                showStatus('locationStatus', 'Error saving location settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Save security settings\n        function saveSecuritySettings() {\n            try {\n                const password = document.getElementById('newAdminPassword').value;\n                if (password) {\n                    localStorage.setItem('adminPassword', password);\n                }\n                showStatus('securityStatus', 'Security settings saved successfully!', 'success');\n            } catch (error) {\n                showStatus('securityStatus', 'Error saving security settings: ' + error.message, 'error');\n            }\n        }\n        \n        // Save advanced settings\n        function saveAdvancedSettings() {\n            showStatus('advancedStatus', 'Advanced settings saved successfully', 'success');\n        }\n        \n        // Reset settings\n        function resetSettings() {\n            if (confirm('Are you sure you want to reset all settings to their default values?')) {\n                // Clear localStorage (except for critical items)\n                const adminPassword = localStorage.getItem('adminPassword');\n                localStorage.clear();\n\n                // Restore the admin password\n                if (adminPassword) {\n                    localStorage.setItem('adminPassword', adminPassword);\n                }\n\n                // Reload settings\n                loadAdminSettings();\n                \n                showStatus('advancedStatus', 'All settings have been reset to defaults', 'success');\n            }\n        }\n        \n        // Show status message\n        function showStatus(elementId, message, type) {\n            const statusElement = document.getElementById(elementId);\n            if (!statusElement) return;\n\n            statusElement.textContent = message;\n            statusElement.className = 'status-indicator';\n            statusElement.classList.add('status-' + type);\n            statusElement.style.display = 'block';\n\n            // Hide the status message after 3 seconds\n            setTimeout(() => {\n                statusElement.style.display = 'none';\n            }, 3000);\n        }\n        \n        // Add a new option to the prop bet form\n        function addPropBetOption() {\n            const optionsContainer = document.getElementById('optionsContainer');\n\n            const optionRow = document.createElement('div');\n            optionRow.className = 'option-row';\n\n            optionRow.innerHTML = `\n                <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+100\">\n            `;\n\n            optionsContainer.appendChild(optionRow);\n        }\n        \n        // Create a new prop bet\n        function createPropBet() {\n            try {\n                const eventName = document.getElementById('propEventName').value.trim();\n                const question = document.getElementById('propQuestion').value.trim();\n\n                if (!eventName || !question) {\n                    throw new Error('Event name and question are required');\n                }\n\n                // Get options\n                const optionRows = document.querySelectorAll('#optionsContainer .option-row');\n                const options = [];\n\n                optionRows.forEach(row => {\n                    const optionText = row.querySelector('.option-text').value.trim();\n                    const optionOdds = row.querySelector('.option-odds').value.trim();\n\n                    if (optionText && optionOdds) {\n                        options.push({\n                            text: optionText,\n                            odds: optionOdds\n                        });\n                    }\n                });\n\n                if (options.length < 2) {\n                    throw new Error('At least two valid options are required');\n                }\n\n                // Create the prop bet object\n                const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n                const propBet = {\n                    id: Date.now(),\n                    eventName,\n                    question,\n                    options,\n                    enabled: true,\n                    created: new Date().toISOString()\n                };\n\n                // Add to the prop bets array\n                propBets.push(propBet);\n\n                // Save to localStorage\n                localStorage.setItem('propBets', JSON.stringify(propBets));\n\n                // Clear the form\n                document.getElementById('propEventName').value = '';\n                document.getElementById('propQuestion').value = '';\n                \n                // Reset options to just two\n                const optionsContainer = document.getElementById('optionsContainer');\n                optionsContainer.innerHTML = `\n                    <div class=\"option-row\">\n                        <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                        <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+150\">\n                    </div>\n                    <div class=\"option-row\">\n                        <input type=\"text\" class=\"option-text\" placeholder=\"Option text\" value=\"\">\n                        <input type=\"text\" class=\"option-odds\" placeholder=\"Odds\" value=\"+200\">\n                    </div>\n                `;\n\n                showStatus('specialEventsStatus', 'Prop bet created successfully!', 'success');\n            } catch (error) {\n                showStatus('specialEventsStatus', 'Error creating prop bet: ' + error.message, 'error');\n            }\n        }\n\n        // Open admin console in a new window\n        function showAdminConsole() {\n            // Open the admin console in a new window or tab\n            const adminWindow = window.open('admin-widget.html', '_blank', 'width=1200,height=800');\n\n            if (!adminWindow) {\n                alert('The admin console was blocked by your browser. Please allow popups and try again.');\n            }\n        }\n\n        // Special events functionality\n        function loadSpecialEvents() {\n            // Check if special events are enabled in admin settings\n            const propBetsEnabled = localStorage.getItem('propBetsEnabled') === 'true';\n            const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n\n            // Get the special events section element\n            const specialEventsSection = document.getElementById('specialEventsSection');\n\n            // Show or hide based on admin settings\n            if (specialEventsSection) {\n                specialEventsSection.style.display = propBetsEnabled && propBets.length > 0 ? 'block' : 'none';\n\n                // If enabled, populate with prop bets\n                if (propBetsEnabled && propBets.length > 0) {\n                    const propBetsContainer = document.getElementById('propBetsContainer');\n                    if (propBetsContainer) {\n                        propBetsContainer.innerHTML = '';\n\n                        propBets.forEach(bet => {\n                            const propBetCard = document.createElement('div');\n                            propBetCard.className = 'prop-bet-card';\n\n                            let optionsHTML = '';\n                            bet.options.forEach(option => {\n                                optionsHTML += `\n                                    <div class=\"prop-bet-option\" data-prop-id=\"${bet.id}\" data-option=\"${option.text}\" data-odds=\"${option.odds}\">\n                                        <span>${option.text}</span>\n                                        <span class=\"prop-bet-option-odds\">${option.odds}</span>\n                                    </div>\n                                `;\n                            });\n\n                            propBetCard.innerHTML = `\n                                <div class=\"prop-bet-question\">${bet.question}</div>\n                                <div class=\"prop-bet-options\">\n                                    ${optionsHTML}\n                                </div>\n                            `;\n\n                            propBetsContainer.appendChild(propBetCard);\n                        });\n\n                        // Add event listeners to prop bet options\n                        document.querySelectorAll('.prop-bet-option').forEach(option => {\n                            option.addEventListener('click', function() {\n                                // Add to tracked games\n                                const propId = this.getAttribute('data-prop-id');\n                                const optionText = this.getAttribute('data-option');\n                                const odds = this.getAttribute('data-odds');\n\n                                // Add prop bet to tracked games\n                                addToTrackedGames(null, 'PROP', null, odds, null, {\n                                    propId: propId,\n                                    option: optionText\n                                });\n                                updateGameTracking();\n\n                                // Visual feedback\n                                this.classList.add('selected');\n                                setTimeout(() => {\n                                    this.classList.remove('selected');\n                                }, 200);\n                            });\n                        });\n                    }\n                }\n            }\n\n            console.log(\"Special events loaded. Enabled:\", propBetsEnabled);\n        }\n\n        function toggleLiveOdds(enabled) {\n            // Update the live odds status\n            console.log(\"Live odds are now \" + (enabled ? \"enabled\" : \"disabled\"));\n            liveOddsActive = enabled;\n\n            // Store the setting\n            localStorage.setItem('enableLiveOdds', enabled.toString());\n\n            // Show status message\n            const statusIndicator = document.getElementById('statusIndicator');\n            if (statusIndicator) {\n                statusIndicator.textContent = enabled ? \n                    \"Live odds enabled - using real-time data from sportsbooks\" : \n                    \"Live odds disabled - using sample data\";\n                statusIndicator.style.display = 'block';\n                statusIndicator.style.backgroundColor = enabled ? 'rgba(0, 255, 0, 0.1)' : 'rgba(255, 0, 0, 0.1)';\n                \n                setTimeout(() => {\n                    statusIndicator.style.display = 'none';\n                }, 3000);\n            }\n\n            // Update indicators on existing games\n            document.querySelectorAll('.live-odds-indicator').forEach(indicator => {\n                if (enabled) {\n                    indicator.classList.add('active');\n                    indicator.innerHTML = '<span class=\"live-pulse\"></span> LIVE';\n                    \n                    const pulseElement = indicator.querySelector('.live-pulse');\n                    if (pulseElement) {\n                        pulseElement.style.backgroundColor = 'var(--neon-green)';\n                        \n                        // Add animation to make it more noticeable\n                        pulseElement.style.animation = 'pulse 2s infinite';\n                    }\n                } else {\n                    indicator.classList.remove('active');\n                    indicator.innerHTML = '<span class=\"live-pulse\"></span> DELAYED';\n                    \n                    const pulseElement = indicator.querySelector('.live-pulse');\n                    if (pulseElement) {\n                        pulseElement.style.backgroundColor = 'red';\n                        pulseElement.style.animation = 'pulse 4s infinite'; // Slower pulse for delayed\n                    }\n                }\n            });\n\n            // Add active live odds auto-update if enabled\n            if (enabled) {\n                // Set interval to periodically update odds\n                if (window.liveOddsUpdateInterval) {\n                    clearInterval(window.liveOddsUpdateInterval);\n                }\n                \n                window.liveOddsUpdateInterval = setInterval(() => {\n                    // Only update if toggle is still enabled\n                    if (document.getElementById('liveOddsToggle')?.checked) {\n                        const leagueSelect = document.getElementById('leagueSelect');\n                        if (leagueSelect && leagueSelect.value) {\n                            // Don't reload entire games list, just update odds on existing games\n                            updateLiveOdds(leagueSelect.value);\n                        }\n                    } else {\n                        // If toggle was switched off, clear the interval\n                        clearInterval(window.liveOddsUpdateInterval);\n                    }\n                }, 30000); // Update every 30 seconds\n            } else {\n                // Clear any existing update interval\n                if (window.liveOddsUpdateInterval) {\n                    clearInterval(window.liveOddsUpdateInterval);\n                }\n            }\n\n            // If a league is selected, refresh the games to show updated odds\n            const leagueSelect = document.getElementById('leagueSelect');\n            if (leagueSelect && leagueSelect.value) {\n                generateGreekGames(leagueSelect.value);\n            }\n        }\n        \n        // Function to update live odds without regenerating all games\n        function updateLiveOdds(league) {\n            // Only proceed if live odds are active\n            if (!liveOddsActive) return;\n            \n            // Show subtle notification\n            const statusIndicator = document.getElementById('statusIndicator');\n            if (statusIndicator) {\n                statusIndicator.textContent = `Updating live odds for ${league}...`;\n                statusIndicator.style.display = 'block';\n                statusIndicator.style.opacity = '0.7';\n                \n                setTimeout(() => {\n                    statusIndicator.style.display = 'none';\n                }, 1500);\n            }\n            \n            // Animate existing odds to show they're updating\n            document.querySelectorAll('.bet-option').forEach(option => {\n                option.classList.add('updating');\n                \n                // Random slight adjustment to odds for demo purposes\n                setTimeout(() => {\n                    if (Math.random() > 0.7) { // Only update some odds\n                        const currentOdds = option.textContent.match(/[-+]\\d+/);\n                        if (currentOdds) {\n                            const oddsValue = parseInt(currentOdds[0]);\n                            const adjustment = Math.floor(Math.random() * 10) - 5; // -5 to +5\n                            const newOdds = oddsValue + adjustment;\n                            \n                            // Update the display\n                            option.textContent = option.textContent.replace(\n                                /[-+]\\d+/, \n                                (newOdds >= 0 ? '+' : '') + newOdds\n                            );\n                            \n                            // Update the data attribute\n                            option.setAttribute('data-odds', (newOdds >= 0 ? '+' : '') + newOdds);\n                        }\n                    }\n                    \n                    option.classList.remove('updating');\n                }, 1000);\n            });\n        }\n\n        // Generate prediction HTML for a game\n        function generatePrediction(game) {\n            // Generate random win probabilities for demo\n            const homeWinProb = Math.floor(Math.random() * 70) + 30;\n            const awayWinProb = 100 - homeWinProb;\n\n            // Determine recommended bet\n            let recommendedBet = '';\n            if (homeWinProb > 57) {\n                recommendedBet = `Home ML`;\n            } else if (awayWinProb > 57) {\n                recommendedBet = `Away ML`;\n            } else if (Math.random() > 0.5) {\n                const spreadValue = game.homeSpread || (Math.floor(Math.random() * 140) + 10) / 10;\n                const homeSpread = game.homeSpread ? game.homeSpread.toFixed(1) : (Math.random() > 0.5 ? \"-\" : \"+\") + spreadValue.toFixed(1);\n                const awaySpread = (homeSpread.startsWith(\"-\") ? \"+\" : \"-\") + Math.abs(parseFloat(homeSpread)).toFixed(1);\n                recommendedBet = homeSpread.startsWith('+') ? `Home ${homeSpread}` : `Away ${awaySpread}`;\n            } else {\n                const totalPoints = game.totalPoints || (Math.floor(Math.random() * 35) + 40);\n                recommendedBet = Math.random() > 0.5 ? `OVER ${totalPoints}` : `UNDER ${totalPoints}`;\n            }\n\n            return `\n                <div class=\"prediction-container\" style=\"display: flex; justify-content: space-between; margin: 10px 0; padding: 5px; border-top: 1px dashed var(--neon-green); border-bottom: 1px dashed var(--neon-green);\">\n                    <div style=\"display: flex; width: 100%; justify-content: space-between;\">\n                        <div style=\"text-align: center; flex: 1;\">\n                            <div style=\"color: var(--neon-green);\">${homeWinProb}% win probability</div>\n                        </div>\n                        <div style=\"text-align: center; flex: 1;\">\n                            <div style=\"color: var(--neon-green);\">${awayWinProb}% win probability</div>\n                        </div>\n                    </div>\n                </div>\n                <div style=\"display: flex; justify-content: space-between; margin-bottom: 10px;\">\n                    <div style=\"text-align: center; flex: 1;\">\n                        <div>AI Prediction</div>\n                    </div>\n                    <div style=\"text-align: center; flex: 1;\">\n                        <div>Recommended Bet</div>\n                    </div>\n                </div>\n                <div style=\"display: flex; justify-content: space-between; margin-bottom: 10px; color: var(--neon-green); font-weight: bold;\">\n                    <div style=\"text-align: center; flex: 1;\">\n                        ${homeWinProb > awayWinProb ? game.homeTeam : game.awayTeam}\n                    </div>\n                    <div style=\"text-align: center; flex: 1;\">\n                        ${recommendedBet}\n                    </div>\n                </div>\n            `;\n        }\n\n        async function generateGreekGames(league) {\n            const greekGamesList = document.getElementById('greekGamesList');\n            if (!greekGamesList) return;\n\n            // If no league is selected, clear the games list and show a message\n            if (!league) {\n                greekGamesList.innerHTML = '<p>Please select a league to view available games</p>';\n                return;\n            }\n\n            // Update status\n            const statusIndicator = document.getElementById('statusIndicator');\n            if (statusIndicator) {\n                statusIndicator.textContent = `Fetching latest odds for ${league}...`;\n                statusIndicator.style.display = 'block';\n            }\n\n            try {\n                // Try to get live odds data first\n                const liveGames = await generateLiveGames(league);\n                currentGames = liveGames && liveGames.length > 0 ? liveGames : generateSampleGames(league);\n            } catch (error) {\n                console.error(\"Error fetching live odds:\", error);\n                currentGames = generateSampleGames(league);\n            }\n\n            if (statusIndicator) {\n                statusIndicator.style.display = 'none';\n            }\n\n            if (currentGames.length === 0) {\n                greekGamesList.innerHTML = '<p>No games available for this league</p>';\n                return;\n            }\n\n            // Always show predictions and include live odds indicator\n            const liveOddsActive = localStorage.getItem('enableLiveOdds') !== 'false';\n\n            // Check for special events prop bets\n            const propBetsEnabled = localStorage.getItem('propBetsEnabled') === 'true';\n            const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n\n            let gamesHTML = '';\n\n            // First add special event prop bets section if enabled\n            if (propBetsEnabled && propBets.length > 0) {\n                gamesHTML += `\n                    <div class=\"special-events-section\" style=\"display: block; margin-bottom: 20px; border: 1px solid var(--neon-green); padding: 15px; border-radius: 8px; background-color: rgba(0, 0, 0, 0.3);\">\n                        <div class=\"section-header\">\n                            <h2>Special Event Prop Bets</h2>\n                            <div class=\"header-description\">\n                                <p>Place bets on special events beyond the normal game outcomes</p>\n                            </div>\n                        </div>\n                        <div class=\"prop-bets-container\" style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 15px; margin-top: 15px;\">\n                `;\n\n                propBets.forEach(bet => {\n                    let optionsHTML = '';\n                    bet.options.forEach(option => {\n                        optionsHTML += `\n                            <div class=\"prop-bet-option\" data-prop-id=\"${bet.id}\" data-option=\"${option.text}\" data-odds=\"${option.odds}\" style=\"background-color: rgba(0, 0, 0, 0.7); border: 1px solid var(--neon-green); padding: 8px 12px; border-radius: 4px; cursor: pointer; transition: all 0.2s; display: flex; justify-content: space-between; margin-bottom: 8px;\">\n                                <span>${option.text}</span>\n                                <span class=\"prop-bet-option-odds\" style=\"font-weight: bold;\">${option.odds}</span>\n                            </div>\n                        `;\n                    });\n\n                    gamesHTML += `\n                        <div class=\"prop-bet-card\" style=\"border: 1px solid var(--neon-green); background-color: rgba(0, 0, 0, 0.4); padding: 15px; border-radius: 5px;\">\n                            <div class=\"prop-bet-question\" style=\"color: var(--neon-green); font-size: 1.1em; margin-bottom: 15px; font-weight: bold;\">${bet.question}</div>\n                            <div class=\"prop-bet-options\">\n                                ${optionsHTML}\n                            </div>\n                        </div>\n                    `;\n                });\n\n                gamesHTML += `\n                        </div>\n                    </div>\n                `;\n            }\n\n            // Then add regular games\n            currentGames.forEach(game => {\n                const spreadValue = game.homeSpread || (Math.floor(Math.random() * 140) + 10) / 10;\n                const homeSpread = game.homeSpread ? game.homeSpread.toFixed(1) : (Math.random() > 0.5 ? \"-\" : \"+\") + spreadValue.toFixed(1);\n                const awaySpread = game.awaySpread ? game.awaySpread.toFixed(1) : (homeSpread.startsWith(\"-\") ? \"+\" + homeSpread.substring(1) : \"-\" + homeSpread.substring(1));\n                const totalPoints = game.totalPoints || (Math.floor(Math.random() * 35) + 40);\n\n                // Always generate prediction \n                const homeWinProb = Math.floor(Math.random() * 70) + 30;\n                const awayWinProb = 100 - homeWinProb;\n\n                // Determine recommended bet\n                let recommendedBet = '';\n                if (homeWinProb > 57) {\n                    recommendedBet = `${game.homeTeam} ML`;\n                } else if (awayWinProb > 57) {\n                    recommendedBet = `${game.awayTeam} ML`;\n                } else if (Math.random() > 0.5) {\n                    recommendedBet = homeSpread.startsWith('+') ? `${game.homeTeam} ${homeSpread}` : `${game.awayTeam} ${awaySpread}`;\n                } else {\n                    recommendedBet = Math.random() > 0.5 ? `OVER ${totalPoints}` : `UNDER ${totalPoints}`;\n                }\n\n                const confidenceLevel = Math.floor(Math.random() * 40) + 60; // 60-99%\n\n                gamesHTML += `\n                    <div class=\"greek-game-card\" data-game-id=\"${game.id}\">\n                        <div class=\"game-teams\">\n                            <span class=\"team home\">${game.homeTeam}</span>\n                            <span class=\"vs\">vs</span>\n                            <span class=\"team away\">${game.awayTeam}</span>\n                            <span class=\"live-odds-indicator ${liveOddsActive ? 'active' : ''}\">\n                                <span class=\"live-pulse\"></span>\n                                ${liveOddsActive ? 'LIVE' : 'DELAYED'}\n                            </span>\n                        </div>\n                        <div class=\"game-details\">\n                            <span>${game.date || 'Today'} ${game.time || '7:00 PM'}</span>\n                        </div>\n                        <div class=\"game-prediction\">\n                            <div class=\"prediction-text\">Prediction: ${homeWinProb > awayWinProb ? game.homeTeam : game.awayTeam} to win</div>\n                            <div class=\"prediction-text\">Recommended bet: ${recommendedBet}</div>\n                            <div class=\"prediction-confidence\">\n                                <span>Confidence:</span>\n                                <div class=\"confidence-meter\">\n                                    <div class=\"confidence-level\" style=\"width: ${confidenceLevel}%\"></div>\n                                </div>\n                                <span>${confidenceLevel}%</span>\n                            </div>\n                        </div>\n                        <div class=\"betting-options\">\n                            <button class=\"bet-option home-ml\" data-type=\"ML\" data-team=\"${game.homeTeam}\" data-odds=\"${game.homeOdds}\" data-game-id=\"${game.id}\">\n                                ${game.homeTeam} ML ${game.homeOdds}\n                            </button>\n                            <button class=\"bet-option away-ml\" data-type=\"ML\" data-team=\"${game.awayTeam}\" data-odds=\"${game.awayOdds}\" data-game-id=\"${game.id}\">\n                                ${game.awayTeam} ML ${game.awayOdds}\n                            </button>\n                            <button class=\"bet-option home-spread\" data-type=\"SPREAD\" data-team=\"${game.homeTeam}\" data-odds=\"-110\" data-value=\"${homeSpread}\" data-game-id=\"${game.id}\">\n                                ${game.homeTeam} ${homeSpread} (-110)\n                            </button>\n                            <button class=\"bet-option away-spread\" data-type=\"SPREAD\" data-team=\"${game.awayTeam}\" data-odds=\"-110\" data-value=\"${awaySpread}\" data-game-id=\"${game.id}\">\n                                ${game.awayTeam} ${awaySpread} (-110)\n                            </button>\n                            <button class=\"bet-option over\" data-type=\"OVER\" data-odds=\"-110\" data-value=\"${totalPoints}\" data-game-id=\"${game.id}\">\n                                OVER ${totalPoints} (-110)\n                            </button>\n                            <button class=\"bet-option under\" data-type=\"UNDER\" data-odds=\"-110\" data-value=\"${totalPoints}\" data-game-id=\"${game.id}\">\n                                UNDER ${totalPoints} (-110)\n                            </button>\n                        </div>\n                    </div>\n                `;\n            });\n\n            greekGamesList.innerHTML = gamesHTML;\n\n            // Add event listeners to betting options\n            const betOptions = document.querySelectorAll('.bet-option');\n            betOptions.forEach(option => {\n                option.addEventListener('click', function() {\n                    const gameId = this.getAttribute('data-game-id');\n                    const betType = this.getAttribute('data-type');\n                    const team = this.getAttribute('data-team') || '';\n                    const odds = this.getAttribute('data-odds');\n                    const value = this.getAttribute('data-value') || '';\n\n                    // Add pick and update UI\n                    addToTrackedGames(gameId, betType, team, odds, value);\n                    updateGameTracking();\n\n                    // Visual feedback for click\n                    this.classList.add('selected');\n                    setTimeout(() => {\n                        this.classList.remove('selected');\n                    }, 200);\n                });\n            });\n\n            // Add event listeners to prop bet options\n            document.querySelectorAll('.prop-bet-option').forEach(option => {\n                option.addEventListener('click', function() {\n                    const propId = this.getAttribute('data-prop-id');\n                    const optionText = this.getAttribute('data-option');\n                    const odds = this.getAttribute('data-odds');\n\n                    // Add prop bet to tracked games\n                    addToTrackedGames(null, 'PROP', null, odds, null, {\n                        propId: propId,\n                        option: optionText\n                    });\n                    updateGameTracking();\n\n                    // Visual feedback for click\n                    this.classList.add('selected');\n                    setTimeout(() => {\n                        this.classList.remove('selected');\n                    }, 200);\n                });\n            });\n        }\n\n\n        function addToTrackedGames(gameId, betType, team, odds, value, propData) {\n            // Handle prop bets differently\n            if (betType === 'PROP') {\n                const propBets = JSON.parse(localStorage.getItem('propBets') || '[]');\n                const propBet = propBets.find(p => p.id === propData.propId);\n\n                if (!propBet) return;\n\n                const teamLimit = parseInt(document.getElementById('teamOptions')?.value) || 3;\n\n                if (trackedGames.length >= teamLimit) {\n                    alert(`You have reached your limit of ${teamLimit} team picks!`);\n                    return;\n                }\n\n                trackedGames.push({\n                    isPropBet: true,\n                    propId: propData.propId,\n                    propName: propBet.eventName,\n                    propQuestion: propBet.question,\n                    option: propData.option,\n                    odds: odds,\n                    betType: 'PROP',\n                    timestamp: new Date().getTime()\n                });\n\n                return;\n            }\n\n            // Regular game handling\n            const game = currentGames.find(g => g.id === parseInt(gameId));\n            const teamLimit = parseInt(document.getElementById('teamOptions')?.value) || 3;\n\n            if (trackedGames.length >= teamLimit) {\n                alert(`You have reached your limit of ${teamLimit} team picks!`);\n                return;\n            }\n\n            if (game) {\n                trackedGames.push({\n                    gameId: parseInt(gameId),\n                    game: game,\n                    betType,\n                    team,\n                    odds,\n                    value,\n                    timestamp: new Date().getTime()\n                });\n            }\n        }\n\n        function updateGameTracking() {\n            const gameTracking = document.getElementById('gameTracking');\n            if (!gameTracking) return;\n\n            if (trackedGames.length === 0) {\n                gameTracking.innerHTML = '<p>No games tracked yet. Select betting options from available games.</p>';\n                return;\n            }\n\n            let trackingHTML = '';\n            trackedGames.forEach((tg, index) => {\n                // Handle prop bets\n                if (tg.isPropBet) {\n                    trackingHTML += `\n                        <div class=\"greek-game-card tracked prop-bet\" data-index=\"${index}\">\n                            <div class=\"game-teams\" style=\"color: var(--neon-green);\">\n                                <span class=\"prop-event\">${tg.propName}</span>\n                                <span class=\"vs\">•</span>\n                                <span class=\"prop-type\">Special Event</span>\n                            </div>\n                            <div class=\"game-details\">\n                                <span>${tg.propQuestion}</span>\n                            </div>\n                            <div class=\"bet-details\">\n                                Your Pick: ${tg.option} (${tg.odds})\n                            </div>\n                            <button class=\"remove-bet-btn\" onclick=\"removePick(${index})\" style=\"background: transparent; color: var(--neon-green); border: 1px solid var(--neon-green); padding: 5px 10px; margin-top: 10px; cursor: pointer;\">Remove</button>\n                        </div>\n                    `;\n                    return;\n                }\n\n                // Handle regular game bets\n                if (!tg.game) return;\n\n                let betDetails = '';\n                if (tg.betType === 'ML') {\n                    betDetails = `${tg.team} ML (${tg.odds})`;\n                } else if (tg.betType === 'SPREAD') {\n                    betDetails = `${tg.team} ${tg.value} (${tg.odds})`;\n                } else if (tg.betType === 'OVER') {\n                    betDetails = `OVER ${tg.value} (${tg.odds})`;\n                } else if (tg.betType === 'UNDER') {\n                    betDetails = `UNDER ${tg.value} (${tg.odds})`;\n                }\n\n                trackingHTML += `\n                    <div class=\"greek-game-card tracked\" data-game-id=\"${tg.gameId}\" data-index=\"${index}\">\n                        <div class=\"game-teams\">\n                            <span class=\"team home\">${tg.game.homeTeam}</span>\n                            <span class=\"vs\">vs</span>\n                            <span class=\"team away\">${tg.game.awayTeam}</span>\n                        </div>\n                        <div class=\"game-details\">\n                            <span>${tg.game.date} ${tg.game.time}</span>\n                        </div>\n                        <div class=\"bet-details\">\n                            Your Pick: ${betDetails}\n                        </div>\n                        <button class=\"remove-bet-btn\" onclick=\"removePick(${index})\" style=\"background: transparent; color: var(--neon-green); border: 1px solid var(--neon-green); padding: 5px 10px; margin-top: 10px; cursor: pointer;\">Remove</button>\n                    </div>\n                `;\n            });\n\n            gameTracking.innerHTML = trackingHTML;\n\n            // Update player betting cards with tracked games\n            updatePlayerBettingCards();\n        }\n\n\n        function removePick(index) {\n            trackedGames.splice(index, 1);\n            updateGameTracking();\n        }\n\n        // Sample game data generation function (replace with actual API call)\n        function generateSampleGames(league) {\n            const teams = {\n                \"NFL\": [\"Arizona Cardinals\", \"Atlanta Falcons\", \"Baltimore Ravens\", \"Buffalo Bills\", \"Carolina Panthers\", \"Chicago Bears\", \"Cincinnati Bengals\", \"Cleveland Browns\"],\n                \"NBA\": [\"Atlanta Hawks\", \"Boston Celtics\", \"Brooklyn Nets\", \"Charlotte Hornets\", \"Chicago Bulls\", \"Cleveland Cavaliers\", \"Dallas Mavericks\", \"Denver Nuggets\"],\n                \"NCAAB\": [\"Duke\", \"North Carolina\", \"Kentucky\", \"Kansas\", \"Gonzaga\", \"Villanova\", \"Michigan\", \"UCLA\"],\n                \"NHL\": [\"Boston Bruins\", \"Buffalo Sabres\", \"Detroit Red Wings\", \"Florida Panthers\", \"Montreal Canadiens\", \"Ottawa Senators\", \"Tampa Bay Lightning\", \"Toronto Maple Leafs\"],\n                \"MLB\": [\"New York Yankees\", \"Boston Red Sox\", \"LA Dodgers\", \"Chicago Cubs\", \"Houston Astros\", \"Atlanta Braves\", \"St. Louis Cardinals\", \"San Francisco Giants\"],\n                \"NCAAF\": [\"Alabama\", \"Georgia\", \"Ohio State\", \"Michigan\", \"Clemson\", \"Notre Dame\", \"Oklahoma\", \"Texas\"],\n                \"LA_LIGA\": [\"Real Madrid\", \"Barcelona\", \"Atletico Madrid\", \"Sevilla\", \"Valencia\", \"Villarreal\", \"Real Betis\", \"Athletic Bilbao\"],\n                \"PREMIER_LEAGUE\": [\"Manchester City\", \"Liverpool\", \"Chelsea\", \"Arsenal\", \"Tottenham\", \"Manchester United\", \"West Ham\", \"Leicester City\"]\n            };\n\n            const leagueTeams = teams[league] || [];\n            if (leagueTeams.length === 0) return [];\n\n            const games = [];\n            const today = new Date();\n\n            // Generate 4 sample games\n            for (let i = 0; i < 4; i++) {\n                if (i*2 + 1 >= leagueTeams.length) break;\n\n                const homeTeam = leagueTeams[i * 2];\n                const awayTeam = leagueTeams[i * 2 + 1];\n                const date = new Date(today);\n                date.setDate(today.getDate() + Math.floor(Math.random() * 7));\n\n                const homeOdds = Math.random() > 0.5 ? \n                    `-${Math.floor(Math.random() * 200) + 100}` : \n                    `+${Math.floor(Math.random() * 250) + 100}`;\n\n                const awayOdds = homeOdds.startsWith('-') ? \n                    `+${homeOdds.substring(1)}` : \n                    `-${homeOdds.substring(1)}`;\n\n                games.push({\n                    id: i,\n                    homeTeam: homeTeam,\n                    awayTeam: awayTeam,\n                    homeOdds: homeOdds,\n                    awayOdds: awayOdds,\n                    date: date.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' }),\n                    time: `${Math.floor(Math.random() * 12) + 1}:00 ${Math.random() > 0.5 ? 'PM' : 'AM'}`\n                });\n            }\n\n            return games;\n        }\n\n        // Fetch live games from The Odds API\n        async function generateLiveGames(league) {\n            const apiKey = '9253c8fe591d32bce8624945ac590287';\n            const statusIndicator = document.getElementById('statusIndicator');\n\n            if (statusIndicator) {\n                statusIndicator.textContent = `Fetching live odds for ${league}...`;\n                statusIndicator.style.display = 'block';\n            }\n\n            try {\n                // Map UI league to API sport key\n                const sportMapping = {\n                    'NFL': 'americanfootball_nfl',\n                    'NBA': 'basketball_nba',\n                    'NHL': 'icehockey_nhl',\n                    'MLB': 'baseball_mlb',\n                    'NCAAF': 'americanfootball_ncaaf',\n                    'NCAAB': 'basketball_ncaa',\n                    'LA_LIGA': 'soccer_spain_la_liga',\n                    'PREMIER_LEAGUE': 'soccer_epl',\n                    'WNBA': 'basketball_wnba',\n                    'MLS': 'soccer_usa_mls',\n                    'BOXING': 'boxing_boxing',\n                    'MMA': 'mma_mixed_martial_arts',\n                    'NASCAR': 'motorsport_nascar',\n                    'TENNIS': 'tennis_atp',\n                    'GOLF': 'golf_pga_tour'\n                };\n\n                const sportKey = sportMapping[league] || league.toLowerCase();\n                console.log(\"Using sport key for API:\", sportKey);\n\n                // Direct API URL - will work in Replit environment\n                const oddsUrl = `https://api.the-odds-api.com/v4/sports/${sportKey}/odds/?regions=us&markets=h2h,spreads,totals&oddsFormat=american&apiKey=${apiKey}`;\n                \n                // Make the API call\n                const response = await fetch(oddsUrl);\n                \n                // Check if successful\n                if (!response.ok) {\n                    throw new Error(`API responded with status: ${response.status}`);\n                }\n\n                // Parse the data\n                const data = await response.json();\n                console.log(`API data received for ${league}:`, data);\n\n                if (!data || data.length === 0) {\n                    throw new Error(\"No games available from API\");\n                }\n\n                // Transform API data to our game format\n                const games = data.map((event, index) => {\n                    // Extract odds information\n                    const homeTeam = event.home_team;\n                    const awayTeam = event.away_team;\n\n                    // Default odds in case no bookmakers are available\n                    let homeOdds = '+100';\n                    let awayOdds = '+100';\n                    let homeSpread = -3.5;\n                    let awaySpread = 3.5;\n                    let totalPoints = 220;\n\n                    // If we have bookmakers, extract the odds\n                    if (event.bookmakers && event.bookmakers.length > 0) {\n                        const bookmaker = event.bookmakers[0];\n\n                        // Money line (h2h) odds\n                        const h2hMarket = bookmaker.markets.find(m => m.key === 'h2h');\n                        if (h2hMarket && h2hMarket.outcomes) {\n                            const homeOutcome = h2hMarket.outcomes.find(o => o.name === homeTeam);\n                            const awayOutcome = h2hMarket.outcomes.find(o => o.name === awayTeam);\n\n                            if (homeOutcome) homeOdds = homeOutcome.price.toString();\n                            if (awayOutcome) awayOdds = awayOutcome.price.toString();\n\n                            // Format positive odds to include + sign\n                            if (!homeOdds.startsWith('-') && !homeOdds.startsWith('+')) homeOdds = '+' + homeOdds;\n                            if (!awayOdds.startsWith('-') && !awayOdds.startsWith('+')) awayOdds = '+' + awayOdds;\n                        }\n\n                        // Spread odds\n                        const spreadsMarket = bookmaker.markets.find(m => m.key === 'spreads');\n                        if (spreadsMarket && spreadsMarket.outcomes) {\n                            const homeOutcome = spreadsMarket.outcomes.find(o => o.name === homeTeam);\n                            const awayOutcome = spreadsMarket.outcomes.find(o => o.name === awayTeam);\n\n                            if (homeOutcome) homeSpread = parseFloat(homeOutcome.point);\n                            if (awayOutcome) awaySpread = parseFloat(awayOutcome.point);\n                        }\n\n                        // Total points (over/under)\n                        const totalsMarket = bookmaker.markets.find(m => m.key === 'totals');\n                        if (totalsMarket && totalsMarket.outcomes) {\n                            const overOutcome = totalsMarket.outcomes.find(o => o.name === 'Over');\n                            if (overOutcome) totalPoints = parseFloat(overOutcome.point);\n                        }\n                    }\n\n                    // Format the date and time\n                    const startTime = new Date(event.commence_time);\n                    const formattedDate = startTime.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' });\n                    const formattedTime = startTime.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });\n\n                    return {\n                        id: index + 1,\n                        homeTeam,\n                        awayTeam,\n                        homeOdds,\n                        awayOdds,\n                        homeSpread,\n                        awaySpread,\n                        totalPoints,\n                        date: formattedDate,\n                        time: formattedTime,\n                        league: league\n                    };\n                });\n\n                console.log(`Successfully fetched ${games.length} games for ${league}`);\n                \n                if (games.length === 0) {\n                    throw new Error(\"No games available for this sport\");\n                }\n                \n                return games;\n            } catch (error) {\n                console.error(\"Error fetching live odds:\", error);\n                \n                // Let's try an alternative approach - using upcoming events endpoint\n                try {\n                    const upcomingUrl = `https://api.the-odds-api.com/v4/sports/${sportMapping[league]}/scores/?apiKey=${apiKey}`;\n                    const upcomingResponse = await fetch(upcomingUrl);\n                    \n                    if (upcomingResponse.ok) {\n                        const upcomingData = await upcomingResponse.json();\n                        console.log(\"Upcoming events data:\", upcomingData);\n                        \n                        if (upcomingData && upcomingData.length > 0) {\n                            // Convert upcoming events to our game format with mock odds\n                            return upcomingData.map((event, index) => {\n                                const homeTeam = event.home_team;\n                                const awayTeam = event.away_team;\n                                \n                                // Generate random odds since the upcoming endpoint doesn't have odds\n                                const homeFavorite = Math.random() > 0.5;\n                                const homeOdds = homeFavorite ? `-${Math.floor(Math.random() * 150) + 110}` : `+${Math.floor(Math.random() * 150) + 110}`;\n                                const awayOdds = homeFavorite ? `+${homeOdds.substring(1)}` : `-${homeOdds.substring(1)}`;\n                                const homeSpread = homeFavorite ? -(Math.floor(Math.random() * 10) + 1) : (Math.floor(Math.random() * 10) + 1);\n                                const awaySpread = -homeSpread;\n                                const totalPoints = Math.floor(Math.random() * 50) + (league === 'NBA' ? 210 : league === 'NFL' ? 45 : 170);\n                                \n                                // Format the date and time\n                                const startTime = new Date(event.commence_time);\n                                const formattedDate = startTime.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' });\n                                const formattedTime = startTime.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });\n                                \n                                return {\n                                    id: index + 1,\n                                    homeTeam,\n                                    awayTeam,\n                                    homeOdds,\n                                    awayOdds,\n                                    homeSpread,\n                                    awaySpread,\n                                    totalPoints,\n                                    date: formattedDate,\n                                    time: formattedTime,\n                                    league: league\n                                };\n                            });\n                        }\n                    }\n                } catch (fallbackError) {\n                    console.error(\"Failed to fetch upcoming events:\", fallbackError);\n                }\n                \n                // If all else fails, use sports API to get teams and generate realistic matchups\n                try {\n                    const sportsUrl = `https://api.the-odds-api.com/v4/sports/?apiKey=${apiKey}`;\n                    const sportsResponse = await fetch(sportsUrl);\n                    \n                    if (sportsResponse.ok) {\n                        console.log(\"Successfully fetched sports data\");\n                        return generateRealisticGames(league);\n                    }\n                } catch (sportsError) {\n                    console.error(\"Failed to fetch sports data:\", sportsError);\n                }\n                \n                // As a last resort, fall back to sample games\n                return generateSampleGames(league);\n            } finally {\n                if (statusIndicator) {\n                    statusIndicator.style.display = 'none';\n                }\n            }\n        }\n\n        // Generate realistic games based on actual team names\n        function generateRealisticGames(league) {\n            // Real team names for various leagues\n            const realTeams = {\n                'NFL': [\n                    \"Arizona Cardinals\", \"Atlanta Falcons\", \"Baltimore Ravens\", \"Buffalo Bills\", \n                    \"Carolina Panthers\", \"Chicago Bears\", \"Cincinnati Bengals\", \"Cleveland Browns\", \n                    \"Dallas Cowboys\", \"Denver Broncos\", \"Detroit Lions\", \"Green Bay Packers\", \n                    \"Houston Texans\", \"Indianapolis Colts\", \"Jacksonville Jaguars\", \"Kansas City Chiefs\", \n                    \"Las Vegas Raiders\", \"Los Angeles Chargers\", \"Los Angeles Rams\", \"Miami Dolphins\", \n                    \"Minnesota Vikings\", \"New England Patriots\", \"New Orleans Saints\", \"New York Giants\", \n                    \"New York Jets\", \"Philadelphia Eagles\", \"Pittsburgh Steelers\", \"San Francisco 49ers\", \n                    \"Seattle Seahawks\", \"Tampa Bay Buccaneers\", \"Tennessee Titans\", \"Washington Commanders\"\n                ],\n                'NBA': [\n                    \"Atlanta Hawks\", \"Boston Celtics\", \"Brooklyn Nets\", \"Charlotte Hornets\", \n                    \"Chicago Bulls\", \"Cleveland Cavaliers\", \"Dallas Mavericks\", \"Denver Nuggets\", \n                    \"Detroit Pistons\", \"Golden State Warriors\", \"Houston Rockets\", \"Indiana Pacers\", \n                    \"Los Angeles Clippers\", \"Los Angeles Lakers\", \"Memphis Grizzlies\", \"Miami Heat\", \n                    \"Milwaukee Bucks\", \"Minnesota Timberwolves\", \"New Orleans Pelicans\", \"New York Knicks\", \n                    \"Oklahoma City Thunder\", \"Orlando Magic\", \"Philadelphia 76ers\", \"Phoenix Suns\", \n                    \"Portland Trail Blazers\", \"Sacramento Kings\", \"San Antonio Spurs\", \"Toronto Raptors\", \n                    \"Utah Jazz\", \"Washington Wizards\"\n                ],\n                'NHL': [\n                    \"Anaheim Ducks\", \"Arizona Coyotes\", \"Boston Bruins\", \"Buffalo Sabres\", \n                    \"Calgary Flames\", \"Carolina Hurricanes\", \"Chicago Blackhawks\", \"Colorado Avalanche\", \n                    \"Columbus Blue Jackets\", \"Dallas Stars\", \"Detroit Red Wings\", \"Edmonton Oilers\", \n                    \"Florida Panthers\", \"Los Angeles Kings\", \"Minnesota Wild\", \"Montreal Canadiens\", \n                    \"Nashville Predators\", \"New Jersey Devils\", \"New York Islanders\", \"New York Rangers\", \n                    \"Ottawa Senators\", \"Philadelphia Flyers\", \"Pittsburgh Penguins\", \"San Jose Sharks\", \n                    \"Seattle Kraken\", \"St. Louis Blues\", \"Tampa Bay Lightning\", \"Toronto Maple Leafs\", \n                    \"Vancouver Canucks\", \"Vegas Golden Knights\", \"Washington Capitals\", \"Winnipeg Jets\"\n                ],\n                'MLB': [\n                    \"Arizona Diamondbacks\", \"Atlanta Braves\", \"Baltimore Orioles\", \"Boston Red Sox\", \n                    \"Chicago Cubs\", \"Chicago White Sox\", \"Cincinnati Reds\", \"Cleveland Guardians\", \n                    \"Colorado Rockies\", \"Detroit Tigers\", \"Houston Astros\", \"Kansas City Royals\", \n                    \"Los Angeles Angels\", \"Los Angeles Dodgers\", \"Miami Marlins\", \"Milwaukee Brewers\", \n                    \"Minnesota Twins\", \"New York Mets\", \"New York Yankees\", \"Oakland Athletics\", \n                    \"Philadelphia Phillies\", \"Pittsburgh Pirates\", \"San Diego Padres\", \"San Francisco Giants\", \n                    \"Seattle Mariners\", \"St. Louis Cardinals\", \"Tampa Bay Rays\", \"Texas Rangers\", \n                    \"Toronto Blue Jays\", \"Washington Nationals\"\n                ],\n                'NCAAB': [\n                    \"Duke Blue Devils\", \"North Carolina Tar Heels\", \"Kentucky Wildcats\", \"Kansas Jayhawks\", \n                    \"Gonzaga Bulldogs\", \"Villanova Wildcats\", \"Michigan Wolverines\", \"UCLA Bruins\", \n                    \"Arizona Wildcats\", \"Baylor Bears\", \"Wisconsin Badgers\", \"Texas Longhorns\", \n                    \"Auburn Tigers\", \"Purdue Boilermakers\", \"Tennessee Volunteers\", \"Arkansas Razorbacks\", \n                    \"UConn Huskies\", \"USC Trojans\", \"Florida Gators\", \"Iowa Hawkeyes\", \n                    \"Michigan State Spartans\", \"Texas Tech Red Raiders\", \"Illinois Fighting Illini\", \"Ohio State Buckeyes\", \n                    \"Indiana Hoosiers\", \"Notre Dame Fighting Irish\", \"Creighton Bluejays\", \"Syracuse Orange\"\n                ],\n                'NCAAF': [\n                    \"Alabama Crimson Tide\", \"Georgia Bulldogs\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \n                    \"Clemson Tigers\", \"Notre Dame Fighting Irish\", \"Oklahoma Sooners\", \"Texas Longhorns\", \n                    \"LSU Tigers\", \"USC Trojans\", \"Penn State Nittany Lions\", \"Florida Gators\", \n                    \"Oregon Ducks\", \"Texas A&M Aggies\", \"Wisconsin Badgers\", \"Michigan State Spartans\", \n                    \"Iowa Hawkeyes\", \"Utah Utes\", \"Oklahoma State Cowboys\", \"Pittsburgh Panthers\", \n                    \"Wake Forest Demon Deacons\", \"Baylor Bears\", \"Ole Miss Rebels\", \"NC State Wolfpack\", \n                    \"Kentucky Wildcats\", \"Arkansas Razorbacks\", \"BYU Cougars\", \"Houston Cougars\"\n                ],\n                'PREMIER_LEAGUE': [\n                    \"Manchester City\", \"Liverpool\", \"Chelsea\", \"Arsenal\", \n                    \"Tottenham Hotspur\", \"Manchester United\", \"West Ham United\", \"Wolverhampton Wanderers\", \n                    \"Newcastle United\", \"Brighton & Hove Albion\", \"Crystal Palace\", \"Brentford\", \n                    \"Aston Villa\", \"Southampton\", \"Leicester City\", \"Everton\", \n                    \"Leeds United\", \"Burnley\", \"Watford\", \"Norwich City\"\n                ]\n            };\n\n            // Use real teams for selected league or default to placeholder teams\n            const leagueTeams = realTeams[league] || [\n                \"Team A\", \"Team B\", \"Team C\", \"Team D\", \n                \"Team E\", \"Team F\", \"Team G\", \"Team H\"\n            ];\n\n            // Game generation logic\n            const games = [];\n            const now = new Date();\n            const usedTeams = new Set();\n\n            // Generate 6-10 games for the selected league\n            const numGames = Math.floor(Math.random() * 5) + 6;\n\n            for (let i = 0; i < numGames; i++) {\n                let homeTeam, awayTeam;\n                \n                // Find two teams that haven't been used yet\n                do {\n                    homeTeam = leagueTeams[Math.floor(Math.random() * leagueTeams.length)];\n                } while (usedTeams.has(homeTeam) && usedTeams.size < leagueTeams.length - 1);\n                \n                do {\n                    awayTeam = leagueTeams[Math.floor(Math.random() * leagueTeams.length)];\n                } while (homeTeam === awayTeam || (usedTeams.has(awayTeam) && usedTeams.size < leagueTeams.length - 1));\n                \n                usedTeams.add(homeTeam);\n                usedTeams.add(awayTeam);\n\n                // Random date in next 7 days\n                const gameDate = new Date(now);\n                gameDate.setDate(now.getDate() + Math.floor(Math.random() * 7));\n                const formattedDate = gameDate.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' });\n                \n                // Random start time (mostly evening games)\n                const hour = Math.floor(Math.random() * 8) + 12; // 12pm to 8pm\n                const minute = Math.random() > 0.5 ? '00' : '30';\n                const period = hour >= 12 ? 'PM' : 'AM';\n                const displayHour = hour > 12 ? hour - 12 : hour;\n                const formattedTime = `${displayHour}:${minute} ${period}`;\n\n                // Generate realistic betting odds\n                const homeFavorite = Math.random() > 0.5;\n                const oddsValue = Math.floor(Math.random() * 250) + 110;\n                const homeOdds = homeFavorite ? `-${oddsValue}` : `+${oddsValue}`;\n                const awayOdds = homeFavorite ? `+${oddsValue}` : `-${oddsValue}`;\n                \n                // Generate spreads based on odds\n                const spreadValue = homeFavorite ? \n                    (Math.floor(oddsValue / 35) + 1.5) : \n                    -(Math.floor(oddsValue / 35) + 1.5);\n                const homeSpread = parseFloat(spreadValue.toFixed(1));\n                const awaySpread = -parseFloat(spreadValue.toFixed(1));\n                \n                // Generate total points based on league\n                let totalPoints;\n                switch(league) {\n                    case 'NBA':\n                        totalPoints = Math.floor(Math.random() * 40) + 210; // 210-250\n                        break;\n                    case 'NFL':\n                        totalPoints = Math.floor(Math.random() * 15) + 40; // 40-55\n                        break;\n                    case 'NHL':\n                        totalPoints = Math.floor(Math.random() * 3) + 5; // 5-8\n                        break;\n                    case 'MLB':\n                        totalPoints = Math.floor(Math.random() * 5) + 7; // 7-12\n                        break;\n                    case 'NCAAB':\n                        totalPoints = Math.floor(Math.random() * 40) + 130; // 130-170\n                        break;\n                    case 'NCAAF':\n                        totalPoints = Math.floor(Math.random() * 20) + 45; // 45-65\n                        break;\n                    default:\n                        totalPoints = Math.floor(Math.random() * 30) + 40; // 40-70\n                }\n\n                // Add the game\n                games.push({\n                    id: i + 1,\n                    homeTeam,\n                    awayTeam,\n                    homeOdds,\n                    awayOdds,\n                    homeSpread,\n                    awaySpread,\n                    totalPoints,\n                    date: formattedDate,\n                    time: formattedTime,\n                    league\n                });\n            }\n\n            console.log(`Generated ${games.length} realistic games for ${league}`);\n            return games;\n        }\n\n        // Initialize GPS location\n        function initializeGPS() {\n            const restrictedStates = new Set(JSON.parse(localStorage.getItem('restrictedStates') || '[]'));\n\n            try {\n                // Generate a random US state for demo purposes\n                const states = Object.keys(US_STATES);\n                const randomStateCode = states[Math.floor(Math.random() * states.length)];\n                const randomState = US_STATES[randomStateCode];\n\n                currentUserState = randomStateCode;\n                console.log(\"GPS location detected:\", randomState, `(${randomStateCode})`);\n\n                // Update UI elements if they exist\n                const locationText = document.getElementById('locationText');\n                const locationDot = document.querySelector('.location-dot');\n\n                if (locationText) {\n                    locationText.textContent = `${randomState}, USA`;\n                }\n\n                if (locationDot) {\n                    locationDot.style.backgroundColor = restrictedStates.has(randomStateCode) ? 'red' : 'var(--neon-green)';\n                }\n\n                // Check if current location is restricted\n                if (restrictedStates.has(randomStateCode)) {\n                    disableRealMoneyFeatures();\n                }\n            } catch (error) {\n                console.error('Geolocation error:', error);\n                fallbackLocationDisplay();\n            }\n        }\n\n        function fallbackLocationDisplay() {\n            // Display a random US state as fallback\n            const states = Object.keys(US_STATES);\n            const randomStateCode = states[Math.floor(Math.random() * states.length)];\n            const randomState = US_STATES[randomStateCode];\n\n            const locationText = document.getElementById('locationText');\n            const locationDot = document.querySelector('.location-dot');\n\n            if (locationText) locationText.textContent = `${randomState}, USA`;\n            if (locationDot) locationDot.style.backgroundColor = 'var(--neon-green';\n\n            currentUserState = randomStateCode;\n        }\n\n        function disableRealMoneyFeatures() {\n            // Add your code here to disable real money betting features\n            console.log(\"Real money features disabled due to location restrictions.\");\n\n            // Force fun bet mode\n            const funBetRadio = document.getElementById('funBet');\n            if (funBetRadio) {\n                funBetRadio.checked = true;\n\n                const realMoneyRadio = document.getElementById('realMoney');\n                if (realMoneyRadio) {\n                    realMoneyRadio.disabled = true;\n                }\n            }\n\n            // Disable payment methods\n            document.querySelectorAll('.payment-method').forEach(btn => {\n                btn.disabled = true;\n                btn.style.opacity = '0.5';\n            });\n\n            // Show message\n            const statusIndicator = document.getElementById('statusIndicator');\n            if (statusIndicator) {\n                statusIndicator.textContent = 'Real money betting is not available in your location. Fun bet mode only.';\n                statusIndicator.style.display = 'block';\n\n                setTimeout(() => {\n                    statusIndicator.style.display = 'none';\n                }, 5000);\n            }\n        }\n\n        function setupAllButtons() {\n            // Add player button\n            const addPlayerBtn = document.getElementById('addPlayerBtn');\n            if (addPlayerBtn) {\n                addPlayerBtn.addEventListener('click', addPlayer);\n            }\n\n            // Create pool button\n            const createPoolBtn = document.getElementById('createPoolBtn');\n            if (createPoolBtn) {\n                createPoolBtn.addEventListener('click', createPool);\n            }\n\n            // Test email button\n            const testEmailBtn = document.getElementById('testEmailBtn');\n            if (testEmailBtn) {\n                testEmailBtn.addEventListener('click', testEmailNotification);\n            }\n\n            // Clear selections button\n            const clearSelectionsBtn = document.getElementById('clearSelectionsBtn');\n            if (clearSelectionsBtn) {\n                clearSelectionsBtn.addEventListener('click', function() {\n                    trackedGames = [];\n                    updateGameTracking();\n                });\n            }\n\n            // Simulate results button\n            const simulateResultsBtn = document.getElementById('simulateResultsBtn');\n            if (simulateResultsBtn) {\n                simulateResultsBtn.addEventListener('click', simulateResults);\n            }\n\n            // Reset all button\n            const resetAllBtn = document.getElementById('resetAll');\n            if (resetAllBtn) {\n                resetAllBtn.addEventListener('click', resetAll);\n            }\n\n            // Age verification button\n            const verifyAgeBtn = document.getElementById('verifyAgeBtn');\n            if (verifyAgeBtn) {\n                verifyAgeBtn.addEventListener('click', verifyAge);\n            }\n\n            // Betting type radio buttons\n            const funBetRadio = document.getElementById('funBet');\n            const realMoneyRadio = document.getElementById('realMoney');\n            if (funBetRadio && realMoneyRadio) {\n                funBetRadio.addEventListener('change', function() {\n                    if (this.checked) {\n                        toggleBetType('fun');\n                    }\n                });\n\n                realMoneyRadio.addEventListener('change', function() {\n                    if (this.checked) {\n                        toggleBetType('real');\n                    }\n                });\n            }\n\n            // Clear prediction history button\n            const clearPredictionHistoryBtn = document.getElementById('clearPredictionHistoryBtn');\n            if (clearPredictionHistoryBtn) {\n                clearPredictionHistoryBtn.addEventListener('click', clearPredictionHistory);\n            }\n        }\n\n        // Shared functions that need to be globally accessible\n        window.removePick = removePick;\n\n        // Sample functions for implementation\n        function addPlayer() {\n            const nameInput = document.getElementById('playerNameInput');\n            const emailInput = document.getElementById('playerEmailInput');\n            const playersList = document.getElementById('playersList');\n\n            if (!nameInput || !playersList) return;\n\n            if (!nameInput.value.trim()) {\n                alert(\"Please enter a player name first!\");\n                return;\n            }\n\n            const playerName = nameInput.value.trim();\n            const playerEmail = emailInput.value.trim();\n\n            // Remove no players message if present\n            const noPlayersMessage = document.getElementById('noPlayersMessage');\n            if (noPlayersMessage) {\n                playersList.removeChild(noPlayersMessage);\n            }\n\n            // Create player box\n            const playerBox = document.createElement('div');\n            playerBox.className = 'player-box';\n            playerBox.setAttribute('data-player-id', Date.now());\n\n            playerBox.innerHTML = `\n                <div class=\"player-info\">\n                    <span class=\"player-name\">${playerName}</span>\n                    ${playerEmail ? `<span class=\"player-email\">${playerEmail}</span>` : ''}\n                    <span class=\"player-status\">Active</span>\n                </div>\n                <div class=\"player-actions\">\n                    <button class=\"terminal-button remove-player-btn\">Remove</button>\n                    <button class=\"terminal-button submit-picks-btn\">Submit Picks</button>\n                </div>\n                <div class=\"parlay-card\">\n                    <h4>${playerName}'s Picks</h4>\n                    <div class=\"parlay-card-content\"></div>\n                </div>\n            `;\n\n            playersList.appendChild(playerBox);\n\n            // Add event listeners to buttons\n            playerBox.querySelector('.remove-player-btn').addEventListener('click', function() {\n                if (confirm('Remove this player?')) {\n                    playerBox.remove();\n                    updatePlayerCount();\n\n                    // Add back no players message if no players left\n                    if (playersList.children.length === 0) {\n                        playersList.innerHTML = '<p id=\"noPlayersMessage\">No players added yet. Add players above.</p>';\n                    }\n                }\n            });\n\n            playerBox.querySelector('.submit-picks-btn').addEventListener('click', function() {\n                if (confirm('Submit picks? This cannot be undone.')) {\n                    this.disabled = true;\n                    this.textContent = 'Picks Submitted';\n                    playerBox.setAttribute('data-submitted', 'true');\n                }\n            });\n\n            // Clear inputs\n            nameInput.value = '';\n            emailInput.value = '';\n\n            // Update player count\n            updatePlayerCount();\n            updateGameTracking();\n        }\n\n        function updatePlayerCount() {\n            const playerCount = document.querySelectorAll('.player-box').length;\n            const currentPlayersElement = document.querySelector('.current-players');\n            const progressBar = document.querySelector('.player-progress');\n            const MAX_PLAYERS = 30;\n\n            if (currentPlayersElement) {\n                currentPlayersElement.textContent = `Players: ${playerCount}/${MAX_PLAYERS}`;\n            }\n\n            if (progressBar) {\n                // Update progress bar width based on player count\n                const percentage = (playerCount / MAX_PLAYERS) * 100;\n                progressBar.style.width = `${percentage}%`;\n\n                // Change color based on number of players\n                if (playerCount < 2) {\n                    progressBar.style.backgroundColor = '#ff4d4d'; // Red for below minimum\n                } else if (playerCount < 5) {\n                    progressBar.style.backgroundColor = '#ffaa00'; // Yellow for below recommended\n                } else if (playerCount > MAX_PLAYERS - 5) {\n                    progressBar.style.backgroundColor = '#ff5500'; // Orange for approaching max\n                } else {\n                    progressBar.style.backgroundColor = 'var(--neon-green)'; // Default color\n                }\n            }\n        }\n\n        function createPool() {\n            // Implementation would go here\n            alert('Pool created!');\n        }\n\n        function testEmailNotification() {\n            const testEmail = prompt(\"Enter email address to test notification:\");\n            if (testEmail) {\n                alert(`Test email would be sent to ${testEmail}`);\n            }\n        }\n\n        function simulateResults() {\n            alert('Results simulated!');\n        }\n\n        function resetAll() {\n            // Clear tracked games\n            trackedGames = [];\n            updateGameTracking();\n\n            // Reset form elements\n            const leagueSelect = document.getElementById('leagueSelect');\n            if (leagueSelect) leagueSelect.selectedIndex = 0;\n\n            const playersList = document.getElementById('playersList');\n            if (playersList) {\n                playersList.innerHTML = '<p id=\"noPlayersMessage\">No players added yet. Add players above.</p>';\n            }\n\n            // Reset player count\n            updatePlayerCount();\n\n            // Show message\n            const statusIndicator = document.getElementById('statusIndicator');\n            if (statusIndicator) {\n                statusIndicator.textContent = 'All settings and data have been reset.';\n                statusIndicator.style.display = 'block';\n\n                setTimeout(() => {\n                    statusIndicator.style.display = 'none';\n                }, 3000);\n            }\n        }\n\n        // Function to check and show age verification if needed\n        function checkAndShowAgeVerification() {\n            // Check if age verification is required and not already verified\n            if (localStorage.getItem('ageVerified') !== 'true') {\n                showAgeVerification();\n            }\n        }\n        \n        // Function to always show age verification modal\n        function showAgeVerification() {\n            const ageVerificationModal = document.getElementById('ageVerificationModal');\n            if (ageVerificationModal) {\n                // Make sure all other modals are hidden first\n                document.querySelectorAll('.modal-overlay').forEach(modal => {\n                    if (modal.id !== 'ageVerificationModal') {\n                        modal.style.display = 'none';\n                    }\n                });\n                \n                // Show age verification modal\n                ageVerificationModal.style.display = 'flex';\n                console.log(\"Age verification modal displayed at startup\");\n                \n                // Make sure the modal can't be closed except through verification\n                const closeButtons = ageVerificationModal.querySelectorAll('.close-modal');\n                closeButtons.forEach(button => {\n                    button.style.display = 'none';\n                });\n            }\n        }\n\n        function verifyAge() {\n            const birthDateInput = document.getElementById('birthDateInput');\n            if (!birthDateInput || !birthDateInput.value) {\n                alert('Please enter your birth date');\n                return false;\n            }\n\n            const birthDate = new Date(birthDateInput.value);\n            const today = new Date();\n            \n            // Basic validation - ensure date is not in the future and not too far in the past\n            if (birthDate > today) {\n                alert('Birth date cannot be in the future');\n                return false;\n            }\n            \n            if (birthDate.getFullYear() < 1900) {\n                alert('Please enter a valid birth date');\n                return false;\n            }\n            \n            let age = today.getFullYear() - birthDate.getFullYear();\n\n            // Adjust age if birthday hasn't occurred yet this year\n            if (today.getMonth() < birthDate.getMonth() || \n                (today.getMonth() === birthDate.getMonth() && today.getDate() < birthDate.getDate())) {\n                age--;\n            }\n\n            if (age >= 21) {\n                // Hide modal\n                const modal = document.getElementById('ageVerificationModal');\n                if (modal) {\n                    modal.style.display = 'none';\n                    \n                    // Show success message\n                    const statusIndicator = document.getElementById('statusIndicator');\n                    if (statusIndicator) {\n                        statusIndicator.textContent = 'Age verification successful - all features enabled';\n                        statusIndicator.style.display = 'block';\n                        statusIndicator.style.backgroundColor = 'rgba(0, 255, 0, 0.1)';\n                        setTimeout(() => {\n                            statusIndicator.style.display = 'none';\n                        }, 3000);\n                    }\n                }\n\n                // Store verification\n                localStorage.setItem('ageVerified', 'true');\n                \n                // Enable real money features if they were disabled\n                const realMoneyRadio = document.getElementById('realMoney');\n                if (realMoneyRadio) {\n                    realMoneyRadio.disabled = false;\n                }\n                \n                document.querySelectorAll('.payment-method').forEach(btn => {\n                    btn.disabled = false;\n                    btn.style.opacity = '1';\n                });\n                \n                return true;\n            } else {\n                alert('You must be 21 or older to use real money features.');\n\n                // Force fun bet mode\n                const funBetRadio = document.getElementById('funBet');\n                if (funBetRadio) {\n                    funBetRadio.checked = true;\n                }\n\n                disableRealMoneyFeatures();\n                \n                // Keep modal open but allow them to dismiss it after acknowledging\n                document.getElementById('ageVerificationModal').innerHTML = `\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h2>Age Restriction</h2>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>You must be 21 or older to use real money features.</p>\n                            <p>The application will continue in Fun Bet mode only.</p>\n                            <button id=\"continueAnyway\" class=\"terminal-button\">Continue Anyway</button>\n                        </div>\n                    </div>\n                `;\n                \n                // Set a timer to make sure user has time to read the message\n                let countdown = 3;\n                const continueButton = document.createElement('button');\n                continueButton.id = 'continueAnyway';\n                continueButton.className = 'terminal-button';\n                continueButton.textContent = `Continue Anyway (${countdown})`;\n                continueButton.disabled = true;\n                \n                document.querySelector('#ageVerificationModal .modal-body').appendChild(continueButton);\n                \n                const countdownInterval = setInterval(() => {\n                    countdown--;\n                    continueButton.textContent = `Continue Anyway (${countdown})`;\n                    \n                    if (countdown <= 0) {\n                        clearInterval(countdownInterval);\n                        continueButton.textContent = 'Continue Anyway';\n                        continueButton.disabled = false;\n                        \n                        continueButton.addEventListener('click', function() {\n                            document.getElementById('ageVerificationModal').style.display = 'none';\n                            \n                            // Store that user is under age to prevent future real money betting\n                            localStorage.setItem('underAge', 'true');\n                        });\n                    }\n                }, 1000);\n                \n                return false;\n            }\n        }\n\n        function toggleBetType(type) {\n            const isFunBet = type === 'fun';\n            console.log(`Switching to ${isFunBet ? 'Fun Bet' : 'Real Money'} mode`);\n\n            // Show age verification when switching to real money\n            if (!isFunBet && localStorage.getItem('ageVerified') !== 'true') {\n                document.getElementById('ageVerificationModal').style.display = 'block';\n            }\n\n            // Update payment methods visibility\n            const paymentMethods = document.querySelector('.payment-methods');\n            if (paymentMethods) {\n                paymentMethods.style.display = isFunBet ? 'none' : 'block';\n            }\n        }\n\n        // Set up payment method buttons\n        function setupPaymentMethodsHandlers() {\n            const paymentButtons = document.querySelectorAll('.payment-method');\n            const paymentModal = document.getElementById('paymentModal');\n            const paymentOverlay = document.querySelector('.payment-modal-overlay');\n            const closeModalBtn = document.querySelector('.close-payment-modal');\n            const savePaymentBtn = document.getElementById('savePaymentBtn');\n            const meetupFields = document.getElementById('meetupFields');\n\n            // Show payment modal when a payment method is clicked\n            if (paymentButtons && paymentButtons.length > 0) {\n                paymentButtons.forEach(button => {\n                    button.addEventListener('click', function() {\n                        const method = this.getAttribute('data-method');\n                        const modalTitle = document.getElementById('paymentModalTitle');\n\n                        if (modalTitle) {\n                            modalTitle.textContent = method.charAt(0).toUpperCase() + method.slice(1) + ' Payment Details';\n                        }\n\n                        // Show/hide meetup fields for hand-to-hand payments\n                        if (meetupFields) {\n                            meetupFields.style.display = method === 'handtohand' ? 'block' : 'none';\n                        }\n\n                        // Show modal\n                        if (paymentOverlay) paymentOverlay.style.display = 'block';\n                        if (paymentModal) paymentModal.style.display = 'block';\n                    });\n                });\n                console.log(\"Payment buttons initialized: \" + paymentButtons.length);\n            } else {\n                console.warn(\"Payment buttons not found\");\n            }\n\n            // Close modal button\n            if (closeModalBtn) {\n                closeModalBtn.addEventListener('click', function() {\n                    if (paymentOverlay) paymentOverlay.style.display = 'none';\n                    if (paymentModal) paymentModal.style.display = 'none';\n                });\n            }\n\n            // Save payment details\n            if (savePaymentBtn) {\n                savePaymentBtn.addEventListener('click', function() {\n                    const name = document.getElementById('paymentName')?.value || '';\n                    const account = document.getElementById('paymentAccount')?.value || '';\n                    const note = document.getElementById('paymentNote')?.value || '';\n\n                    if (!name || !account) {\n                        alert('Please fill in all required fields');\n                        return;\n                    }\n\n                    // For hand to hand, require location and time\n                    const isHandToHand = meetupFields?.style.display === 'block';\n                    if (isHandToHand) {\n                        const location = document.getElementById('meetupLocation')?.value || '';\n                        const date = document.getElementById('meetupDate')?.value || '';\n                        const time = document.getElementById('meetupTime')?.value || '';\n\n                        if (!location || !date || !time) {\n                            alert('Please fill in all meetup details');\n                            return;\n                        }\n                    }\n\n                    // Store payment details (in localStorage for this demo)\n                    const paymentDetails = {\n                        name,\n                        account,\n                        note,\n                        method: document.getElementById('paymentModalTitle')?.textContent?.split(' ')[0]?.toLowerCase() || '',\n                        timestamp: new Date().toISOString()\n                    };\n\n                    // Add meetup details if applicable\n                    if (isHandToHand) {\n                        paymentDetails.meetup = {\n                            location: document.getElementById('meetupLocation')?.value,\n                            date: document.getElementById('meetupDate')?.value,\n                            time: document.getElementById('meetupTime')?.value\n                        };\n                    }\n\n                    // Store payment info\n                    const paymentsHistory = JSON.parse(localStorage.getItem('paymentsHistory') || '[]');\n                    paymentsHistory.push(paymentDetails);\n                    localStorage.setItem('paymentsHistory', JSON.stringify(paymentsHistory));\n\n                    // Show success message\n                    alert('Payment details saved successfully!');\n\n                    // Close modal\n                    if (paymentOverlay) paymentOverlay.style.display = 'none';\n                    if (paymentModal) paymentModal.style.display = 'none';\n\n                    // Update UI\n                    updatePaymentDisplays();\n                    updatePlayerBettingCards();\n                });\n            }\n        }\n\n        function updatePaymentDisplays() {\n            // This would show payment status in player cards or other UI elements\n            console.log(\"Payment information updated in UI\");\n\n            // For demo purposes, we'll just update the pot display\n            const betAmount = parseFloat(document.getElementById('betAmount')?.value || 0);\n            const playerCount = document.querySelectorAll('.player-box').length || 0;\n\n            const totalPotElement = document.getElementById('totalPot');\n            const totalPayoutElement = document.getElementById('totalPayout');\n\n            if (totalPotElement) {\n                totalPotElement.textContent = `$${(betAmount * playerCount).toFixed(2)}`;\n            }\n\n            if (totalPayoutElement) {\n                // Simple calculation for demo\n                totalPayoutElement.textContent = `$${(betAmount * playerCount * 0.9).toFixed(2)}`;\n            }\n            \n            // Also make sure player cards are updated with payment info\n            updatePlayerBettingCards();\n        }\n\n        function updatePredictionHistory(specificLeague = null) {\n            const predictionHistoryTable = document.getElementById('predictionHistoryTable');\n            const predictionWinCount = document.getElementById('predictionWinCount');\n\n            if (!predictionHistoryTable || !predictionWinCount) return;\n\n            // Get all predictions from storage or generate sample ones if none exist\n            let predictions = JSON.parse(localStorage.getItem('predictionHistory') || '[]');\n\n            // If we have no predictions, generate some sample ones\n            if (predictions.length === 0) {\n                const leagues = ['NFL', 'NBA', 'NHL', 'MLB', 'NCAAF', 'NCAAB'];\n                const teams = {\n                    'NFL': ['Cardinals', 'Falcons', 'Ravens', 'Bills', 'Panthers', 'Bears'],\n                    'NBA': ['Hawks', 'Celtics', 'Nets', 'Hornets', 'Bulls', 'Cavaliers'],\n                    'NHL': ['Bruins', 'Sabres', 'Red Wings', 'Panthers', 'Canadiens', 'Senators'],\n                    'MLB': ['Yankees', 'Red Sox', 'Dodgers', 'Cubs', 'Astros', 'Braves'],\n                    'NCAAF': ['Alabama', 'Georgia', 'Ohio State', 'Michigan', 'Clemson', 'Notre Dame'],\n                    'NCAAB': ['Duke', 'North Carolina', 'Kentucky', 'Kansas', 'Gonzaga', 'Villanova']\n                };\n\n                // Generate some sample predictions\n                leagues.forEach(league => {\n                    const leagueTeams = teams[league] || ['Team A', 'Team B', 'Team C', 'Team D'];\n                    for (let i = 0; i < 5; i++) {\n                        const homeTeam = leagueTeams[Math.floor(Math.random() * leagueTeams.length)];\n                        let awayTeam;\n                        do {\n                            awayTeam = leagueTeams[Math.floor(Math.random() * leagueTeams.length)];\n                        } while (awayTeam === homeTeam);\n\n                        const prediction = Math.random() > 0.5 ? homeTeam : awayTeam;\n                        const correct = Math.random() > 0.4; // 60% win rate for predictions\n                        const result = correct ? prediction : (prediction === homeTeam ? awayTeam : homeTeam);\n\n                        predictions.push({\n                            league: league,\n                            homeTeam: homeTeam,\n                            awayTeam: awayTeam,\n                            prediction: prediction,\n                            result: result,\n                            odds: Math.random() > 0.5 ? '+' + (Math.floor(Math.random() * 300) + 100) : '-' + (Math.floor(Math.random() * 300) + 100),\n                            correct: correct,\n                            endTime: new Date(Date.now() - Math.floor(Math.random() * 7 * 24 * 60 * 60 * 1000)).toISOString() // Random time in the last week\n                        });\n                    }\n                });\n\n                // Save to storage\n                localStorage.setItem('predictionHistory', JSON.stringify(predictions));\n            }\n\n            // Filter by league if specified\n            if (specificLeague) {\n                predictions = predictions.filter(p => p.league === specificLeague);\n            }\n\n            // Clear existing rows\n            const tbody = predictionHistoryTable.querySelector('tbody');\n            tbody.innerHTML = '';\n\n            // Count wins\n            let winCount = 0;\n\n            // Add prediction rows\n            predictions.forEach(prediction => {\n                const row = tbody.insertRow();\n                row.className = prediction.correct ? 'win' : 'loss';\n\n                const gameCell = row.insertCell();\n                gameCell.textContent = `${prediction.homeTeam} vs ${prediction.awayTeam}`;\n\n                const predictionCell = row.insertCell();\n                predictionCell.textContent = prediction.prediction;\n\n                const resultCell = row.insertCell();\n                resultCell.textContent = prediction.correct ? 'Win' : 'Loss';\n\n                if (prediction.correct) {\n                    winCount++;\n                }\n            });\n\n            // Update win count display\n            predictionWinCount.textContent = `Wins: ${winCount} / ${predictions.length} (${predictions.length > 0 ? Math.round(winCount/predictions.length*100) : 0}%)`;\n\n            // Show league specific info if filtered\n            if (specificLeague) {\n                predictionWinCount.textContent += ` - ${specificLeague} League`;\n            }\n        }\n\n        function clearPredictionHistory() {\n            localStorage.removeItem('predictionHistory');\n            updatePredictionHistory();\n        }\n\n        function addPredictionToHistory(game, prediction, result, correct) {\n            const predictionHistory = JSON.parse(localStorage.getItem('predictionHistory') || '[]');\n            predictionHistory.push({ \n                league: game.league || 'Unknown',\n                homeTeam: game.homeTeam, \n                awayTeam: game.awayTeam, \n                prediction: prediction,\n                result: result,\n                odds: game.homeOdds,\n                correct: correct,\n                endTime: new Date().toISOString()\n            });\n            localStorage.setItem('predictionHistory', JSON.stringify(predictionHistory));\n            updatePredictionHistory();\n        }\n\n        // Display prediction history\n        function displayPredictionHistory() {\n            // Get all existing predictions\n            const predictions = JSON.parse(localStorage.getItem('predictionHistory') || '[]');\n            const predictionHistoryContent = document.getElementById('predictionHistoryTable');\n            const winCountElement = document.getElementById('predictionWinCount');\n\n            if (!predictionHistoryContent || !winCountElement) return;\n\n            const tbody = predictionHistoryContent.querySelector('tbody');\n            if (!tbody) return;\n\n            // Clear existing content\n            tbody.innerHTML = '';\n\n            // Calculate win percentage\n            const totalPredictions = predictions.length;\n            const correctPredictions = predictions.filter(p => p.correct).length;\n            const winPercentage = totalPredictions > 0 ? Math.round((correctPredictions / totalPredictions) * 100) : 0;\n\n            // Update win count display\n            winCountElement.textContent = `Wins: ${correctPredictions} / ${totalPredictions} (${winPercentage}%)`;\n\n            // Add rows for each prediction\n            predictions.forEach(prediction => {\n                const row = document.createElement('tr');\n                row.className = prediction.correct ? 'win' : 'loss';\n\n                row.innerHTML = `\n                    <td>${prediction.homeTeam} vs ${prediction.awayTeam}</td>\n                    <td>${prediction.prediction}</td>\n                    <td>${prediction.correct ? 'Win' : 'Loss'}</td>\n                `;\n\n                tbody.appendChild(row);\n            });\n        }\n        \n        // Setup sharing functionality\n        function setupSharingFunctionality() {\n            // Get share buttons\n            const shareGameBtn = document.getElementById('shareGameBtn');\n            const createLinkBtn = document.getElementById('createLinkBtn');\n            const startScreenShareBtn = document.getElementById('startScreenShareBtn');\n            const openChatBtn = document.getElementById('openChatBtn');\n            const copyUrlBtn = document.getElementById('copyUrlBtn');\n            const emailShareBtn = document.getElementById('emailShareBtn');\n            const smsShareBtn = document.getElementById('smsShareBtn');\n            const sendChatBtn = document.getElementById('sendChatBtn');\n            const shareChatInput = document.getElementById('shareChatInput');\n            \n            // Add event listeners to all share buttons\n            if (shareGameBtn) {\n                shareGameBtn.addEventListener('click', createShareableLink);\n            }\n            \n            if (createLinkBtn) {\n                createLinkBtn.addEventListener('click', createShareableLink);\n            }\n            \n            if (startScreenShareBtn) {\n                startScreenShareBtn.addEventListener('click', startScreenShare);\n            }\n            \n            if (openChatBtn) {\n                openChatBtn.addEventListener('click', openChatRoom);\n            }\n            \n            if (copyUrlBtn) {\n                copyUrlBtn.addEventListener('click', copyShareLink);\n            }\n            \n            if (emailShareBtn) {\n                emailShareBtn.addEventListener('click', shareViaEmail);\n            }\n            \n            if (smsShareBtn) {\n                smsShareBtn.addEventListener('click', shareViaSMS);\n            }\n            \n            if (sendChatBtn && shareChatInput) {\n                sendChatBtn.addEventListener('click', function() {\n                    sendChatMessage(shareChatInput.value);\n                    shareChatInput.value = '';\n                });\n                \n                shareChatInput.addEventListener('keypress', function(e) {\n                    if (e.key === 'Enter') {\n                        sendChatMessage(shareChatInput.value);\n                        shareChatInput.value = '';\n                    }\n                });\n            }\n            \n            // Check URL params for share link\n            checkForSharedLink();\n        }\n        \n        // Create a shareable link\n        function createShareableLink() {\n            console.log('Creating shareable link...');\n            \n            // Generate unique room ID if not already created\n            if (!roomId) {\n                roomId = 'room_' + Math.random().toString(36).substring(2, 15);\n                isHost = true;\n            }\n            \n            // Create the share URL with current game state\n            const gameState = {\n                league: document.getElementById('leagueSelect')?.value || '',\n                trackedGames: JSON.stringify(trackedGames),\n                players: Array.from(document.querySelectorAll('.player-box')).map(box => {\n                    return {\n                        name: box.querySelector('.player-name')?.textContent || '',\n                        email: box.querySelector('.player-email')?.textContent || '',\n                        submitted: box.getAttribute('data-submitted') === 'true'\n                    };\n                }),\n                roomId: roomId\n            };\n            \n            // Create URL with parameters\n            const baseUrl = window.location.href.split('?')[0];\n            const shareUrl = `${baseUrl}?share=true&room=${roomId}&state=${encodeURIComponent(JSON.stringify(gameState))}`;\n            \n            // Update and show share URL\n            const shareUrlElement = document.getElementById('shareUrl');\n            const shareUrlContainer = document.getElementById('shareUrlContainer');\n            \n            if (shareUrlElement && shareUrlContainer) {\n                shareUrlElement.textContent = shareUrl;\n                shareUrlContainer.style.display = 'block';\n            }\n            \n            // Initialize WebRTC if host\n            if (isHost) {\n                initializeWebRTCHost();\n            }\n            \n            // Show success message\n            const statusIndicator = document.getElementById('statusIndicator');\n            if (statusIndicator) {\n                statusIndicator.textContent = 'Shareable link created successfully!';\n                statusIndicator.style.display = 'block';\n                setTimeout(() => {\n                    statusIndicator.style.display = 'none';\n                }, 3000);\n            }\n            \n            return shareUrl;\n        }\n        \n        // Copy share link to clipboard\n        function copyShareLink() {\n            const shareUrl = document.getElementById('shareUrl').textContent;\n            \n            // Use clipboard API to copy\n            navigator.clipboard.writeText(shareUrl).then(() => {\n                alert('Link copied to clipboard!');\n            }).catch(err => {\n                console.error('Error copying link: ', err);\n                \n                // Fallback method\n                const tempInput = document.createElement('input');\n                document.body.appendChild(tempInput);\n                tempInput.value = shareUrl;\n                tempInput.select();\n                document.execCommand('copy');\n                document.body.removeChild(tempInput);\n                alert('Link copied to clipboard!');\n            });\n        }\n        \n        // Share via email\n        function shareViaEmail() {\n            const shareUrl = document.getElementById('shareUrl').textContent;\n            if (!shareUrl) {\n                createShareableLink();\n            }\n            \n            const subject = 'Join my Greek Survivor Game!';\n            const body = `Hey! I've created a betting pool and would like you to join. Click this link to join: ${shareUrl}`;\n            \n            window.open(`mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`);\n        }\n        \n        // Share via SMS\n        function shareViaSMS() {\n            const shareUrl = document.getElementById('shareUrl').textContent;\n            if (!shareUrl) {\n                createShareableLink();\n            }\n            \n            const body = `Join my Greek Survivor Game: ${shareUrl}`;\n            \n            // Try to use Web Share API first if available\n            if (navigator.share) {\n                navigator.share({\n                    title: 'Join my Greek Survivor Game!',\n                    text: 'I\\'ve created a betting pool and would like you to join.',\n                    url: shareUrl\n                }).catch(err => {\n                    console.error('Error sharing:', err);\n                    window.open(`sms:?body=${encodeURIComponent(body)}`);\n                });\n            } else {\n                // Fallback to SMS URI scheme\n                window.open(`sms:?body=${encodeURIComponent(body)}`);\n            }\n        }\n        \n        // Start screen share\n        function startScreenShare() {\n            if (screenShareActive) {\n                alert('Screen sharing is already active');\n                return;\n            }\n            \n            const screenShareContainer = document.getElementById('screenShareContainer');\n            if (screenShareContainer) {\n                screenShareContainer.classList.add('active');\n                screenShareContainer.style.display = 'block';\n            }\n            \n            // Get count element\n            const participantCount = document.getElementById('participantCount');\n            if (participantCount) {\n                participantCount.textContent = '0';\n            }\n            \n            // First check if the browser supports screen sharing\n            if (!navigator.mediaDevices || !navigator.mediaDevices.getDisplayMedia) {\n                alert('Screen sharing is not supported in your browser. Please use Chrome, Firefox, or Edge.');\n                \n                // Show simulated screen share for demo purposes\n                screenShareActive = true;\n                \n                const statusIndicator = document.getElementById('statusIndicator');\n                if (statusIndicator) {\n                    statusIndicator.textContent = 'Using simulated screen share (browser does not support actual screen sharing)';\n                    statusIndicator.style.display = 'block';\n                    setTimeout(() => {\n                        statusIndicator.style.display = 'none';\n                    }, 3000);\n                }\n                \n                // Add simulated participant after a delay\n                setTimeout(() => {\n                    if (participantCount) {\n                        participantCount.textContent = '1';\n                    }\n                    \n                    const participantsList = document.getElementById('shareParticipantsList');\n                    if (participantsList) {\n                        participantsList.innerHTML = '<div>Guest User (Connected)</div>';\n                    }\n                }, 2000);\n                \n                return;\n            }\n            \n            // Setup WebRTC for screen sharing\n            setupScreenShareRTC();\n            \n            screenShareActive = true;\n            \n            // Add event listeners for screen share controls\n            const closeScreenShareBtn = document.getElementById('closeScreenShareBtn');\n            const pauseScreenShareBtn = document.getElementById('pauseScreenShareBtn');\n            const stopScreenShareBtn = document.getElementById('stopScreenShareBtn');\n            \n            if (closeScreenShareBtn) {\n                closeScreenShareBtn.addEventListener('click', function() {\n                    screenShareContainer.style.display = 'none';\n                });\n            }\n            \n            if (pauseScreenShareBtn) {\n                pauseScreenShareBtn.addEventListener('click', function() {\n                    if (this.textContent === 'Pause') {\n                        this.textContent = 'Resume';\n                        // Pause all video tracks\n                        if (peerConnection) {\n                            peerConnection.getSenders().forEach(sender => {\n                                if (sender.track && sender.track.kind === 'video') {\n                                    sender.track.enabled = false;\n                                }\n                            });\n                        }\n                        \n                        // Update local preview if it exists\n                        const videoElement = document.querySelector('.local-preview video');\n                        if (videoElement && videoElement.srcObject) {\n                            videoElement.srcObject.getVideoTracks().forEach(track => {\n                                track.enabled = false;\n                            });\n                        }\n                    } else {\n                        this.textContent = 'Pause';\n                        // Resume all video tracks\n                        if (peerConnection) {\n                            peerConnection.getSenders().forEach(sender => {\n                                if (sender.track && sender.track.kind === 'video') {\n                                    sender.track.enabled = true;\n                                }\n                            });\n                        }\n                        \n                        // Update local preview if it exists\n                        const videoElement = document.querySelector('.local-preview video');\n                        if (videoElement && videoElement.srcObject) {\n                            videoElement.srcObject.getVideoTracks().forEach(track => {\n                                track.enabled = true;\n                            });\n                        }\n                    }\n                });\n            }\n            \n            if (stopScreenShareBtn) {\n                stopScreenShareBtn.addEventListener('click', function() {\n                    stopScreenShare();\n                });\n            }\n        }\n        \n        // Stop screen share\n        function stopScreenShare() {\n            screenShareActive = false;\n            \n            const screenShareContainer = document.getElementById('screenShareContainer');\n            if (screenShareContainer) {\n                screenShareContainer.classList.remove('active');\n                screenShareContainer.style.display = 'none';\n                \n                // Clear video preview if it exists\n                const localPreview = screenShareContainer.querySelector('.local-preview');\n                if (localPreview) {\n                    const videoElement = localPreview.querySelector('video');\n                    if (videoElement && videoElement.srcObject) {\n                        // Stop all tracks in the stream\n                        const tracks = videoElement.srcObject.getTracks();\n                        tracks.forEach(track => track.stop());\n                        videoElement.srcObject = null;\n                    }\n                    localPreview.remove();\n                }\n            }\n            \n            // Close RTCPeerConnection for screen sharing\n            if (peerConnection) {\n                // Close and remove all tracks\n                peerConnection.getSenders().forEach(sender => {\n                    if (sender.track) {\n                        sender.track.stop();\n                    }\n                });\n                \n                if (dataChannel) {\n                    dataChannel.close();\n                }\n                \n                peerConnection.close();\n                peerConnection = null;\n                dataChannel = null;\n            }\n            \n            // Reset participant info\n            const participantCount = document.getElementById('participantCount');\n            if (participantCount) {\n                participantCount.textContent = '0';\n            }\n            \n            const participantsList = document.getElementById('shareParticipantsList');\n            if (participantsList) {\n                participantsList.innerHTML = '';\n            }\n            \n            const statusIndicator = document.getElementById('statusIndicator');\n            if (statusIndicator) {\n                statusIndicator.textContent = 'Screen sharing stopped';\n                statusIndicator.style.display = 'block';\n                setTimeout(() => {\n                    statusIndicator.style.display = 'none';\n                }, 3000);\n            }\n        }\n        \n        // Setup WebRTC for screen sharing\n        function setupScreenShareRTC() {\n            // Create a new room if we don't have one already\n            if (!roomId) {\n                roomId = 'room_' + Math.random().toString(36).substring(2, 15);\n                isHost = true;\n            }\n            \n            console.log('Setting up WebRTC for screen sharing in room:', roomId);\n            \n            // Setup WebRTC peer connection\n            const configuration = {\n                iceServers: [\n                    { urls: 'stun:stun.l.google.com:19302' },\n                    { urls: 'stun:stun1.l.google.com:19302' },\n                    { \n                        urls: 'turn:numb.viagenie.ca',\n                        credential: 'muazkh',\n                        username: 'webrtc@live.com'\n                    }\n                ]\n            };\n            \n            // Request actual screen capture when starting screen share\n            if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n                navigator.mediaDevices.getDisplayMedia({\n                    video: true,\n                    audio: true\n                }).then(stream => {\n                    // Show local preview\n                    const screenShareContainer = document.getElementById('screenShareContainer');\n                    if (screenShareContainer) {\n                        const localPreview = document.createElement('div');\n                        localPreview.className = 'local-preview';\n                        localPreview.innerHTML = '<div class=\"preview-label\">Your Screen (Preview)</div>';\n                        \n                        const videoElement = document.createElement('video');\n                        videoElement.srcObject = stream;\n                        videoElement.autoplay = true;\n                        videoElement.muted = true;\n                        videoElement.style.width = '100%';\n                        videoElement.style.maxHeight = '100px';\n                        \n                        localPreview.appendChild(videoElement);\n                        screenShareContainer.querySelector('.screen-share-content').appendChild(localPreview);\n                    }\n                    \n                    // Create peer connection\n                    peerConnection = new RTCPeerConnection(configuration);\n                    \n                    // Add tracks from the screen share stream to the peer connection\n                    stream.getTracks().forEach(track => {\n                        peerConnection.addTrack(track, stream);\n                    });\n                    \n                    // Create data channel\n                    dataChannel = peerConnection.createDataChannel('screenShare');\n                    \n                    dataChannel.onopen = function() {\n                        console.log('Data channel opened');\n                        sendScreenShareData();\n                    };\n                    \n                    dataChannel.onmessage = function(event) {\n                        console.log('Message received:', event.data);\n                        processReceivedData(event.data);\n                    };\n                    \n                    // Create offer and set local description\n                    peerConnection.createOffer().then(offer => {\n                        return peerConnection.setLocalDescription(offer);\n                    }).then(() => {\n                        console.log('WebRTC offer created and set as local description');\n                        \n                        // In a real implementation, you would send this offer to the remote peer\n                        // via your signaling server. For this demo, we'll simulate a connection.\n                        simulateRTCConnection();\n                    }).catch(error => {\n                        console.error('Error creating offer:', error);\n                    });\n                    \n                    // Handle ICE candidates\n                    peerConnection.onicecandidate = event => {\n                        if (event.candidate) {\n                            console.log('New ICE candidate:', event.candidate);\n                            // In a real implementation, you would send this candidate to the remote peer\n                        }\n                    };\n                    \n                    // Track ended handler\n                    stream.getVideoTracks()[0].onended = function() {\n                        stopScreenShare();\n                    };\n                    \n                }).catch(error => {\n                    console.error('Error accessing display media:', error);\n                    alert('Unable to access your screen. Please make sure you have granted permission.');\n                });\n            } else {\n                alert('Screen sharing is not supported in your browser.');\n                stopScreenShare();\n            }\n            \n            function simulateRTCConnection() {\n                // Simulate remote connection after a delay\n                setTimeout(() => {\n                    // Update participant count\n                    const participantCount = document.getElementById('participantCount');\n                    if (participantCount) {\n                        participantCount.textContent = '1';\n                    }\n                    \n                    // Add to participants list\n                    const participantsList = document.getElementById('shareParticipantsList');\n                    if (participantsList) {\n                        participantsList.innerHTML = '<div>Guest User (Connected)</div>';\n                    }\n                    \n                    // Show notification\n                    const statusIndicator = document.getElementById('statusIndicator');\n                    if (statusIndicator) {\n                        statusIndicator.textContent = 'Guest user joined your screen share';\n                        statusIndicator.style.display = 'block';\n                        setTimeout(() => {\n                            statusIndicator.style.display = 'none';\n                        }, 3000);\n                    }\n                }, 2000);\n            }\n        }\n        \n        // Simulated function to send screen share data\n        function sendScreenShareData() {\n            if (!dataChannel || dataChannel.readyState !== 'open') return;\n            \n            // For demo, just send a timestamp\n            dataChannel.send(JSON.stringify({\n                type: 'screenUpdate',\n                timestamp: new Date().toISOString()\n            }));\n            \n            // Simulate periodic updates\n            setTimeout(sendScreenShareData, 5000);\n        }\n        \n        // Process received data\n        function processReceivedData(data) {\n            try {\n                const parsedData = JSON.parse(data);\n                console.log('Processed data:', parsedData);\n                \n                // Handle different message types\n                if (parsedData.type === 'chat') {\n                    addChatMessage(parsedData.sender, parsedData.message, false);\n                } else if (parsedData.type === 'gameUpdate') {\n                    updateGameState(parsedData.gameState);\n                }\n            } catch (e) {\n                console.error('Error processing received data:', e);\n            }\n        }\n        \n        // Open chat room\n        function openChatRoom() {\n            const shareChatContainer = document.getElementById('shareChatContainer');\n            if (shareChatContainer) {\n                if (shareChatContainer.style.display === 'none') {\n                    shareChatContainer.style.display = 'block';\n                    \n                    // Create share link if not already done\n                    if (!roomId) {\n                        createShareableLink();\n                    }\n                    \n                    // Focus on chat input\n                    const shareChatInput = document.getElementById('shareChatInput');\n                    if (shareChatInput) {\n                        shareChatInput.focus();\n                    }\n                } else {\n                    shareChatContainer.style.display = 'none';\n                }\n            }\n        }\n        \n        // Send chat message\n        function sendChatMessage(message) {\n            if (!message.trim()) return;\n            \n            console.log('Sending chat message:', message);\n            \n            // Add message to UI\n            addChatMessage('You', message, true);\n            \n            // Send via data channel if active\n            if (dataChannel && dataChannel.readyState === 'open') {\n                dataChannel.send(JSON.stringify({\n                    type: 'chat',\n                    sender: 'Host',\n                    message: message\n                }));\n            }\n            \n            // Simulate response for demo\n            setTimeout(() => {\n                addChatMessage('Guest', 'Thanks for sharing! I like those betting options.', false);\n            }, 2000);\n        }\n        \n        // Add chat message to UI\n        function addChatMessage(sender, message, isHost) {\n            const messagesContainer = document.getElementById('shareChatMessages');\n            if (!messagesContainer) return;\n            \n            const messageElement = document.createElement('div');\n            messageElement.className = `chat-message ${isHost ? 'host' : 'guest'}`;\n            messageElement.innerHTML = `\n                <span class=\"chat-name ${isHost ? 'host' : 'guest'}\">${sender}:</span> ${message}\n            `;\n            \n            messagesContainer.appendChild(messageElement);\n            messagesContainer.scrollTop = messagesContainer.scrollHeight;\n            \n            // Store message\n            chatMessages.push({\n                sender,\n                message,\n                isHost,\n                timestamp: new Date().toISOString()\n            });\n        }\n        \n        // Initialize WebRTC for host\n        function initializeWebRTCHost() {\n            // Basic WebRTC setup for the host\n            console.log('Initializing WebRTC host connection for room:', roomId);\n            \n            const configuration = {\n                iceServers: [\n                    { urls: 'stun:stun.l.google.com:19302' },\n                    { urls: 'stun:stun1.l.google.com:19302' }\n                ]\n            };\n            \n            peerConnection = new RTCPeerConnection(configuration);\n            \n            // Create data channel\n            dataChannel = peerConnection.createDataChannel('gameState');\n            \n            dataChannel.onopen = function() {\n                console.log('Data channel opened');\n                \n                // Send initial game state\n                sendGameState();\n            };\n            \n            dataChannel.onmessage = function(event) {\n                console.log('Message received:', event.data);\n                processReceivedData(event.data);\n            };\n            \n            // For simplicity in this demo, we're not implementing the full signaling process\n            console.log('WebRTC host initialized successfully');\n        }\n        \n        // Send game state through data channel\n        function sendGameState() {\n            if (!dataChannel || dataChannel.readyState !== 'open') return;\n            \n            const gameState = {\n                league: document.getElementById('leagueSelect')?.value || '',\n                trackedGames: trackedGames,\n                players: Array.from(document.querySelectorAll('.player-box')).map(box => {\n                    return {\n                        name: box.querySelector('.player-name')?.textContent || '',\n                        submitted: box.getAttribute('data-submitted') === 'true'\n                    };\n                })\n            };\n            \n            dataChannel.send(JSON.stringify({\n                type: 'gameUpdate',\n                gameState: gameState\n            }));\n        }\n        \n        // Update game state from received data\n        function updateGameState(gameState) {\n            console.log('Updating game state:', gameState);\n            \n            // Apply league selection\n            if (gameState.league) {\n                const leagueSelect = document.getElementById('leagueSelect');\n                if (leagueSelect) {\n                    leagueSelect.value = gameState.league;\n                    generateGreekGames(gameState.league);\n                }\n            }\n            \n            // Apply tracked games\n            if (gameState.trackedGames) {\n                trackedGames = gameState.trackedGames;\n                updateGameTracking();\n            }\n            \n            // Apply players\n            if (gameState.players && gameState.players.length > 0) {\n                // Clear existing players\n                const playersList = document.getElementById('playersList');\n                if (playersList) {\n                    playersList.innerHTML = '';\n                    \n                    // Add players from game state\n                    gameState.players.forEach(player => {\n                        const playerBox = document.createElement('div');\n                        playerBox.className = 'player-box';\n                        \n                        if (player.submitted) {\n                            playerBox.setAttribute('data-submitted', 'true');\n                        }\n                        \n                        playerBox.innerHTML = `\n                            <div class=\"player-info\">\n                                <span class=\"player-name\">${player.name}</span>\n                                ${player.email ? `<span class=\"player-email\">${player.email}</span>` : ''}\n                                <span class=\"player-status\">Active</span>\n                            </div>\n                            <div class=\"player-actions\">\n                                <button class=\"terminal-button remove-player-btn\">Remove</button>\n                                <button class=\"terminal-button submit-picks-btn\" ${player.submitted ? 'disabled' : ''}>\n                                    ${player.submitted ? 'Picks Submitted' : 'Submit Picks'}\n                                </button>\n                            </div>\n                            <div class=\"parlay-card\">\n                                <h4>${player.name}'s Picks</h4>\n                                <div class=\"parlay-card-content\"></div>\n                            </div>\n                        `;\n                        \n                        playersList.appendChild(playerBox);\n                    });\n                    \n                    // Update player count\n                    updatePlayerCount();\n                }\n            }\n        }\n        \n        // Check if accessed via shared link\n        function checkForSharedLink() {\n            const urlParams = new URLSearchParams(window.location.search);\n            const isShared = urlParams.get('share') === 'true';\n            \n            if (isShared) {\n                console.log('Accessed via shared link');\n                \n                roomId = urlParams.get('room');\n                isHost = false;\n                \n                // Try to load game state from URL\n                const stateParam = urlParams.get('state');\n                if (stateParam) {\n                    try {\n                        const gameState = JSON.parse(decodeURIComponent(stateParam));\n                        updateGameState(gameState);\n                        \n                        // Show notification\n                        const statusIndicator = document.getElementById('statusIndicator');\n                        if (statusIndicator) {\n                            statusIndicator.textContent = 'Connected to shared game session';\n                            statusIndicator.style.display = 'block';\n                            setTimeout(() => {\n                                statusIndicator.style.display = 'none';\n                            }, 3000);\n                        }\n                    } catch (e) {\n                        console.error('Error parsing shared game state:', e);\n                    }\n                }\n            }\n        }\n        // Update player betting cards with current game selections and payment info\n        function updatePlayerBettingCards() {\n            console.log(\"Updating player betting cards...\");\n\n            // Get all player cards\n            const playerBoxes = document.querySelectorAll('.player-box');\n            if (!playerBoxes || playerBoxes.length === 0) return;\n\n            // Get payment information from localStorage\n            const paymentsHistory = JSON.parse(localStorage.getItem('paymentsHistory') || '[]');\n            const betAmount = parseFloat(document.getElementById('betAmount')?.value || '0');\n            const betType = document.querySelector('input[name=\"bettingType\"]:checked')?.value || 'fun';\n            \n            // Update each player's card with the current tracked games and payment info\n            playerBoxes.forEach(playerBox => {\n                const parlayContent = playerBox.querySelector('.parlay-card-content');\n                if (!parlayContent) return;\n\n                // Skip if picks are already submitted\n                if (playerBox.getAttribute('data-submitted') === 'true') return;\n\n                // Clear existing content\n                parlayContent.innerHTML = '';\n\n                // Add payment information if it's real money bet\n                if (betType === 'real' && paymentsHistory.length > 0) {\n                    // Get the most recent payment\n                    const latestPayment = paymentsHistory[paymentsHistory.length - 1];\n                    \n                    const paymentInfo = document.createElement('div');\n                    paymentInfo.className = 'payment-info';\n                    paymentInfo.innerHTML = `\n                        <div class=\"payment-details\">\n                            <p><strong>Account Name:</strong> ${latestPayment.name || 'Not specified'}</p>\n                            <p><strong>Payment Method:</strong> ${latestPayment.method || 'Not specified'}</p>\n                            <p><strong>Account Details:</strong> ${latestPayment.account || 'Not specified'}</p>\n                            <p><strong>Amount:</strong> $${betAmount.toFixed(2)}</p>\n                            <p><strong>Status:</strong> Pending</p>\n                            ${latestPayment.meetup ? `<p><strong>Meetup:</strong> ${latestPayment.meetup.location} on ${latestPayment.meetup.date} at ${latestPayment.meetup.time}</p>` : ''}\n                        </div>\n                    `;\n                    \n                    parlayContent.appendChild(paymentInfo);\n                }\n\n                // Add tracked games\n                if (trackedGames.length === 0) {\n                    if (parlayContent.childElementCount === 0) {\n                        parlayContent.innerHTML = '<p>No picks yet</p>';\n                    }\n                    return;\n                }\n\n                // Add each tracked game to the player's card\n                trackedGames.forEach((game, index) => {\n                    const gameItem = document.createElement('div');\n                    gameItem.className = 'parlay-item';\n\n                    // Different display for prop bets vs regular games\n                    if (game.isPropBet) {\n                        gameItem.innerHTML = `\n                            <span>${game.propQuestion}: ${game.option} (${game.odds})</span>\n                            <button class=\"remove-parlay-bet\" onclick=\"removePick(${index})\">×</button>\n                        `;\n                    } else if (game.game) {\n                        let betDetails = '';\n                        if (game.betType === 'ML') {\n                            betDetails = `${game.team} ML (${game.odds})`;\n                        } else if (game.betType === 'SPREAD') {\n                            betDetails = `${game.team} ${game.value} (${game.odds})`;\n                        } else if (game.betType === 'OVER') {\n                            betDetails = `OVER ${game.value} (${game.odds})`;\n                        } else if (game.betType === 'UNDER') {\n                            betDetails = `UNDER ${game.value} (${game.odds})`;\n                        }\n\n                        gameItem.innerHTML = `\n                            <span>${game.game.homeTeam} vs ${game.game.awayTeam}: ${betDetails}</span>\n                            <button class=\"remove-parlay-bet\" onclick=\"removePick(${index})\">×</button>\n                        `;\n                    }\n\n                    parlayContent.appendChild(gameItem);\n                });\n            });\n        }\n    </script>",
            "<script>\n        // Super Admin Modal Functionality\n        document.addEventListener('DOMContentLoaded', function() {\n            const licenseManagementBtn = document.getElementById('licenseManagementBtn');\n            const superAdminModal = document.getElementById('superAdminModal');\n            const closeSuperAdminModalBtn = document.getElementById('closeSuperAdminModalBtn');\n            const superAdminContent = document.getElementById('superAdminContent');\n            \n            if (licenseManagementBtn) {\n                licenseManagementBtn.addEventListener('click', function(e) {\n                    e.preventDefault();\n                    \n                    // Fetch the content from super-admin.html\n                    fetch('super-admin.html')\n                        .then(response => response.text())\n                        .then(html => {\n                            // Parse the HTML to extract the body content\n                            const parser = new DOMParser();\n                            const doc = parser.parseFromString(html, 'text/html');\n                            \n                            // Get the content\n                            const containerContent = doc.querySelector('.container').innerHTML;\n                            \n                            // Insert the content into our modal\n                            superAdminContent.innerHTML = `<div class=\"container\">${containerContent}</div>`;\n                            \n                            // Show the modal\n                            superAdminModal.style.display = 'flex';\n                            \n                            // Initialize any scripts that might be needed\n                            setTimeout(() => {\n                                if (typeof SuperAdmin !== 'undefined') {\n                                    // Execute any initialization code\n                                    const scriptTags = doc.querySelectorAll('script:not([src])');\n                                    scriptTags.forEach(script => {\n                                        if (script.textContent.trim() !== '') {\n                                            try {\n                                                eval(script.textContent);\n                                            } catch (e) {\n                                                console.error('Error executing script:', e);\n                                            }\n                                        }\n                                    });\n                                }\n                            }, 500);\n                        })\n                        .catch(error => {\n                            console.error('Error loading super-admin.html:', error);\n                            superAdminContent.innerHTML = '<p>Error loading content. Please try again.</p>';\n                            superAdminModal.style.display = 'flex';\n                        });\n                });\n            }\n            \n            if (closeSuperAdminModalBtn) {\n                closeSuperAdminModalBtn.addEventListener('click', function() {\n                    superAdminModal.style.display = 'none';\n                });\n            }\n            \n            // Close modal if clicked outside content\n            superAdminModal.addEventListener('click', function(e) {\n                if (e.target === superAdminModal) {\n                    superAdminModal.style.display = 'none';\n                }\n            });\n            \n            // Load Super Admin JS when needed\n            document.getElementById('licenseManagementBtn').addEventListener('click', function() {\n                if (typeof SuperAdmin === 'undefined') {\n                    const script = document.createElement('script');\n                    script.src = 'super-admin.js';\n                    document.head.appendChild(script);\n                }\n            });\n        });\n    </script>"
          ]
        },
        {
          "alias": false,
          "_styles": {
            "padding-top": "(@paddingTop * 1rem)",
            "padding-bottom": "(@paddingBottom * 1rem)",
            "overflow": "hidden",
            "& when (@bg-type = \"color\")": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = \"image\")": {
              "background-image": "url(@bg-value)",
              "& when (@overlay)": {
                ".mbr-overlay": {
                  "background": "@overlayColor",
                  "opacity": "@overlayOpacity"
                }
              }
            },
            "& when (@fullWidth)": {
              ".container-fluid": {
                "padding": "0 28px",
                "@media (max-width: 992px)": {
                  "padding": "0 16px"
                },
                "@media (max-width: 768px)": {
                  "padding": "0 14px"
                }
              }
            },
            ".container": {
              "@media (max-width: 992px)": {
                "padding": "0 16px"
              },
              "@media (max-width: 768px)": {
                "padding": "0 14px"
              }
            },
            ".title-wrapper": {
              ".mbr-section-title": {
                "margin-bottom": "100px",
                "@media (max-width: 992px)": {
                  "margin-bottom": "32px"
                }
              }
            },
            ".embla__slide": {
              "display": "flex",
              "justify-content": "center",
              "position": "relative",
              "min-width": "380px",
              "max-width": "380px",
              "@media (max-width: 767px)": {
                "min-width": "100%",
                "max-width": "100%"
              },
              ".slide-content": {
                "width": "100%",
                ".item-wrapper": {
                  "display": "flex",
                  "flex-direction": "column",
                  "justify-content": "space-between",
                  "height": "100%",
                  "position": "relative",
                  "padding": "20px 25px",
                  "border-radius": "0 !important",
                  "background-color": "@card",
                  "&::before": {
                    "content": "''",
                    "position": "absolute",
                    "top": "0",
                    "left": "0",
                    "width": "100%",
                    "height": "100%",
                    "border": "2px solid @card",
                    "transform": "rotate(-5deg)",
                    "pointer-events": "none"
                  },
                  ".item-content": {
                    "position": "relative",
                    "z-index": "1",
                    "margin-bottom": "145px",
                    "@media (max-width: 992px)": {
                      "margin-bottom": "32px"
                    },
                    ".mbr-number": {
                      "margin-bottom": "16px",
                      "opacity": ".5"
                    },
                    ".item-title": {
                      "margin-bottom": "0"
                    }
                  }
                }
              }
            },
            ".embla__button--next, .embla__button--prev": {
              "display": "flex"
            },
            ".embla__button": {
              "bottom": "0",
              "width": "50px",
              "height": "50px",
              "margin-top": "-1.5rem",
              "font-size": "22px",
              "background-color": "@primaryColor !important",
              "color": "@infoColor !important",
              "border": "none",
              "border-radius": "50%",
              "transition": "all 0.3s",
              "position": "absolute",
              "display": "flex",
              "justify-content": "center",
              "align-items": "center",
              "opacity": "1 !important",
              "& when not (@arrows)": {
                "display": "none"
              },
              "& when not (@arrowsMobile)": {
                "@media (max-width: 768px)": {
                  "display": "none"
                }
              },
              "&:hover": {
                "opacity": ".7 !important"
              },
              "&.embla__button--prev": {
                "right": "7rem",
                "margin-left": "2.5rem"
              },
              "&.embla__button--next": {
                "right": "0",
                "margin-right": "2.5rem"
              }
            },
            ".embla": {
              "position": "relative",
              "width": "100%",
              "& when (@arrows)": {
                "padding-bottom": "5rem"
              }
            },
            ".embla__viewport": {
              "width": "100%",
              "margin-right": "1rem"
            },
            ".embla__viewport.is-draggable": {
              "cursor": "grab"
            },
            ".embla__viewport.is-dragging": {
              "cursor": "grabbing"
            },
            ".embla__container": {
              "display": "flex",
              "user-select": "none",
              "-webkit-touch-callout": "none",
              "-khtml-user-select": "none",
              "-webkit-tap-highlight-color": "transparent"
            },
            ".mbr-section-title": {
              "color": "#03d7f5",
              "text-align": "center"
            },
            ".mbr-number": {
              "color": "#f1f1f1"
            },
            ".item-title": {
              "color": "#f1f1f1"
            },
            ".item-title, .mbr-section-btn": {
              "color": "#aef800"
            }
          },
          "_name": "slider01",
          "_sourceTheme": "legalm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"slider01 mbr-embla legalm5\" group=\"Sliders & Galleries\" plugins=\"embla\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\" checked>\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"10\" step=\"1\" value=\"10\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"10\" step=\"1\" value=\"0\">\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" name=\"showTitle\" title=\"Title\">\n        <header>Carousel</header>\n        <input type=\"checkbox\" title=\"Loop\" name=\"loop\">\n        <input type=\"checkbox\" title=\"Draggable\" name=\"draggable\" checked>\n        <input type=\"checkbox\" name=\"arrows\" title=\"Arrows\">\n        <input type=\"checkbox\" name=\"arrowsMobile\" title=\"Mobile Arrows\" condition=\"arrows\">\n        <header>Cards</header>\n        <input type=\"range\" name=\"gap\" title=\"Gap\" min=\"0\" max=\"10\" step=\"1\" value=\"0\">\n        <input type=\"checkbox\" title=\"Card Title\" name=\"showCardTitle\" checked>\n        <input type=\"checkbox\" title=\"Number\" name=\"showNumber\">\n        <input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\">\n        <input type=\"color\" name=\"card\" title=\"Card BG\" value=\"#5a1ddd\">\n        <header>Background</header>\n        <fieldset type=\"background\" name=\"bg\" parallax required>\n            <input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/leonardo-phoenix-10-create-logo-for-my-game-called-thr-greek-s-1crop.jpg\" selected>\n            <input type=\"color\" title=\"Color\" value=\"#f1f1f1\">\n        </fieldset>\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\">\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#f1f1f1\" condition=\"overlay && bg.type == 'image'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.1\" condition=\"overlay && bg.type == 'image'\">\n    </mbr-parameters>\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type !== 'color'\"></div>\n\n    <div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"title-wrapper\">\n                    <h2 class=\"mbr-section-title mbr-fonts-style\" mbr-theme-style=\"display-7\" mbr-if=\"showTitle\" data-app-selector=\".mbr-section-title\"><b>&nbsp;</b><br><b><br></b><br><br><b><br></b></h2>\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"embla\" data-loop=\"{{loop}}\" data-auto-play=\"{{autoplay}}\" data-auto-play-interval=\"{{interval}}\" data-draggable=\"{{draggable}}\" data-skip-snaps=\"true\" data-align=\"center\" data-contain-scroll=\"trimSnaps\">\n                    <div class=\"embla__viewport\">\n                        <div class=\"embla__container\">\n                            <div class=\"embla__slide slider-image item features-without-image active\" mbr-style=\"{'margin-left': gap + 'rem', 'margin-right': gap + 'rem'}\">\n                                <div class=\"slide-content\">\n                                    <div class=\"item-wrapper\">\n                                        <div class=\"item-content\">\n                                            <p class=\"mbr-number mbr-fonts-style\" mbr-if=\"showNumber\" mbr-theme-style=\"display-7\" data-app-selector=\".mbr-number\">\n                                                (1)\n                                            </p>\n                                            <h4 class=\"item-title mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".item-title, .mbr-section-btn\" mbr-if=\"showCardTitle\">&nbsp;Thank you For Trying our Game. Happy Betting !!!                                 Remember bet Responsibly !!!!!!!!                        National Problem Gambling Helpline (1-800-GAMBLER) is  operated by the National Council on Problem Gambling.</h4>\n                                        </div>\n                                        <div class=\"mbr-section-btn item-footer\" mbr-if=\"showButtons\" data-toolbar=\"-mbrBtnMove,-mbrBtnAdd\" mbr-buttons mbr-theme-style=\"display-7\"><a href=\"index.html\" class=\"btn item-btn btn-primary\" data-app-placeholder=\"Type Text\">\n                                                <span class=\"mobi-mbri mobi-mbri-right mbr-iconfont mbr-iconfont-btn\"></span>\n                                                BACK TO HOME</a></div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \n                            \n                            \n                            \n                            \n                        </div>\n                    </div>\n                    <button class=\"embla__button embla__button--prev\">\n                        <span class=\"mobi-mbri mobi-mbri-arrow-prev mbr-iconfont\" aria-hidden=\"true\"></span>\n                        <span class=\"sr-only visually-hidden visually-hidden visually-hidden\">Previous</span>\n                    </button>\n                    <button class=\"embla__button embla__button--next\">\n                        <span class=\"mobi-mbri mobi-mbri-arrow-next mbr-iconfont\" aria-hidden=\"true\"></span>\n                        <span class=\"sr-only visually-hidden visually-hidden visually-hidden\">Next</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>",
          "_anchor": "slider01-o",
          "_isUserblock": true,
          "_cid": "uFtniEGM1i",
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        }
      ]
    },
    "page6.html": {
      "settings": {
        "title": "OGSYNTHIA",
        "order": "3"
      },
      "components": [
        {
          "alias": false,
          "_styles": {
            ".navbar-dropdown": {
              "& when not (@transparent)": {
                "background-color": "@menuBgColor !important"
              },
              "& when (@transparent)": {
                "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
              },
              "padding": "0",
              "& when (@sticky)": {
                "position": "absolute !important"
              }
            },
            "background-color": "transparent",
            ".navbar.navbar-expand-lg .dropdown": {
              ".dropdown-menu": {
                "& when not (@transparent)": {
                  "background-color": "@menuBgColor !important"
                },
                "& when (@transparent)": {
                  "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
                },
                ".dropdown-submenu": {
                  "margin": "0",
                  "left": "100%"
                },
                "background": "@menuBgColor"
              }
            },
            ".menu_box": {
              "flex-wrap": "nowrap",
              "@media (max-width: 991px)": {
                ".navbar.opened, .navbar-collapse": {
                  "background-color": "@menuBgColor !important",
                  "transition": "all 0s ease 0s"
                },
                "flex-direction": "column",
                "align-items": "flex-start"
              }
            },
            "& when not (@sticky)": {
              ".navbar-dropdown": {
                "position": "relative !important"
              }
            },
            "& when (@sticky)": {
              "z-index": "1000",
              "width": "100%",
              "nav.navbar": {
                "position": "fixed",
                "padding-top": "1rem",
                "padding-bottom": "1rem"
              }
            },
            ".icons-menu-main": {
              "display": "flex",
              "flex-wrap": "wrap",
              "min-width": "150px",
              "margin-left": "24px",
              "@media (max-width: 991px)": {
                "min-width": "auto",
                "max-width": "100%",
                "margin": "1rem 0 1rem 1rem"
              }
            },
            ".mbr-section-btn-main": {
              "@media (max-width: 991px)": {
                "margin-top": "1rem"
              },
              ".btn": {
                "margin": "8px",
                "min-width": "120px",
                "white-space": "nowrap"
              }
            },
            ".btn": {
              "min-height": "auto",
              "box-shadow": "none",
              "margin-top": "0",
              "&:hover": {
                "box-shadow": "none"
              }
            },
            ".nav-item": {
              "margin": "4px 0",
              "@media (min-width: 992px)": {
                "margin": "4px 40px 4px 0"
              },
              "& when (@showLogo), (@showBrand)": {
                "@media (min-width: 992px)": {
                  "margin": "4px 0"
                }
              },
              "@media (max-width: 991px)": {
                "margin": "0 !important"
              },
              ".nav-link": {
                "display": "flex",
                "justify-content": "center",
                "padding": "12px",
                "transition": "all 0.3s ease-out",
                "border-radius": "4px !important",
                "border": "1px solid transparent",
                "position": "relative",
                "opacity": "1",
                "@media (max-width: 992px)": {
                  "justify-content": "flex-start"
                },
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "bottom": "-10px",
                  "width": "0",
                  "height": "2px",
                  "background-color": "@itemsActive",
                  "transition": "all 0.3s ease-out"
                },
                "&:hover, &:focus": {
                  "background-color": "@itemsBg",
                  "color": "@itemsActive !important",
                  "&::before": {
                    "width": "80%"
                  }
                }
              }
            },
            ".dropdown-menu": {
              "border-radius": "0",
              "box-shadow": "none",
              "text-align": "left",
              "@media (min-width: 992px)": {
                "padding": "18px 34px 22px",
                "min-width": "250px",
                "top": "auto !important",
                "left": "-40px !important",
                "&.dropdown-submenu": {
                  "left": "215px !important",
                  "top": "-45% !important"
                }
              }
            },
            "@media (max-width: 991px)": {
              ".dropdown-menu .dropdown-toggle[data-toggle=\"dropdown-submenu\"]::after, .link.dropdown-toggle::after": {
                "display": "inline-block",
                "width": "7px",
                "height": "7px",
                "margin-left": ".5rem",
                "margin-bottom": "2px",
                "content": "\"\"",
                "border": "2px solid",
                "border-left": "none",
                "border-top": "none",
                "transform": "rotate(-45deg)",
                "right": "15px",
                "position": "absolute",
                "margin-top": "-2px"
              },
              ".show.dropdown-toggle[aria-expanded=\"true\"]::after": {
                "transform": "rotate(45deg)",
                "margin-top": "-4px"
              },
              ".offcanvas_box": {
                "display": "none"
              }
            },
            ".dropdown-item": {
              "border": "none",
              "font-weight": "300 !important"
            },
            ".nav-dropdown .link": {
              "font-weight": "400 !important",
              "padding": "0 !important",
              "margin": "0 !important"
            },
            ".nav-dropdown .link.dropdown-toggle::after": {
              "margin-left": "0.5rem",
              "margin-top": "0"
            },
            ".container": {
              "display": "flex",
              "margin": "auto"
            },
            ".iconfont-wrapper": {
              "color": "@iconsColor",
              "font-size": "26px",
              "margin-right": "10px",
              "margin-bottom": "5px",
              "&:last-child": {
                "margin-right": "0"
              },
              "transition": "all 0.3s ease-in-out",
              "&:hover": {
                ".mbr-iconfont": {
                  "opacity": ".7"
                }
              }
            },
            ".navbar-nav": {
              "@media (min-width: 992px)": {
                "margin": "0"
              }
            },
            ".dropdown-menu, .navbar.opened": {
              "background-color": "@transparent !important"
            },
            ".nav-item:focus, .nav-link:focus": {
              "outline": "none"
            },
            ".dropdown .dropdown-menu .dropdown-item": {
              "width": "auto",
              "transition": "all 0.25s ease-in-out",
              "&::after": {
                "right": "0.5rem"
              },
              ".mbr-iconfont": {
                "margin-right": "0.5rem",
                "vertical-align": "sub",
                "&:before": {
                  "display": "inline-block",
                  "transform": "scale(1, 1)",
                  "transition": "all 0.25s ease-in-out"
                }
              }
            },
            ".collapsed": {
              ".dropdown-menu .dropdown-item:before": {
                "display": "none"
              },
              ".dropdown .dropdown-menu .dropdown-item": {
                "padding": "0.235em 1.5em 0.235em 1.5em !important",
                "transition": "none",
                "margin": "0 !important"
              }
            },
            ".navbar": {
              "min-height": "70px",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "border-bottom-width": "0",
              "@media (max-width: 992px)": {
                "min-height": "30px",
                "max-height": "none"
              },
              "&:not(.navbar-short)": {},
              "&.opened": {
                "transition": "all 0.3s"
              },
              ".dropdown-item": {
                "padding": "0",
                "margin": "8px 0"
              },
              ".navbar-logo img": {
                "max-width": "62px",
                "min-height": "62px",
                "object-fit": "contain",
                "border-radius": "100% !important"
              },
              ".navbar-collapse": {
                "justify-content": "center",
                "& when (@showLogo), (@showBrand)": {
                  "justify-content": "flex-end"
                },
                "z-index": "1"
              },
              "&.collapsed": {
                "justify-content": "center",
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto"
                  }
                },
                "ul.navbar-nav": {
                  "li": {
                    "margin": "auto"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0.25rem 1.5rem",
                  "text-align": "left"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "@media (max-width: 991px)": {
                ".nav-item": {
                  "padding": ".5rem 0"
                },
                ".navbar-collapse": {
                  "padding": "34px 0",
                  "border-radius": "16px",
                  "width": "100%"
                },
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  "padding": "6px 0 6px 15px",
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto",
                    "margin-top": "-0.4rem"
                  }
                },
                ".navbar-logo": {
                  "img": {
                    "height": "3rem !important"
                  }
                },
                "ul.navbar-nav": {
                  "overflow": "hidden",
                  "li": {
                    "margin": "0"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0 !important",
                  "margin": "0",
                  "margin-top": "8px",
                  "text-align": "left"
                },
                ".navbar-brand": {
                  "flex-shrink": "initial",
                  "flex-basis": "auto",
                  "word-break": "break-word",
                  "padding-right": "0",
                  "width": "100%",
                  "justify-content": "space-between"
                },
                ".navbar-toggler": {
                  "flex-basis": "auto"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "&.navbar-short": {
                "min-height": "60px",
                ".navbar-logo": {
                  "img": {
                    "height": "2.5rem !important"
                  }
                },
                ".navbar-brand": {
                  "min-height": "60px",
                  "padding": "0"
                }
              }
            },
            ".navbar-brand": {
              "min-height": "70px",
              "flex-shrink": "0",
              "align-items": "center",
              "margin-right": "0",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "word-break": "break-word",
              "z-index": "1",
              ".navbar-caption": {
                "line-height": "inherit !important",
                "font-weight": "400"
              },
              ".navbar-logo a": {
                "outline": "none"
              }
            },
            ".dropdown-item.active, .dropdown-item:active": {
              "background-color": "transparent"
            },
            ".navbar-expand-lg .navbar-nav .nav-link": {
              "padding": "6px 16px !important"
            },
            ".nav-dropdown .link.dropdown-toggle": {
              "margin-right": "1.667em",
              "&[aria-expanded=\"true\"]": {
                "margin-right": "0",
                "padding": "0.667em 1.667em"
              }
            },
            ".navbar .dropdown.open > .dropdown-menu": {
              "display": "block"
            },
            "ul.navbar-nav": {
              "flex-wrap": "wrap",
              "padding": "0"
            },
            ".navbar-buttons": {
              "text-align": "center",
              "min-width": "170px"
            },
            "button.navbar-toggler": {
              "outline": "none",
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "cursor": "pointer",
              "transition": "all 0.2s",
              "position": "relative",
              "align-self": "center",
              "color": "@menuBgColor",
              "background": "@hamburger",
              ".hamburger span": {
                "position": "absolute",
                "right": "10px",
                "margin-top": "14px",
                "width": "26px",
                "height": "2px",
                "border-right": "5px",
                "background-color": "@hamburgerColor",
                "&:nth-child(1)": {
                  "top": "0",
                  "transition": "all 0.2s"
                },
                "&:nth-child(2)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(3)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(4)": {
                  "top": "16px",
                  "transition": "all 0.2s"
                }
              }
            },
            "nav.opened .hamburger span": {
              "&:nth-child(1)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              },
              "&:nth-child(2)": {
                "transform": "rotate(45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(3)": {
                "transform": "rotate(-45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(4)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              }
            },
            "a.nav-link": {
              "display": "flex",
              "align-items": "center",
              "justify-content": "flex-start"
            },
            ".icons-menu": {
              "flex-wrap": "nowrap",
              "display": "flex",
              "justify-content": "center",
              "padding": "0",
              "text-align": "center",
              "margin-bottom": "35px"
            },
            "@media screen and (~'-ms-high-contrast: active'), (~'-ms-high-contrast: none')": {
              ".navbar": {
                "height": "70px",
                "&.opened": {
                  "height": "auto"
                }
              },
              ".nav-item .nav-link:hover::before": {
                "width": "175%",
                "max-width": "calc(100% ~\"+\" 2rem)",
                "left": "-1rem"
              }
            },
            ".navbar-dropdown .navbar-logo": {
              "margin-right": "10px"
            },
            ".navbar-caption:hover": {
              "color": "@primaryColor"
            },
            ".dropdown-menu.dropdown-submenu": {
              "@media (min-width: 992px)": {
                "left": "175px !important",
                "top": "-45% !important"
              }
            },
            ".text_widget": {
              "margin-bottom": "32px",
              "a": {
                "transition": "all 0.3s ease-out",
                "&:hover, &:focus": {
                  "opacity": ".8"
                }
              }
            },
            "@media (min-width: 992px)": {
              ".navbar-nav.nav-dropdown": {
                "display": "-webkit-flex",
                "width": "100%",
                "justify-content": "flex-start",
                "min-width": "200px",
                "padding-left": "48px"
              }
            },
            ".navbar-caption": {
              "color": "#ffffff"
            },
            ".mbr-section-subtitle, .text_widget, .mbr-section-btn": {
              "text-align": "center"
            },
            "a[class*=\"text-\"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption):hover": {
              "background-image": "none"
            }
          },
          "_name": "menu01",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"menu menu01 progressm5\" group=\"Menu\" plugins=\"DropDown, TouchSwipe\" always-top global once=\"menu\" not-draggable position-absolute>\n\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" name=\"fullWidth\" title=\"Full Width\" checked>\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Logo\" name=\"showLogo\">\n        <input type=\"checkbox\" title=\"Brand Name\" name=\"showBrand\">\n        <input type=\"checkbox\" title=\"Menu Items\" name=\"showItems\" condition=\"false\">\n        <input type=\"color\" title=\"Items Active Color\" name=\"itemsActive\" value=\"#078efb\" condition=\"showItems\">\n        <input type=\"color\" title=\"Items Active BG\" name=\"itemsBg\" value=\"#252525\" condition=\"showItems\">\n        <input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\" checked>\n        <input type=\"checkbox\" title=\"Icons\" name=\"showIcons\" checked>\n        <input type=\"range\" title=\"Amount\" name=\"iconsAmount\" min=\"0\" max=\"2\" step=\"1\" value=\"2\" condition=\"showIcons\">\n        <input type=\"color\" title=\"Icons Color\" name=\"iconsColor\" value=\"#0844ff\" condition=\"showIcons\">\n        <header>Styles</header>\n        <input type=\"checkbox\" title=\"Sticky\" name=\"sticky\">\n        <input type=\"checkbox\" title=\"Collapsed\" name=\"collapsed\" condition=\"false\">\n        <input type=\"checkbox\" title=\"Transparent\" name=\"transparent\">\n        <input type=\"range\" title=\"Opacity\" name=\"opacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"1\" condition=\"transparent\">\n        <input type=\"color\" title=\"Color Menu\" name=\"menuBgColor\" value=\"#060606\">\n        <input type=\"color\" title=\"Hamburger\" name=\"hamburgerColor\" value=\"#078efb\">\n        <input type=\"color\" title=\"Hamburger Container\" name=\"hamburger\" value=\"#252525\">\n    </mbr-parameters>\n\n    <nav class=\"navbar navbar-dropdown\" mbr-class=\"{'navbar-fixed-top':sticky,\n                     'navbar-expand-lg':!collapsed,\n                     'collapsed':collapsed}\">\n        <div class=\"menu_box\" mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n            <div class=\"navbar-brand d-flex\">\n                <span mbr-if=\"showLogo\" class=\"navbar-logo\">\n                    <a href=\"page4.html#custom-html-n\">\n                        <img src=\"@PROJECT_PATH@/assets/images/flux_dev_a_vibrant_banner_featuring_a_stunning_anime_girl_syna-124x82.jpg\" alt=\"Mobirise\" mbr-style=\"{'height': logoSize + 'rem'}\">\n                    </a>\n                </span>\n                <span mbr-if=\"showBrand\" mbr-buttons mbr-theme-style=\"display-7\" class=\"navbar-caption-wrap\" data-toolbar=\"-mbrBtnMove,-mbrBtnAdd,-mbrBtnRemove\"><a class=\"navbar-caption\" data-app-selector=\".navbar-caption\" href=\"@THEME_PATH@/components/index.html\" data-app-placeholder=\"Type Text\">VA</a></span>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <div class=\"hamburger\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul mbr-menu class=\"navbar-nav nav-dropdown\" mbr-theme-style=\"display-4\" mbr-class=\"{'nav-right': !showButtons,'navbar-nav-top-padding': isPublish && !showBrand && !showLogo}\"><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"index.html#header02-1\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">SYNTHIA CHAT</a>\n                    </li>\n                    <li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page4.html#custom-html-n\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">THE GREEK&nbsp;</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page1.html#custom-html-2\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Prediction Asst</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page6.html#custom-html-10\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Under 21 FunBet</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page9.html#custom-html-1h\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Download/Subscribe</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"RoadmapWhitepaper.html#custom-html-12\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Whitepaper</a></li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page3.html#list02-b\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Laws</a>\n                    </li></ul>\n                <div mbr-buttons mbr-theme-style=\"display-4\" class=\"mbr-section-btn-main\" mbr-if=\"showButtons\" role=\"tablist\"><a class=\"btn btn-success-outline\" href=\"https://mobiri.se\" data-app-placeholder=\"Type Text\">\n                        Get started\n                    </a></div>\n                <div class=\"icons-menu-main\" mbr-if=\"showIcons\">\n                    <a class=\"iconfont-wrapper\" href=\"https://x.com/SYNA_AI_Sports\" target=\"_blank\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-macos socicon\"></span>\n                    </a>\n                    <a class=\"iconfont-wrapper\" href=\"https://mobiri.se\" target=\"_blank\" mbr-if=\"iconsAmount > 1\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-telegram socicon\"></span>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </nav>\n</section>",
          "_JSplaceholders": [],
          "_PHPplaceholders": [],
          "_isUserblock": true,
          "_cid": "uFxNausSY5",
          "_anchor": "menu01-z",
          "_protectedParams": [],
          "_global": true,
          "_once": "menu",
          "_params": {}
        },
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "\n\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Meet Synthia - Your Sports Prediction Agent</title>\n    <style>\n        body {\n            font-family: 'Courier New', monospace;\n            background-color: #000000;\n            color: #00ff00;\n            text-align: center;\n            margin: 20px;\n        }\n        .container {\n            max-width: 600px;\n            margin: auto;\n            padding: 20px;\n            border: 2px solid #00ff00;\n            display: none;\n        }\n        select, input, button {\n            width: 100%;\n            padding: 10px;\n            margin: 10px 0;\n            border: 1px solid #00ff00;\n            background: black;\n            color: #00ff00;\n            font-family: 'Courier New', monospace;\n        }\n        input[type=\"date\"] {\n            appearance: none;\n            text-align: center;\n        }\n        button {\n            cursor: pointer;\n        }\n        button:hover {\n            background: #00ff00;\n            color: black;\n        }\n        .matches-container, .selected-games {\n            max-height: 300px;\n            overflow-y: auto;\n            border: 1px solid #00ff00;\n            padding: 10px;\n            margin-top: 10px;\n            text-align: left;\n        }\n        .loading-container {\n            text-align: center;\n            font-size: 20px;\n            color: #00ff00;\n            padding: 20px;\n            height: 100vh;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n        }\n    </style>\n\n\n    <div class=\"loading-container\" id=\"loadingScreen\">\n        <p id=\"loadingText\"></p>\n    </div>\n    <div class=\"container\" id=\"mainContent\" style=\"display:none;\">\n        <h2>🧠 Meet Synthia - Your Sports Prediction Agent</h2>\n        <label for=\"league\">Select League:</label>\n        <select id=\"league\">\n            <option value=\"\">Select a League</option>\n        </select>\n        <label for=\"region\">Select Region:</label>\n        <select id=\"region\">\n            <option value=\"us\">USA</option>\n            <option value=\"eu\">Europe</option>\n            <option value=\"uk\">UK</option>\n            <option value=\"au\">Australia</option>\n            <option value=\"ca\">Central America</option>\n        </select>\n        <label for=\"date\">Select Date:</label>\n        <div class=\"date-container\">\n            <input type=\"date\" id=\"date\" title=\"Click here to select a date\" style=\"width: 100%; padding: 10px; margin: 10px 0; border: 1px solid #00ff00; background: black; color: #00ff00; font-family: 'Courier New', monospace;\">\n        </div>\n        <button onclick=\"fetchMatchData()\">🔍 Load Live Games &amp; Odds</button>\n        <button onclick=\"resetView()\">🔄 Reset</button>\n        <div class=\"matches-container\" id=\"matchesContainer\">\n            <p>Live games will appear here...</p>\n        </div>\n        <button id=\"betButton\" onclick=\"placeBet()\">🔥 Bet Live</button>\n        <button onclick=\"addSelectedGames()\">➕ Select Games for Fun Betting</button>\n        <div class=\"selected-games\" id=\"selectedGames\">\n            <p>Selected games will appear here...</p>\n        </div>\n    </div>\n    [JS_CODE_0]\n\n\n",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_anchor": "custom-html-10",
          "_PHPplaceholders": [],
          "_JSplaceholders": [
            "<script>\n        const loadingMessages = [\n            \"Meet Synthia - Your Sports Prediction Agent\",\n            \"Gathering latest sports data...\",\n            \"Analyzing trends and statistics...\",\n            \"Finalizing insights...\",\n            \"Launching prediction agent...\"\n        ];\n        \n        let index = 0;\n        function displayLoadingMessages() {\n            if (index < loadingMessages.length) {\n                document.getElementById(\"loadingText\").innerHTML += loadingMessages[index] + \"<br>\";\n                index++;\n                setTimeout(displayLoadingMessages, 1000);\n            } else {\n                setTimeout(() => {\n                    document.getElementById(\"loadingScreen\").style.display = \"none\";\n                    document.getElementById(\"mainContent\").style.display = \"block\";\n                    fetchLeagues();\n                }, 1000);\n            }\n        }\n        \n        document.addEventListener(\"DOMContentLoaded\", () => {\n            displayLoadingMessages();\n        });\n        \n        function fetchLeagues() {\n            const apiKey = \"5b601e797ce1d45f442ecaff2c6e3df9\";\n            fetch(`https://api.the-odds-api.com/v4/sports?apiKey=${apiKey}`)\n                .then(response => response.json())\n                .then(data => {\n                    const leagueSelect = document.getElementById(\"league\");\n                    leagueSelect.innerHTML = \"<option value=''>Select a League</option>\";\n                    data.forEach(league => {\n                        let option = document.createElement(\"option\");\n                        option.value = league.key;\n                        option.textContent = league.title;\n                        leagueSelect.appendChild(option);\n                    });\n                })\n                .catch(error => {\n                    console.error(\"Failed to fetch leagues:\", error);\n                    alert(\"Failed to load leagues. Please try again later.\");\n                });\n        }\n        \n        function fetchMatchData() {\n    const league = document.getElementById(\"league\").value;\n    const date = document.getElementById(\"date\").value;\n    const region = document.getElementById(\"region\").value;\n\n    if (!league || !date) {\n        alert(\"Please select a league and a date.\");\n        return;\n    }\n\n    const apiKey = \"5b601e797ce1d45f442ecaff2c6e3df9\";\n    fetch(`https://api.the-odds-api.com/v4/sports/${league}/odds/?regions=${region}&markets=h2h&date=${date}&apiKey=${apiKey}`)\n        .then(response => response.json())\n        .then(data => {\n            const matchesContainer = document.getElementById(\"matchesContainer\");\n            matchesContainer.innerHTML = \"\";\n\n            if (!Array.isArray(data) || data.length === 0) {\n                matchesContainer.innerHTML = \"<p>No games available for selected date.</p>\";\n                return;\n            }\n\n            data.forEach(game => {\n                if (game.bookmakers.length > 0) {\n                    let odds = game.bookmakers[0].markets[0].outcomes.map(outcome => `${outcome.name}: ${outcome.price}`).join(\" | \");\n                    let prediction = game.bookmakers[0].markets[0].outcomes[0].name;\n                    matchesContainer.innerHTML += `\n                    <div>\n                        <input type='checkbox' class='game-checkbox' value='${game.home_team} vs ${game.away_team}'>\n                        ${game.home_team} vs ${game.away_team} | Odds: ${odds} | Prediction: ${prediction}<br>\n                        <a href='https://www.draftkings.com/sportsbook' target='_blank'>\n                            <button>Bet Now</button>\n                        </a>\n                    </div>`;\n                }\n            });\n        })\n        .catch(error => {\n            console.error(\"API fetch failed: \", error);\n            document.getElementById(\"matchesContainer\").innerHTML = \"<p>Failed to load games. Please try again.</p>\";\n        });\n}\nfunction addSelectedGames() {\n    const selectedGamesContainer = document.getElementById(\"selectedGames\");\n    selectedGamesContainer.innerHTML = \"\";\n    const checkboxes = document.querySelectorAll(\".game-checkbox:checked\");\n    if (checkboxes.length === 0) {\n        selectedGamesContainer.innerHTML = \"<p>No games selected.</p>\";\n        return;\n    }\n    checkboxes.forEach(box => {\n        selectedGamesContainer.innerHTML += `<p>${box.value}</p>`;\n    });\n}\n\n       \n       function placeBet() {\n            window.open('https://www.draftkings.com/sportsbook', '_blank');\n        }\n\n        function resetView() {\n            document.getElementById(\"league\").value = \"\";\n            document.getElementById(\"region\").value = \"us\";\n            document.getElementById(\"date\").value = \"\";\n            document.getElementById(\"matchesContainer\").innerHTML = \"<p>Live games will appear here...</p>\";\n            document.getElementById(\"selectedGames\").innerHTML = \"<p>Selected games will appear here...</p>\";\n        }\n    </script>"
          ]
        }
      ]
    },
    "RoadmapWhitepaper.html": {
      "settings": {
        "title": "Roadmap/Whitepaper",
        "order": "6",
        "header_custom": ""
      },
      "components": [
        {
          "alias": false,
          "_styles": {
            ".navbar-dropdown": {
              "& when not (@transparent)": {
                "background-color": "@menuBgColor !important"
              },
              "& when (@transparent)": {
                "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
              },
              "padding": "0",
              "& when (@sticky)": {
                "position": "absolute !important"
              }
            },
            "background-color": "transparent",
            ".navbar.navbar-expand-lg .dropdown": {
              ".dropdown-menu": {
                "& when not (@transparent)": {
                  "background-color": "@menuBgColor !important"
                },
                "& when (@transparent)": {
                  "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
                },
                ".dropdown-submenu": {
                  "margin": "0",
                  "left": "100%"
                },
                "background": "@menuBgColor"
              }
            },
            ".menu_box": {
              "flex-wrap": "nowrap",
              "@media (max-width: 991px)": {
                ".navbar.opened, .navbar-collapse": {
                  "background-color": "@menuBgColor !important",
                  "transition": "all 0s ease 0s"
                },
                "flex-direction": "column",
                "align-items": "flex-start"
              }
            },
            "& when not (@sticky)": {
              ".navbar-dropdown": {
                "position": "relative !important"
              }
            },
            "& when (@sticky)": {
              "z-index": "1000",
              "width": "100%",
              "nav.navbar": {
                "position": "fixed",
                "padding-top": "1rem",
                "padding-bottom": "1rem"
              }
            },
            ".icons-menu-main": {
              "display": "flex",
              "flex-wrap": "wrap",
              "min-width": "150px",
              "margin-left": "24px",
              "@media (max-width: 991px)": {
                "min-width": "auto",
                "max-width": "100%",
                "margin": "1rem 0 1rem 1rem"
              }
            },
            ".mbr-section-btn-main": {
              "@media (max-width: 991px)": {
                "margin-top": "1rem"
              },
              ".btn": {
                "margin": "8px",
                "min-width": "120px",
                "white-space": "nowrap"
              }
            },
            ".btn": {
              "min-height": "auto",
              "box-shadow": "none",
              "margin-top": "0",
              "&:hover": {
                "box-shadow": "none"
              }
            },
            ".nav-item": {
              "margin": "4px 0",
              "@media (min-width: 992px)": {
                "margin": "4px 40px 4px 0"
              },
              "& when (@showLogo), (@showBrand)": {
                "@media (min-width: 992px)": {
                  "margin": "4px 0"
                }
              },
              "@media (max-width: 991px)": {
                "margin": "0 !important"
              },
              ".nav-link": {
                "display": "flex",
                "justify-content": "center",
                "padding": "12px",
                "transition": "all 0.3s ease-out",
                "border-radius": "4px !important",
                "border": "1px solid transparent",
                "position": "relative",
                "opacity": "1",
                "@media (max-width: 992px)": {
                  "justify-content": "flex-start"
                },
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "bottom": "-10px",
                  "width": "0",
                  "height": "2px",
                  "background-color": "@itemsActive",
                  "transition": "all 0.3s ease-out"
                },
                "&:hover, &:focus": {
                  "background-color": "@itemsBg",
                  "color": "@itemsActive !important",
                  "&::before": {
                    "width": "80%"
                  }
                }
              }
            },
            ".dropdown-menu": {
              "border-radius": "0",
              "box-shadow": "none",
              "text-align": "left",
              "@media (min-width: 992px)": {
                "padding": "18px 34px 22px",
                "min-width": "250px",
                "top": "auto !important",
                "left": "-40px !important",
                "&.dropdown-submenu": {
                  "left": "215px !important",
                  "top": "-45% !important"
                }
              }
            },
            "@media (max-width: 991px)": {
              ".dropdown-menu .dropdown-toggle[data-toggle=\"dropdown-submenu\"]::after, .link.dropdown-toggle::after": {
                "display": "inline-block",
                "width": "7px",
                "height": "7px",
                "margin-left": ".5rem",
                "margin-bottom": "2px",
                "content": "\"\"",
                "border": "2px solid",
                "border-left": "none",
                "border-top": "none",
                "transform": "rotate(-45deg)",
                "right": "15px",
                "position": "absolute",
                "margin-top": "-2px"
              },
              ".show.dropdown-toggle[aria-expanded=\"true\"]::after": {
                "transform": "rotate(45deg)",
                "margin-top": "-4px"
              },
              ".offcanvas_box": {
                "display": "none"
              }
            },
            ".dropdown-item": {
              "border": "none",
              "font-weight": "300 !important"
            },
            ".nav-dropdown .link": {
              "font-weight": "400 !important",
              "padding": "0 !important",
              "margin": "0 !important"
            },
            ".nav-dropdown .link.dropdown-toggle::after": {
              "margin-left": "0.5rem",
              "margin-top": "0"
            },
            ".container": {
              "display": "flex",
              "margin": "auto"
            },
            ".iconfont-wrapper": {
              "color": "@iconsColor",
              "font-size": "26px",
              "margin-right": "10px",
              "margin-bottom": "5px",
              "&:last-child": {
                "margin-right": "0"
              },
              "transition": "all 0.3s ease-in-out",
              "&:hover": {
                ".mbr-iconfont": {
                  "opacity": ".7"
                }
              }
            },
            ".navbar-nav": {
              "@media (min-width: 992px)": {
                "margin": "0"
              }
            },
            ".dropdown-menu, .navbar.opened": {
              "background-color": "@transparent !important"
            },
            ".nav-item:focus, .nav-link:focus": {
              "outline": "none"
            },
            ".dropdown .dropdown-menu .dropdown-item": {
              "width": "auto",
              "transition": "all 0.25s ease-in-out",
              "&::after": {
                "right": "0.5rem"
              },
              ".mbr-iconfont": {
                "margin-right": "0.5rem",
                "vertical-align": "sub",
                "&:before": {
                  "display": "inline-block",
                  "transform": "scale(1, 1)",
                  "transition": "all 0.25s ease-in-out"
                }
              }
            },
            ".collapsed": {
              ".dropdown-menu .dropdown-item:before": {
                "display": "none"
              },
              ".dropdown .dropdown-menu .dropdown-item": {
                "padding": "0.235em 1.5em 0.235em 1.5em !important",
                "transition": "none",
                "margin": "0 !important"
              }
            },
            ".navbar": {
              "min-height": "70px",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "border-bottom-width": "0",
              "@media (max-width: 992px)": {
                "min-height": "30px",
                "max-height": "none"
              },
              "&:not(.navbar-short)": {},
              "&.opened": {
                "transition": "all 0.3s"
              },
              ".dropdown-item": {
                "padding": "0",
                "margin": "8px 0"
              },
              ".navbar-logo img": {
                "max-width": "62px",
                "min-height": "62px",
                "object-fit": "contain",
                "border-radius": "100% !important"
              },
              ".navbar-collapse": {
                "justify-content": "center",
                "& when (@showLogo), (@showBrand)": {
                  "justify-content": "flex-end"
                },
                "z-index": "1"
              },
              "&.collapsed": {
                "justify-content": "center",
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto"
                  }
                },
                "ul.navbar-nav": {
                  "li": {
                    "margin": "auto"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0.25rem 1.5rem",
                  "text-align": "left"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "@media (max-width: 991px)": {
                ".nav-item": {
                  "padding": ".5rem 0"
                },
                ".navbar-collapse": {
                  "padding": "34px 0",
                  "border-radius": "16px",
                  "width": "100%"
                },
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  "padding": "6px 0 6px 15px",
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto",
                    "margin-top": "-0.4rem"
                  }
                },
                ".navbar-logo": {
                  "img": {
                    "height": "3rem !important"
                  }
                },
                "ul.navbar-nav": {
                  "overflow": "hidden",
                  "li": {
                    "margin": "0"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0 !important",
                  "margin": "0",
                  "margin-top": "8px",
                  "text-align": "left"
                },
                ".navbar-brand": {
                  "flex-shrink": "initial",
                  "flex-basis": "auto",
                  "word-break": "break-word",
                  "padding-right": "0",
                  "width": "100%",
                  "justify-content": "space-between"
                },
                ".navbar-toggler": {
                  "flex-basis": "auto"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "&.navbar-short": {
                "min-height": "60px",
                ".navbar-logo": {
                  "img": {
                    "height": "2.5rem !important"
                  }
                },
                ".navbar-brand": {
                  "min-height": "60px",
                  "padding": "0"
                }
              }
            },
            ".navbar-brand": {
              "min-height": "70px",
              "flex-shrink": "0",
              "align-items": "center",
              "margin-right": "0",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "word-break": "break-word",
              "z-index": "1",
              ".navbar-caption": {
                "line-height": "inherit !important",
                "font-weight": "400"
              },
              ".navbar-logo a": {
                "outline": "none"
              }
            },
            ".dropdown-item.active, .dropdown-item:active": {
              "background-color": "transparent"
            },
            ".navbar-expand-lg .navbar-nav .nav-link": {
              "padding": "6px 16px !important"
            },
            ".nav-dropdown .link.dropdown-toggle": {
              "margin-right": "1.667em",
              "&[aria-expanded=\"true\"]": {
                "margin-right": "0",
                "padding": "0.667em 1.667em"
              }
            },
            ".navbar .dropdown.open > .dropdown-menu": {
              "display": "block"
            },
            "ul.navbar-nav": {
              "flex-wrap": "wrap",
              "padding": "0"
            },
            ".navbar-buttons": {
              "text-align": "center",
              "min-width": "170px"
            },
            "button.navbar-toggler": {
              "outline": "none",
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "cursor": "pointer",
              "transition": "all 0.2s",
              "position": "relative",
              "align-self": "center",
              "color": "@menuBgColor",
              "background": "@hamburger",
              ".hamburger span": {
                "position": "absolute",
                "right": "10px",
                "margin-top": "14px",
                "width": "26px",
                "height": "2px",
                "border-right": "5px",
                "background-color": "@hamburgerColor",
                "&:nth-child(1)": {
                  "top": "0",
                  "transition": "all 0.2s"
                },
                "&:nth-child(2)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(3)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(4)": {
                  "top": "16px",
                  "transition": "all 0.2s"
                }
              }
            },
            "nav.opened .hamburger span": {
              "&:nth-child(1)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              },
              "&:nth-child(2)": {
                "transform": "rotate(45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(3)": {
                "transform": "rotate(-45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(4)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              }
            },
            "a.nav-link": {
              "display": "flex",
              "align-items": "center",
              "justify-content": "flex-start"
            },
            ".icons-menu": {
              "flex-wrap": "nowrap",
              "display": "flex",
              "justify-content": "center",
              "padding": "0",
              "text-align": "center",
              "margin-bottom": "35px"
            },
            "@media screen and (~'-ms-high-contrast: active'), (~'-ms-high-contrast: none')": {
              ".navbar": {
                "height": "70px",
                "&.opened": {
                  "height": "auto"
                }
              },
              ".nav-item .nav-link:hover::before": {
                "width": "175%",
                "max-width": "calc(100% ~\"+\" 2rem)",
                "left": "-1rem"
              }
            },
            ".navbar-dropdown .navbar-logo": {
              "margin-right": "10px"
            },
            ".navbar-caption:hover": {
              "color": "@primaryColor"
            },
            ".dropdown-menu.dropdown-submenu": {
              "@media (min-width: 992px)": {
                "left": "175px !important",
                "top": "-45% !important"
              }
            },
            ".text_widget": {
              "margin-bottom": "32px",
              "a": {
                "transition": "all 0.3s ease-out",
                "&:hover, &:focus": {
                  "opacity": ".8"
                }
              }
            },
            "@media (min-width: 992px)": {
              ".navbar-nav.nav-dropdown": {
                "display": "-webkit-flex",
                "width": "100%",
                "justify-content": "flex-start",
                "min-width": "200px",
                "padding-left": "48px"
              }
            },
            ".navbar-caption": {
              "color": "#ffffff"
            },
            ".mbr-section-subtitle, .text_widget, .mbr-section-btn": {
              "text-align": "center"
            },
            "a[class*=\"text-\"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption):hover": {
              "background-image": "none"
            }
          },
          "_name": "menu01",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"menu menu01 progressm5\" group=\"Menu\" plugins=\"DropDown, TouchSwipe\" always-top global once=\"menu\" not-draggable position-absolute>\n\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" name=\"fullWidth\" title=\"Full Width\" checked>\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Logo\" name=\"showLogo\">\n        <input type=\"checkbox\" title=\"Brand Name\" name=\"showBrand\">\n        <input type=\"checkbox\" title=\"Menu Items\" name=\"showItems\" condition=\"false\">\n        <input type=\"color\" title=\"Items Active Color\" name=\"itemsActive\" value=\"#078efb\" condition=\"showItems\">\n        <input type=\"color\" title=\"Items Active BG\" name=\"itemsBg\" value=\"#252525\" condition=\"showItems\">\n        <input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\" checked>\n        <input type=\"checkbox\" title=\"Icons\" name=\"showIcons\" checked>\n        <input type=\"range\" title=\"Amount\" name=\"iconsAmount\" min=\"0\" max=\"2\" step=\"1\" value=\"2\" condition=\"showIcons\">\n        <input type=\"color\" title=\"Icons Color\" name=\"iconsColor\" value=\"#0844ff\" condition=\"showIcons\">\n        <header>Styles</header>\n        <input type=\"checkbox\" title=\"Sticky\" name=\"sticky\">\n        <input type=\"checkbox\" title=\"Collapsed\" name=\"collapsed\" condition=\"false\">\n        <input type=\"checkbox\" title=\"Transparent\" name=\"transparent\">\n        <input type=\"range\" title=\"Opacity\" name=\"opacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"1\" condition=\"transparent\">\n        <input type=\"color\" title=\"Color Menu\" name=\"menuBgColor\" value=\"#060606\">\n        <input type=\"color\" title=\"Hamburger\" name=\"hamburgerColor\" value=\"#078efb\">\n        <input type=\"color\" title=\"Hamburger Container\" name=\"hamburger\" value=\"#252525\">\n    </mbr-parameters>\n\n    <nav class=\"navbar navbar-dropdown\" mbr-class=\"{'navbar-fixed-top':sticky,\n                     'navbar-expand-lg':!collapsed,\n                     'collapsed':collapsed}\">\n        <div class=\"menu_box\" mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n            <div class=\"navbar-brand d-flex\">\n                <span mbr-if=\"showLogo\" class=\"navbar-logo\">\n                    <a href=\"page4.html#custom-html-n\">\n                        <img src=\"@PROJECT_PATH@/assets/images/flux_dev_a_vibrant_banner_featuring_a_stunning_anime_girl_syna-124x82.jpg\" alt=\"Mobirise\" mbr-style=\"{'height': logoSize + 'rem'}\">\n                    </a>\n                </span>\n                <span mbr-if=\"showBrand\" mbr-buttons mbr-theme-style=\"display-7\" class=\"navbar-caption-wrap\" data-toolbar=\"-mbrBtnMove,-mbrBtnAdd,-mbrBtnRemove\"><a class=\"navbar-caption\" data-app-selector=\".navbar-caption\" href=\"@THEME_PATH@/components/index.html\" data-app-placeholder=\"Type Text\">VA</a></span>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <div class=\"hamburger\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul mbr-menu class=\"navbar-nav nav-dropdown\" mbr-theme-style=\"display-4\" mbr-class=\"{'nav-right': !showButtons,'navbar-nav-top-padding': isPublish && !showBrand && !showLogo}\"><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"index.html#header02-1\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">SYNTHIA CHAT</a>\n                    </li>\n                    <li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page4.html#custom-html-n\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">THE GREEK&nbsp;</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page1.html#custom-html-2\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Prediction Asst</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page6.html#custom-html-10\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Under 21 FunBet</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page9.html#custom-html-1h\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Download/Subscribe</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"RoadmapWhitepaper.html#custom-html-12\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Whitepaper</a></li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page3.html#list02-b\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Laws</a>\n                    </li></ul>\n                <div mbr-buttons mbr-theme-style=\"display-4\" class=\"mbr-section-btn-main\" mbr-if=\"showButtons\" role=\"tablist\"><a class=\"btn btn-success-outline\" href=\"https://mobiri.se\" data-app-placeholder=\"Type Text\">\n                        Get started\n                    </a></div>\n                <div class=\"icons-menu-main\" mbr-if=\"showIcons\">\n                    <a class=\"iconfont-wrapper\" href=\"https://x.com/SYNA_AI_Sports\" target=\"_blank\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-macos socicon\"></span>\n                    </a>\n                    <a class=\"iconfont-wrapper\" href=\"https://mobiri.se\" target=\"_blank\" mbr-if=\"iconsAmount > 1\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-telegram socicon\"></span>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </nav>\n</section>",
          "_JSplaceholders": [],
          "_PHPplaceholders": [],
          "_anchor": "menu01-q",
          "_isUserblock": true,
          "_cid": "uFxNausSY5",
          "_protectedParams": [],
          "_global": true,
          "_once": "menu",
          "_params": {}
        },
        {
          "_styles": {},
          "_customHTML": "<div style=\"background: url('/assets/syna-background.jpg') no-repeat center center fixed; background-size: cover; padding: 60px 20px; font-family: 'Segoe UI', sans-serif; color: #fff;\">\n  <div style=\"background: rgba(10, 15, 36, 0.95); padding: 30px; border-radius: 16px; max-width: 800px; height: 80vh; overflow-y: auto; margin: auto;\">\n    <h2 style=\"text-align: center; font-size: 2.2em; margin-bottom: 20px; color: #4ee1c1;\">\n      SYNTHIA: The AI-Powered Sports Betting Experience\n    </h2>\n\n    <p><strong>Whitepaper v1.0</strong></p>\n    <p><strong>Ticker:</strong> SYNA<br>\n    <strong>Chain:</strong> Binance Smart Chain (BSC)<br>\n    <strong>Wallet Integration:</strong> MetaMask<br>\n    <strong>Token Tax:</strong> 1% Liquidity (auto-locked, inaccessible to devs)<br>\n    <strong>Dev Allocation:</strong> To be announced post-launch</p>\n\n    <hr>\n    <h3>Introduction</h3>\n    <p>Synthia is not just a betting tool — it's the evolution of sports competition between friends. Built by a group of passionate athletes and sports enthusiasts from the UNLV International Gaming Institute (nicknamed the \"Harvard of Gaming\"), the project was inspired by the vibrant culture of Las Vegas sports betting.</p>\n    <p>What started as friendly smack talk and micro-wagers between classmates grew into a revolutionary suite of decentralized, AI-powered betting tools built for community-driven fun.</p>\n    <p>This is not Vegas-as-usual — Synthia is Web3-native, privacy-respecting, user-controlled, and 100% designed to follow U.S. peer-to-peer betting laws.</p>\n\n    <hr>\n    <h3>Our Origin Story</h3>\n    <p>While attending UNLV, our team couldn’t wait to legally bet on sports. We’d played sports all our lives, and trash-talked picks like we were ESPN analysts. Eventually, we started betting small stakes between friends. Then Baker introduced us to an AI tool he built to make betting picks — and it worked.</p>\n    <p>Fast forward: Synthia was born from our desire to formalize the experience, share it with others, and build a powerful, AI-enhanced suite of sports prediction tools. Our flagship tool, <strong>Synthia V1</strong>, is already live — and we've got much more in the pipeline.</p>\n    <p>Our origin was rooted in competition and friendship. Over time, we refined the concept into a decentralized, fun, and fair platform that brought intelligent predictions to casual peer-to-peer wagering. We’re proud of our Las Vegas roots and the credibility the UNLV International Gaming Institute brings to our foundation. This story is what makes Synthia more than a project — it’s a passion turned into a platform.</p>\n\n    <hr>\n    <h3>Product Suite</h3>\n    <h4>✨ Synthia V1: The Core Game</h4>\n    <ul>\n      <li>A daily betting game for up to five friends</li>\n      <li>Create your own rules</li>\n      <li>Auto-payout to winners based on real-time outcomes</li>\n      <li>Zero influence or control from us — true peer-to-peer</li>\n    </ul>\n    <h4>🤖 Synthia Companion</h4>\n    <ul>\n      <li>Live odds feed + daily pick builder</li>\n      <li>Track wins/losses during live events</li>\n      <li>AI suggestions for bet confidence</li>\n    </ul>\n    <h4>🕵️ Synthia Prediction Agent</h4>\n    <ul>\n      <li>For hardcore bettors who want data-driven picks</li>\n      <li>Predictive modeling + constant improvement</li>\n      <li>Useful for handicappers, analysts, and sharp bettors</li>\n    </ul>\n    <h4>🔥 Synthia V2 (90% Complete)</h4>\n    <ul>\n      <li>Combines all 3 tools above</li>\n      <li>Features a social betting chat, AI sportsbook, and home prediction agent</li>\n      <li>Flagship experience for all player levels</li>\n    </ul>\n\n    <hr>\n    <h3>Tokenomics</h3>\n    <ul>\n      <li><strong>Chain:</strong> Binance Smart Chain (BSC)</li>\n      <li><strong>Ticker:</strong> SYNA</li>\n      <li><strong>Liquidity Tax:</strong> 1% auto-locked (can’t be accessed by devs)</li>\n      <li><strong>Dev Wallet:</strong> TBD post-launch</li>\n      <li><strong>Airdrops:</strong> None</li>\n      <li><strong>Wallet:</strong> MetaMask compatible only (no Phantom)</li>\n    </ul>\n\n    <hr>\n    <h3>Why Four.Meme?</h3>\n    <ul>\n      <li>It’s a BSC-native ecosystem</li>\n      <li>Supports MetaMask integration</li>\n      <li>1% tax towards liquidity and to protect users and for trust</li>\n      <li>Better suited for meme-to-utility community tokens</li>\n    </ul>\n\n    <hr>\n    <h3>Final Notes</h3>\n    <p>Synthia is not a gambling site — it’s a friend-to-friend competition layer built on AI and chain tech. We built this to enjoy it, just like how Zuckerberg started Facebook. But our tools are real, our predictions smart, and our community ready.</p>\n    <p>We believe betting should be fun, fair, and frictionless. That’s what Synthia is here to deliver.</p>\n  </div>\n</div>\n",
          "_name": "header01",
          "_sourceTheme": "progressm5",
          "_cid": "uGvjrkjQgk",
          "_anchor": "hero-1-uGvjrkjQgk",
          "alias": false,
          "_PHPplaceholders": [],
          "_JSplaceholders": [],
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        },
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "<div style=\"background: url('/assets/syna-background.jpg') no-repeat center center fixed; background-size: cover; min-height: 100vh; padding: 60px 20px;\">\n  <div class=\"synthia-roadmap\" style=\"font-family: 'Segoe UI', sans-serif; color: white; background: rgba(10, 15, 36, 0.9); padding: 40px; border-radius: 16px; max-width: 1000px; margin: auto;\">\n    <h2 style=\"text-align: center; font-size: 2.5em; margin-bottom: 40px; color: #4ee1c1;\">\n      🚀 <span style=\"color: #ffffff;\">Synthia</span> Roadmap Flow\n    </h2>\n\n    <div style=\"display: flex; flex-direction: column; gap: 50px;\">\n      <div style=\"border-left: 4px solid #4ee1c1; padding-left: 20px; position: relative;\">\n        <div style=\"position: absolute; left: -12px; top: 0; background-color: #4ee1c1; border-radius: 50%; width: 20px; height: 20px;\"></div>\n        <h3 style=\"color: #4ee1c1;\">Synthia Alpha (Completed)</h3>\n        <p>✅ Built and tested initial AI logic<br>✅ Local testing with friends at UNLV</p>\n      </div>\n\n      <div style=\"border-left: 4px solid #4ee1c1; padding-left: 20px; position: relative;\">\n        <div style=\"position: absolute; left: -12px; top: 0; background-color: #4ee1c1; border-radius: 50%; width: 20px; height: 20px;\"></div>\n        <h3 style=\"color: #4ee1c1;\">Synthia 1.0 (Completed)</h3>\n        <p>✅ Launched Synthia V1 game<br>✅ Created peer-to-peer match flow<br>✅ Built fun, clean UI</p>\n      </div>\n\n      <div style=\"border-left: 4px solid #4ee1c1; padding-left: 20px; position: relative;\">\n        <div style=\"position: absolute; left: -12px; top: 0; background-color: #4ee1c1; border-radius: 50%; width: 20px; height: 20px;\"></div>\n        <h3 style=\"color: #4ee1c1;\">Synthia 2.0 (Completed)</h3>\n        <p>✅ Companion app and predictive tools<br>✅ MetaMask-only wallet integration<br>✅ Peer-to-peer legal compliance</p>\n      </div>\n\n      <div style=\"border-left: 4px solid #4ee1c1; padding-left: 20px; position: relative;\">\n        <div style=\"position: absolute; left: -12px; top: 0; background-color: #4ee1c1; border-radius: 50%; width: 20px; height: 20px;\"></div>\n        <h3 style=\"color: #4ee1c1;\">Synthia 3.0 (Coming Q2 2025)</h3>\n        <p>🔄 Full-featured Prediction Agent<br>📊 Cross-league analytics<br>🧠 Multi-sport AI betting</p>\n      </div>\n\n      <div style=\"border-left: 4px solid #4ee1c1; padding-left: 20px; position: relative;\">\n        <div style=\"position: absolute; left: -12px; top: 0; background-color: #4ee1c1; border-radius: 50%; width: 20px; height: 20px;\"></div>\n        <h3 style=\"color: #4ee1c1;\">Synthia 3.1 (Q2 2025)</h3>\n        <p>🎯 Launch Synthia V2 full platform<br>💬 AI Chatbook and friend lobbies<br>💰 Token integration and contracts</p>\n      </div>\n    </div>\n  </div>\n</div>\n",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_anchor": "custom-html-12",
          "_PHPplaceholders": [],
          "_JSplaceholders": []
        },
        {
          "_styles": {
            "& when not (@fullScreen)": {
              "padding-top": "(@paddingTop * 1rem)",
              "padding-bottom": "(@paddingBottom * 1rem)"
            },
            "& when (@bg-type = 'color')": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = 'image')": {
              "background-image": "url(@bg-value)"
            },
            ".mbr-fallback-image.disabled": {
              "display": "none"
            },
            ".mbr-fallback-image": {
              "display": "block",
              "background-size": "cover",
              "background-position": "center center",
              "width": "100%",
              "height": "100%",
              "position": "absolute",
              "top": "0",
              "& when (@bg-type = 'video')": {
                "background-image": "url(@fallBackImage)"
              }
            },
            ".title-wrapper": {
              "@media (max-width: 992px)": {
                "margin-bottom": "48px"
              },
              ".mbr-section-title": {
                "margin-bottom": "24px"
              }
            },
            ".panel-group": {
              ".card": {
                "position": "relative",
                "padding": "24px",
                "background-color": "@card",
                "border": "1px solid @border",
                "border-radius": "0",
                "margin-top": "12px",
                "transition": "all 0.3s ease-in-out",
                "@media (max-width: 992px)": {
                  "padding": "16px"
                },
                "&:first-child": {
                  "margin-top": "0"
                },
                "&:hover, &:focus": {
                  "border": "1px solid @active"
                },
                ".card-header": {
                  "background-color": "transparent",
                  "border": "none",
                  "border-radius": "0",
                  "padding": "0",
                  ".panel-title": {
                    "display": "flex",
                    "justify-content": "space-between",
                    "align-items": "center",
                    "width": "100%",
                    ".panel-title-edit": {
                      "margin-bottom": "0"
                    },
                    ".icon-wrapper": {
                      "width": "48px",
                      "height": "48px",
                      "min-width": "48px",
                      "display": "inline-flex",
                      "align-items": "center",
                      "justify-content": "center",
                      "margin-left": "16px",
                      "transition": "all 0.3s ease-in-out",
                      "border-radius": "100%",
                      "background-color": "@iconBg",
                      ".mbr-iconfont": {
                        "font-size": "24px",
                        "transition": "all 0.3s ease-in-out",
                        "color": "@icon"
                      }
                    },
                    "&:not(.collapsed)": {
                      ".icon-wrapper": {
                        "transform": "rotate(-45deg)",
                        ".mbr-iconfont": {
                          "color": "@active"
                        }
                      }
                    }
                  }
                },
                ".panel-collapse": {
                  ".panel-body": {
                    "margin-top": "16px",
                    ".panel-text": {
                      "margin-bottom": "0"
                    }
                  }
                }
              }
            },
            ".mbr-section-title": {
              "color": "#ffffff"
            },
            ".panel-title-edit": {
              "color": "#FFFFFF"
            },
            ".panel-text": {
              "color": "#FFFFFF"
            },
            ".mbr-section-title, .mbr-section-btn": {
              "color": "#FFFFFF"
            }
          },
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"list01 progressm5\" group=\"List\" plugins=\"mbr-switch-arrow, mobirise-icons2\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" title=\"Full Screen\" name=\"fullScreen\">\n        <input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\">\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"12\" step=\"1\" value=\"5\" condition=\"fullScreen == false\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"12\" step=\"1\" value=\"5\" condition=\"fullScreen == false\">\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Title\" name=\"showTitle\" checked>\n        <header>List</header>\n        <select title=\"Amount\" name=\"cardAmount\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\" selected>4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n        </select>\n        <input type=\"color\" title=\"Icon Color\" value=\"#000000\" name=\"icon\" selected>\n        <input type=\"color\" title=\"Icon BG\" value=\"#645D00\" name=\"iconBg\" selected>\n        <input type=\"color\" title=\"Border Color\" value=\"#645D00\" name=\"border\" selected>\n        <input type=\"color\" title=\"Card BG\" value=\"#232000\" name=\"card\" selected>\n        <input type=\"color\" title=\"Active Color\" value=\"#766153\" name=\"active\" selected>\n        <header>Background</header>\n        <fieldset type=\"background\" name=\"bg\" parallax>\n            <input type=\"image\" title=\"Image\" value=\"../_images/background1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#151300\" selected>\n        </fieldset>\n        <header condition=\"bg.type === 'video'\">Fallback Image</header>\n        <input type=\"image\" title=\"Fallback Image\" value=\"../_images/background1.jpg\" name=\"fallBackImage\" condition=\"bg.type === 'video'\">\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\" checked>\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#060606\" condition=\"overlay && bg.type !== 'color'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.8\" condition=\"overlay && bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-fallback-image disabled\" mbr-if=\"bg.type == 'video'\"></div>\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type !== 'color'\" opacity=\"{{overlayOpacity}}\" bg-color=\"{{overlayColor}}\"></div>\n\n    <div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n        <div class=\"row items-wrapper\">\n            <div class=\"col-12 col-lg-6 card\">\n                <div class=\"content-wrapper\">\n                    <div class=\"title-wrapper\" mbr-if=\"showTitle\">\n                        <h2 class=\"mbr-section-title mbr-fonts-style\" data-app-selector=\".mbr-section-title, .mbr-section-btn\" mbr-theme-style=\"display-2\" mbr-if=\"showTitle\">Frequently Asked Questions</h2>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-lg-6 card\">\n                <div id=\"bootstrap-accordion\" class=\"panel-group accordionStyles accordion\" role=\"tablist\" aria-multiselectable=\"true\">\n                    <div class=\"card\">\n                        <div class=\"card-header\" role=\"tab\" id=\"headingOne\">\n                            <a role=\"button\" class=\"panel-title collapsed\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-core href=\"#collapse1\" aria-expanded=\"false\" aria-controls=\"collapse1\">\n                                <h4 class=\"panel-title-edit mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".panel-title-edit\">What is a white paper?</h4>\n                                <div class=\"icon-wrapper\">\n                                    <span class=\"sign mbr-iconfont mobi-mbri-plus mobi-mbri\"></span>\n                                </div>\n                            </a>\n                        </div>\n                        <div id=\"collapse1\" class=\"panel-collapse noScroll collapse\" role=\"tabpanel\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\" data-bs-parent=\"#accordion\">\n                            <div class=\"panel-body\">\n                                <p class=\"panel-text mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".panel-text\">A white paper is a detailed report that presents information, analysis, and solutions on a specific topic. It's like a fancy essay but with more graphs and fewer typos.</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card\" mbr-if=\"cardAmount > 1\">\n                        <div class=\"card-header\" role=\"tab\" id=\"headingTwo\">\n                            <a role=\"button\" class=\"panel-title collapsed\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-core href=\"#collapse2\" aria-expanded=\"false\" aria-controls=\"collapse2\">\n                                <h4 class=\"panel-title-edit mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".panel-title-edit\">How to use the roadmap?</h4>\n                                <div class=\"icon-wrapper\">\n                                    <span class=\"sign mbr-iconfont mobi-mbri-plus mobi-mbri\"></span>\n                                </div>\n                            </a>\n                        </div>\n                        <div id=\"collapse2\" class=\"panel-collapse noScroll collapse\" role=\"tabpanel\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\" data-bs-parent=\"#accordion\">\n                            <div class=\"panel-body\">\n                                <p class=\"panel-text mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".panel-text\">Simply click on the widget to see our strategic plans laid out. It's like a treasure map, but instead of gold, you find success.</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card\" mbr-if=\"cardAmount > 2\">\n                        <div class=\"card-header\" role=\"tab\" id=\"headingThree\">\n                            <a role=\"button\" class=\"panel-title collapsed\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-core href=\"#collapse3\" aria-expanded=\"false\" aria-controls=\"collapse3\">\n                                <h4 class=\"panel-title-edit mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".panel-title-edit\">Can I share this?</h4>\n                                <div class=\"icon-wrapper\">\n                                    <span class=\"sign mbr-iconfont mobi-mbri-plus mobi-mbri\"></span>\n                                </div>\n                            </a>\n                        </div>\n                        <div id=\"collapse3\" class=\"panel-collapse noScroll collapse\" role=\"tabpanel\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\" data-bs-parent=\"#accordion\">\n                            <div class=\"panel-body\">\n                                <p class=\"panel-text mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".panel-text\">Absolutely! Share it with your friends, colleagues, or that one person who always asks too many questions. Spread the knowledge!</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card\" mbr-if=\"cardAmount > 3\">\n                        <div class=\"card-header\" role=\"tab\" id=\"headingFour\">\n                            <a role=\"button\" class=\"panel-title collapsed\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-core href=\"#collapse4\" aria-expanded=\"false\" aria-controls=\"collapse4\">\n                                <h4 class=\"panel-title-edit mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".panel-title-edit\">Is it free to access?</h4>\n                                <div class=\"icon-wrapper\">\n                                    <span class=\"sign mbr-iconfont mobi-mbri-plus mobi-mbri\"></span>\n                                </div>\n                            </a>\n                        </div>\n                        <div id=\"collapse4\" class=\"panel-collapse noScroll collapse\" role=\"tabpanel\" aria-labelledby=\"headingFour\" data-parent=\"#accordion\" data-bs-parent=\"#accordion\">\n                            <div class=\"panel-body\">\n                                <p class=\"panel-text mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".panel-text\">Yes, this content is free! No hidden fees, no fine print, just pure, unadulterated information.</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card\" mbr-if=\"cardAmount > 4\">\n                        <div class=\"card-header\" role=\"tab\" id=\"headingFive\">\n                            <a role=\"button\" class=\"panel-title collapsed\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-core href=\"#collapse5\" aria-expanded=\"false\" aria-controls=\"collapse5\">\n                                <h4 class=\"panel-title-edit mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".panel-title-edit\">\n                                    Are virtual assistants always listening?\n                                </h4>\n                                <div class=\"icon-wrapper\">\n                                    <span class=\"sign mbr-iconfont mobi-mbri-plus mobi-mbri\"></span>\n                                </div>\n                            </a>\n                        </div>\n                        <div id=\"collapse5\" class=\"panel-collapse noScroll collapse\" role=\"tabpanel\" aria-labelledby=\"headingFive\" data-parent=\"#accordion\" data-bs-parent=\"#accordion\">\n                            <div class=\"panel-body\">\n                                <p class=\"panel-text mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".panel-text\">\n                                    Virtual assistants typically activate and listen for their wake words (e.g., \"Hey\n                                    Siri,\" \"OK Google,\" \"Alexa\") to start processing commands. They do not record or\n                                    transmit audio data until activated by the wake word, ensuring user privacy.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card\" mbr-if=\"cardAmount > 5\">\n                        <div class=\"card-header\" role=\"tab\" id=\"headingSix\">\n                            <a role=\"button\" class=\"panel-title collapsed\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-core href=\"#collapse6\" aria-expanded=\"false\" aria-controls=\"collapse6\">\n                                <h4 class=\"panel-title-edit mbr-fonts-style\" mbr-theme-style=\"display-7\" data-app-selector=\".panel-title-edit\">\n                                    How can I start using a VA?\n                                </h4>\n                                <div class=\"icon-wrapper\">\n                                    <span class=\"sign mbr-iconfont mobi-mbri-plus mobi-mbri\"></span>\n                                </div>\n                            </a>\n                        </div>\n                        <div id=\"collapse6\" class=\"panel-collapse noScroll collapse\" role=\"tabpanel\" aria-labelledby=\"headingSix\" data-parent=\"#accordion\" data-bs-parent=\"#accordion\">\n                            <div class=\"panel-body\">\n                                <p class=\"panel-text mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".panel-text\">\n                                    To start using a virtual assistant, you typically need a compatible device such as a\n                                    smartphone, smart speaker, or computer that supports the virtual assistant platform.\n                                    Install the virtual assistant app or enable the feature on your device, then follow\n                                    the setup instructions to configure preferences and permissions.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>",
          "_name": "list01",
          "_sourceTheme": "progressm5",
          "_cid": "uGvjrkAio8",
          "_anchor": "faq-1-uGvjrkAio8",
          "alias": false,
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        }
      ]
    },
    "page7.html": {
      "settings": {
        "title": "HOST GUIDE",
        "order": "7"
      },
      "components": [
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "\n\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Greek Survivor Game - Host Guide</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        h1, h2, h3 {\n            color: #2c3e50;\n        }\n        h1 {\n            border-bottom: 2px solid #3498db;\n            padding-bottom: 10px;\n        }\n        h2 {\n            margin-top: 30px;\n            border-bottom: 1px solid #ddd;\n            padding-bottom: 5px;\n        }\n        h3 {\n            margin-top: 20px;\n        }\n        ul, ol {\n            padding-left: 25px;\n        }\n        .section {\n            background-color: #f9f9f9;\n            border-radius: 5px;\n            padding: 15px;\n            margin-bottom: 20px;\n            border-left: 4px solid #3498db;\n        }\n        .important {\n            background-color: #fef9e7;\n            border-left: 4px solid #f1c40f;\n        }\n        .print-button {\n            background-color: #3498db;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 16px;\n            margin-bottom: 20px;\n        }\n        .print-button:hover {\n            background-color: #2980b9;\n        }\n    </style>\n\n\n    <button class=\"print-button\" onclick=\"window.print()\">Print Guide</button>\n\n    <h1>Greek Survivor Game - Host Guide</h1>\n\n    <div class=\"section\">\n        <h2>Quick Start Guide for Hosts</h2>\n        <p>This guide will help you set up and run a Greek Survivor Game for your players. Follow these simple steps:</p>\n    </div>\n\n    <div class=\"section\">\n        <h2>Before the Game</h2>\n        <ol>\n            <li><strong>Start the application</strong> by clicking the \"Run\" button.</li>\n            <li><strong>Choose a league</strong> (NFL, NBA, NHL, etc.) from the dropdown menu.</li>\n            <li><strong>Set up the betting details</strong>:\n                <ul>\n                    <li>Enter bet amount (e.g., $20)</li>\n                    <li>Choose how many teams each player can select (3, 5, 7, or 10)</li>\n                    <li>Select either \"Real Money\" or \"Fun Bet\"</li>\n                    <li>Pick a payment method (Venmo, Cash App, PayPal, Hand to Hand)</li>\n                    <li>Choose a payout structure (Even Split, Winner Takes All, or Weighted Split)</li>\n                </ul>\n            </li>\n        </ol>\n    </div>\n\n    <div class=\"section\">\n        <h2>Adding Players</h2>\n        <ol>\n            <li><strong>Enter each player's name</strong> and optional email in the \"Player Management\" section.</li>\n            <li><strong>Click \"Add Player\"</strong> for each person joining the game.</li>\n            <li><strong>Optional</strong>: Click \"Generate AI Player\" to add a computer opponent.</li>\n        </ol>\n    </div>\n\n    <div class=\"section\">\n        <h2>During the Game</h2>\n        <ol>\n            <li><strong>Show available games</strong> by selecting a league. Games will display with teams, odds, and betting options.</li>\n            <li><strong>Help players make selections</strong> by clicking on betting options (ML, Spread, Over/Under).</li>\n            <li><strong>Track selections</strong> in the \"Tracked Games\" section.</li>\n            <li><strong>Share the game</strong> using the \"Share Game\" options if players are remote.</li>\n            <li><strong>Simulate results</strong> with the \"Simulate Results\" button for testing or fun bets.</li>\n        </ol>\n    </div>\n\n    <div class=\"section\">\n        <h2>After the Game</h2>\n        <ol>\n            <li><strong>Distribute winnings</strong> according to your chosen payout structure.</li>\n            <li><strong>Print tickets</strong> or receipts if needed for record-keeping.</li>\n            <li><strong>Reset the game</strong> using the \"Reset All\" button to start fresh.</li>\n        </ol>\n    </div>\n\n    <div class=\"section important\">\n        <h2>Troubleshooting</h2>\n        <ul>\n            <li>If odds aren't updating, click \"Refresh Live Odds\"</li>\n            <li>If you need to remove a player, click the \"Remove\" button on their player card</li>\n            <li>For payment issues, verify details in the payment settings section</li>\n            <li>If the screen freezes, refresh the page or restart the application</li>\n        </ul>\n    </div>\n\n    <div class=\"section\">\n        <h2>Admin Access</h2>\n        <p>To access admin settings (for advanced users):</p>\n        <ol>\n            <li>Click \"Super User Dashboard\" at the bottom of the page</li>\n            <li>Enter the password (default is \"admin123\")</li>\n            <li>Use tabs to navigate between License Management, PNL Dashboard, and other settings</li>\n        </ol>\n    </div>\n\n    <p>Contact support@greeksurvivorgame.com for additional assistance.</p>\n\n    [JS_CODE_0]\n\n\n",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_anchor": "custom-html-16",
          "_PHPplaceholders": [],
          "_JSplaceholders": [
            "<script>\n        // Print functionality is handled by the print button\n        document.title = \"Greek Survivor Game - Host Guide\"; // Set title for printed document\n    </script>"
          ]
        }
      ]
    },
    "page8.html": {
      "settings": {
        "title": "Install GUide",
        "order": "8"
      },
      "components": [
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "\n\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Greek Survivor Game - Installation Guide</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        h1, h2, h3 {\n            color: #2c3e50;\n        }\n        h1 {\n            border-bottom: 2px solid #3498db;\n            padding-bottom: 10px;\n        }\n        h2 {\n            margin-top: 30px;\n            border-bottom: 1px solid #ddd;\n            padding-bottom: 5px;\n        }\n        h3 {\n            margin-top: 20px;\n        }\n        ul, ol {\n            padding-left: 25px;\n        }\n        .section {\n            background-color: #f9f9f9;\n            border-radius: 5px;\n            padding: 15px;\n            margin-bottom: 20px;\n            border-left: 4px solid #3498db;\n        }\n        .troubleshooting {\n            background-color: #fef9e7;\n            border-left: 4px solid #f1c40f;\n        }\n        .print-button {\n            background-color: #3498db;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 16px;\n            margin-bottom: 20px;\n        }\n        .print-button:hover {\n            background-color: #2980b9;\n        }\n    </style>\n\n\n    <button class=\"print-button\" onclick=\"window.print()\">Print Guide</button>\n    <button class=\"print-button\" style=\"background-color: #e74c3c;\" onclick=\"window.generateInstallationGuidePDF()\">Download PDF</button>\n    <div id=\"statusIndicator\" style=\"display: none; padding: 10px; background-color: rgba(51, 255, 51, 0.2); border-radius: 5px; margin-top: 10px;\"></div>\n\n    <h1>Greek Survivor Game - Installation Guide</h1>\n\n    <p>The Greek Survivor Game can be installed on various devices as a Progressive Web App (PWA), allowing it to work offline and providing a more app-like experience.</p>\n\n    <div class=\"section\">\n        <h2>Installing on Desktop (Windows, Mac, Chrome OS)</h2>\n        \n        <h3>Using Chrome or Edge:</h3>\n        <ol>\n            <li>Visit the Greek Survivor Game website</li>\n            <li>Look for the \"Install App\" button in the header</li>\n            <li>Click the button and follow the prompts to install</li>\n            <li>The app will be installed on your device and available from your desktop/start menu</li>\n        </ol>\n        \n        <h3>Alternatively:</h3>\n        <ol>\n            <li>Visit the Greek Survivor Game website</li>\n            <li>In the address bar, look for the install icon (⊕) on the right</li>\n            <li>Click this icon and select \"Install\"</li>\n            <li>The app will be installed on your device</li>\n        </ol>\n    </div>\n\n    <div class=\"section\">\n        <h2>Installing on iOS (iPhone/iPad)</h2>\n        <ol>\n            <li>Open Safari and visit the Greek Survivor Game website</li>\n            <li>Tap the Share button (rectangle with an arrow pointing up)</li>\n            <li>Scroll down and tap \"Add to Home Screen\"</li>\n            <li>Name the app and tap \"Add\"</li>\n            <li>The app icon will appear on your home screen</li>\n        </ol>\n    </div>\n\n    <div class=\"section\">\n        <h2>Installing on Android</h2>\n        <ol>\n            <li>Open Chrome and visit the Greek Survivor Game website</li>\n            <li>Tap the menu button (three dots) in the top-right corner</li>\n            <li>Select \"Add to Home screen\" or \"Install app\"</li>\n            <li>Follow the prompts to add the app</li>\n            <li>The app icon will appear on your home screen</li>\n        </ol>\n    </div>\n\n    <div class=\"section\">\n        <h2>Features of the Installed App</h2>\n        <ul>\n            <li>Works offline or with poor internet connections</li>\n            <li>Loads faster than the website</li>\n            <li>Looks and feels like a native app</li>\n            <li>No browser address bar or navigation buttons</li>\n            <li>Updates automatically when online</li>\n        </ul>\n    </div>\n\n    <div class=\"section troubleshooting\">\n        <h2>Troubleshooting</h2>\n        <p>If you encounter issues installing the app:</p>\n        <ol>\n            <li>Make sure you're using a supported browser (Chrome, Edge, Safari, Firefox)</li>\n            <li>Check that you have an internet connection when first installing</li>\n            <li>Try refreshing the page before attempting installation</li>\n            <li>Clear your browser cache and try again</li>\n            <li>For mobile devices, ensure you have enough storage space</li>\n        </ol>\n    </div>\n\n    <p>For further assistance, contact support at support@greeksurvivorgame.com.</p>\n\n    [JS_CODE_0]\n    [JS_CODE_1]\n\n\n",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_anchor": "custom-html-1c",
          "_PHPplaceholders": [],
          "_JSplaceholders": [
            "<script src=\"download-utils.js\"></script>",
            "<script>\n        // Print functionality is handled by the print button\n        document.title = \"Greek Survivor Game - Installation Guide\"; // Set title for printed document\n    </script>"
          ]
        }
      ]
    },
    "page9.html": {
      "settings": {
        "title": "Page 9",
        "order": "5"
      },
      "components": [
        {
          "alias": false,
          "_styles": {
            ".navbar-dropdown": {
              "& when not (@transparent)": {
                "background-color": "@menuBgColor !important"
              },
              "& when (@transparent)": {
                "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
              },
              "padding": "0",
              "& when (@sticky)": {
                "position": "absolute !important"
              }
            },
            "background-color": "transparent",
            ".navbar.navbar-expand-lg .dropdown": {
              ".dropdown-menu": {
                "& when not (@transparent)": {
                  "background-color": "@menuBgColor !important"
                },
                "& when (@transparent)": {
                  "background": "rgba(red(@menuBgColor), green(@menuBgColor), blue(@menuBgColor), @opacity) !important"
                },
                ".dropdown-submenu": {
                  "margin": "0",
                  "left": "100%"
                },
                "background": "@menuBgColor"
              }
            },
            ".menu_box": {
              "flex-wrap": "nowrap",
              "@media (max-width: 991px)": {
                ".navbar.opened, .navbar-collapse": {
                  "background-color": "@menuBgColor !important",
                  "transition": "all 0s ease 0s"
                },
                "flex-direction": "column",
                "align-items": "flex-start"
              }
            },
            "& when not (@sticky)": {
              ".navbar-dropdown": {
                "position": "relative !important"
              }
            },
            "& when (@sticky)": {
              "z-index": "1000",
              "width": "100%",
              "nav.navbar": {
                "position": "fixed",
                "padding-top": "1rem",
                "padding-bottom": "1rem"
              }
            },
            ".icons-menu-main": {
              "display": "flex",
              "flex-wrap": "wrap",
              "min-width": "150px",
              "margin-left": "24px",
              "@media (max-width: 991px)": {
                "min-width": "auto",
                "max-width": "100%",
                "margin": "1rem 0 1rem 1rem"
              }
            },
            ".mbr-section-btn-main": {
              "@media (max-width: 991px)": {
                "margin-top": "1rem"
              },
              ".btn": {
                "margin": "8px",
                "min-width": "120px",
                "white-space": "nowrap"
              }
            },
            ".btn": {
              "min-height": "auto",
              "box-shadow": "none",
              "margin-top": "0",
              "&:hover": {
                "box-shadow": "none"
              }
            },
            ".nav-item": {
              "margin": "4px 0",
              "@media (min-width: 992px)": {
                "margin": "4px 40px 4px 0"
              },
              "& when (@showLogo), (@showBrand)": {
                "@media (min-width: 992px)": {
                  "margin": "4px 0"
                }
              },
              "@media (max-width: 991px)": {
                "margin": "0 !important"
              },
              ".nav-link": {
                "display": "flex",
                "justify-content": "center",
                "padding": "12px",
                "transition": "all 0.3s ease-out",
                "border-radius": "4px !important",
                "border": "1px solid transparent",
                "position": "relative",
                "opacity": "1",
                "@media (max-width: 992px)": {
                  "justify-content": "flex-start"
                },
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "bottom": "-10px",
                  "width": "0",
                  "height": "2px",
                  "background-color": "@itemsActive",
                  "transition": "all 0.3s ease-out"
                },
                "&:hover, &:focus": {
                  "background-color": "@itemsBg",
                  "color": "@itemsActive !important",
                  "&::before": {
                    "width": "80%"
                  }
                }
              }
            },
            ".dropdown-menu": {
              "border-radius": "0",
              "box-shadow": "none",
              "text-align": "left",
              "@media (min-width: 992px)": {
                "padding": "18px 34px 22px",
                "min-width": "250px",
                "top": "auto !important",
                "left": "-40px !important",
                "&.dropdown-submenu": {
                  "left": "215px !important",
                  "top": "-45% !important"
                }
              }
            },
            "@media (max-width: 991px)": {
              ".dropdown-menu .dropdown-toggle[data-toggle=\"dropdown-submenu\"]::after, .link.dropdown-toggle::after": {
                "display": "inline-block",
                "width": "7px",
                "height": "7px",
                "margin-left": ".5rem",
                "margin-bottom": "2px",
                "content": "\"\"",
                "border": "2px solid",
                "border-left": "none",
                "border-top": "none",
                "transform": "rotate(-45deg)",
                "right": "15px",
                "position": "absolute",
                "margin-top": "-2px"
              },
              ".show.dropdown-toggle[aria-expanded=\"true\"]::after": {
                "transform": "rotate(45deg)",
                "margin-top": "-4px"
              },
              ".offcanvas_box": {
                "display": "none"
              }
            },
            ".dropdown-item": {
              "border": "none",
              "font-weight": "300 !important"
            },
            ".nav-dropdown .link": {
              "font-weight": "400 !important",
              "padding": "0 !important",
              "margin": "0 !important"
            },
            ".nav-dropdown .link.dropdown-toggle::after": {
              "margin-left": "0.5rem",
              "margin-top": "0"
            },
            ".container": {
              "display": "flex",
              "margin": "auto"
            },
            ".iconfont-wrapper": {
              "color": "@iconsColor",
              "font-size": "26px",
              "margin-right": "10px",
              "margin-bottom": "5px",
              "&:last-child": {
                "margin-right": "0"
              },
              "transition": "all 0.3s ease-in-out",
              "&:hover": {
                ".mbr-iconfont": {
                  "opacity": ".7"
                }
              }
            },
            ".navbar-nav": {
              "@media (min-width: 992px)": {
                "margin": "0"
              }
            },
            ".dropdown-menu, .navbar.opened": {
              "background-color": "@transparent !important"
            },
            ".nav-item:focus, .nav-link:focus": {
              "outline": "none"
            },
            ".dropdown .dropdown-menu .dropdown-item": {
              "width": "auto",
              "transition": "all 0.25s ease-in-out",
              "&::after": {
                "right": "0.5rem"
              },
              ".mbr-iconfont": {
                "margin-right": "0.5rem",
                "vertical-align": "sub",
                "&:before": {
                  "display": "inline-block",
                  "transform": "scale(1, 1)",
                  "transition": "all 0.25s ease-in-out"
                }
              }
            },
            ".collapsed": {
              ".dropdown-menu .dropdown-item:before": {
                "display": "none"
              },
              ".dropdown .dropdown-menu .dropdown-item": {
                "padding": "0.235em 1.5em 0.235em 1.5em !important",
                "transition": "none",
                "margin": "0 !important"
              }
            },
            ".navbar": {
              "min-height": "70px",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "border-bottom-width": "0",
              "@media (max-width: 992px)": {
                "min-height": "30px",
                "max-height": "none"
              },
              "&:not(.navbar-short)": {},
              "&.opened": {
                "transition": "all 0.3s"
              },
              ".dropdown-item": {
                "padding": "0",
                "margin": "8px 0"
              },
              ".navbar-logo img": {
                "max-width": "62px",
                "min-height": "62px",
                "object-fit": "contain",
                "border-radius": "100% !important"
              },
              ".navbar-collapse": {
                "justify-content": "center",
                "& when (@showLogo), (@showBrand)": {
                  "justify-content": "flex-end"
                },
                "z-index": "1"
              },
              "&.collapsed": {
                "justify-content": "center",
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto"
                  }
                },
                "ul.navbar-nav": {
                  "li": {
                    "margin": "auto"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0.25rem 1.5rem",
                  "text-align": "left"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "@media (max-width: 991px)": {
                ".nav-item": {
                  "padding": ".5rem 0"
                },
                ".navbar-collapse": {
                  "padding": "34px 0",
                  "border-radius": "16px",
                  "width": "100%"
                },
                ".nav-item .nav-link::before": {
                  "display": "none"
                },
                "&.opened": {
                  ".dropdown-menu": {
                    "top": "0"
                  }
                },
                ".dropdown-menu": {
                  "padding": "6px 0 6px 15px",
                  ".dropdown-submenu": {
                    "left": "0 !important"
                  },
                  ".dropdown-item:after": {
                    "right": "auto",
                    "margin-top": "-0.4rem"
                  }
                },
                ".navbar-logo": {
                  "img": {
                    "height": "3rem !important"
                  }
                },
                "ul.navbar-nav": {
                  "overflow": "hidden",
                  "li": {
                    "margin": "0"
                  }
                },
                ".dropdown-menu .dropdown-item": {
                  "padding": "0 !important",
                  "margin": "0",
                  "margin-top": "8px",
                  "text-align": "left"
                },
                ".navbar-brand": {
                  "flex-shrink": "initial",
                  "flex-basis": "auto",
                  "word-break": "break-word",
                  "padding-right": "0",
                  "width": "100%",
                  "justify-content": "space-between"
                },
                ".navbar-toggler": {
                  "flex-basis": "auto"
                },
                ".icons-menu": {
                  "padding": "0"
                }
              },
              "&.navbar-short": {
                "min-height": "60px",
                ".navbar-logo": {
                  "img": {
                    "height": "2.5rem !important"
                  }
                },
                ".navbar-brand": {
                  "min-height": "60px",
                  "padding": "0"
                }
              }
            },
            ".navbar-brand": {
              "min-height": "70px",
              "flex-shrink": "0",
              "align-items": "center",
              "margin-right": "0",
              "padding": "10px 0",
              "transition": "all 0.3s",
              "word-break": "break-word",
              "z-index": "1",
              ".navbar-caption": {
                "line-height": "inherit !important",
                "font-weight": "400"
              },
              ".navbar-logo a": {
                "outline": "none"
              }
            },
            ".dropdown-item.active, .dropdown-item:active": {
              "background-color": "transparent"
            },
            ".navbar-expand-lg .navbar-nav .nav-link": {
              "padding": "6px 16px !important"
            },
            ".nav-dropdown .link.dropdown-toggle": {
              "margin-right": "1.667em",
              "&[aria-expanded=\"true\"]": {
                "margin-right": "0",
                "padding": "0.667em 1.667em"
              }
            },
            ".navbar .dropdown.open > .dropdown-menu": {
              "display": "block"
            },
            "ul.navbar-nav": {
              "flex-wrap": "wrap",
              "padding": "0"
            },
            ".navbar-buttons": {
              "text-align": "center",
              "min-width": "170px"
            },
            "button.navbar-toggler": {
              "outline": "none",
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "cursor": "pointer",
              "transition": "all 0.2s",
              "position": "relative",
              "align-self": "center",
              "color": "@menuBgColor",
              "background": "@hamburger",
              ".hamburger span": {
                "position": "absolute",
                "right": "10px",
                "margin-top": "14px",
                "width": "26px",
                "height": "2px",
                "border-right": "5px",
                "background-color": "@hamburgerColor",
                "&:nth-child(1)": {
                  "top": "0",
                  "transition": "all 0.2s"
                },
                "&:nth-child(2)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(3)": {
                  "top": "8px",
                  "transition": "all 0.15s"
                },
                "&:nth-child(4)": {
                  "top": "16px",
                  "transition": "all 0.2s"
                }
              }
            },
            "nav.opened .hamburger span": {
              "&:nth-child(1)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              },
              "&:nth-child(2)": {
                "transform": "rotate(45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(3)": {
                "transform": "rotate(-45deg)",
                "transition": "all 0.25s"
              },
              "&:nth-child(4)": {
                "top": "8px",
                "width": "0",
                "opacity": "0",
                "right": "50%",
                "transition": "all 0.2s"
              }
            },
            "a.nav-link": {
              "display": "flex",
              "align-items": "center",
              "justify-content": "flex-start"
            },
            ".icons-menu": {
              "flex-wrap": "nowrap",
              "display": "flex",
              "justify-content": "center",
              "padding": "0",
              "text-align": "center",
              "margin-bottom": "35px"
            },
            "@media screen and (~'-ms-high-contrast: active'), (~'-ms-high-contrast: none')": {
              ".navbar": {
                "height": "70px",
                "&.opened": {
                  "height": "auto"
                }
              },
              ".nav-item .nav-link:hover::before": {
                "width": "175%",
                "max-width": "calc(100% ~\"+\" 2rem)",
                "left": "-1rem"
              }
            },
            ".navbar-dropdown .navbar-logo": {
              "margin-right": "10px"
            },
            ".navbar-caption:hover": {
              "color": "@primaryColor"
            },
            ".dropdown-menu.dropdown-submenu": {
              "@media (min-width: 992px)": {
                "left": "175px !important",
                "top": "-45% !important"
              }
            },
            ".text_widget": {
              "margin-bottom": "32px",
              "a": {
                "transition": "all 0.3s ease-out",
                "&:hover, &:focus": {
                  "opacity": ".8"
                }
              }
            },
            "@media (min-width: 992px)": {
              ".navbar-nav.nav-dropdown": {
                "display": "-webkit-flex",
                "width": "100%",
                "justify-content": "flex-start",
                "min-width": "200px",
                "padding-left": "48px"
              }
            },
            ".navbar-caption": {
              "color": "#ffffff"
            },
            ".mbr-section-subtitle, .text_widget, .mbr-section-btn": {
              "text-align": "center"
            },
            "a[class*=\"text-\"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption):hover": {
              "background-image": "none"
            }
          },
          "_name": "menu01",
          "_sourceTheme": "progressm5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"menu menu01 progressm5\" group=\"Menu\" plugins=\"DropDown, TouchSwipe\" always-top global once=\"menu\" not-draggable position-absolute>\n\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" name=\"fullWidth\" title=\"Full Width\" checked>\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Logo\" name=\"showLogo\">\n        <input type=\"checkbox\" title=\"Brand Name\" name=\"showBrand\">\n        <input type=\"checkbox\" title=\"Menu Items\" name=\"showItems\" condition=\"false\">\n        <input type=\"color\" title=\"Items Active Color\" name=\"itemsActive\" value=\"#078efb\" condition=\"showItems\">\n        <input type=\"color\" title=\"Items Active BG\" name=\"itemsBg\" value=\"#252525\" condition=\"showItems\">\n        <input type=\"checkbox\" title=\"Buttons\" name=\"showButtons\" checked>\n        <input type=\"checkbox\" title=\"Icons\" name=\"showIcons\" checked>\n        <input type=\"range\" title=\"Amount\" name=\"iconsAmount\" min=\"0\" max=\"2\" step=\"1\" value=\"2\" condition=\"showIcons\">\n        <input type=\"color\" title=\"Icons Color\" name=\"iconsColor\" value=\"#0844ff\" condition=\"showIcons\">\n        <header>Styles</header>\n        <input type=\"checkbox\" title=\"Sticky\" name=\"sticky\">\n        <input type=\"checkbox\" title=\"Collapsed\" name=\"collapsed\" condition=\"false\">\n        <input type=\"checkbox\" title=\"Transparent\" name=\"transparent\">\n        <input type=\"range\" title=\"Opacity\" name=\"opacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"1\" condition=\"transparent\">\n        <input type=\"color\" title=\"Color Menu\" name=\"menuBgColor\" value=\"#060606\">\n        <input type=\"color\" title=\"Hamburger\" name=\"hamburgerColor\" value=\"#078efb\">\n        <input type=\"color\" title=\"Hamburger Container\" name=\"hamburger\" value=\"#252525\">\n    </mbr-parameters>\n\n    <nav class=\"navbar navbar-dropdown\" mbr-class=\"{'navbar-fixed-top':sticky,\n                     'navbar-expand-lg':!collapsed,\n                     'collapsed':collapsed}\">\n        <div class=\"menu_box\" mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n            <div class=\"navbar-brand d-flex\">\n                <span mbr-if=\"showLogo\" class=\"navbar-logo\">\n                    <a href=\"page4.html#custom-html-n\">\n                        <img src=\"@PROJECT_PATH@/assets/images/flux_dev_a_vibrant_banner_featuring_a_stunning_anime_girl_syna-124x82.jpg\" alt=\"Mobirise\" mbr-style=\"{'height': logoSize + 'rem'}\">\n                    </a>\n                </span>\n                <span mbr-if=\"showBrand\" mbr-buttons mbr-theme-style=\"display-7\" class=\"navbar-caption-wrap\" data-toolbar=\"-mbrBtnMove,-mbrBtnAdd,-mbrBtnRemove\"><a class=\"navbar-caption\" data-app-selector=\".navbar-caption\" href=\"@THEME_PATH@/components/index.html\" data-app-placeholder=\"Type Text\">VA</a></span>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-bs-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <div class=\"hamburger\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul mbr-menu class=\"navbar-nav nav-dropdown\" mbr-theme-style=\"display-4\" mbr-class=\"{'nav-right': !showButtons,'navbar-nav-top-padding': isPublish && !showBrand && !showLogo}\"><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"index.html#header02-1\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">SYNTHIA CHAT</a>\n                    </li>\n                    <li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page4.html#custom-html-n\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">THE GREEK&nbsp;</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page1.html#custom-html-2\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Prediction Asst</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"page6.html#custom-html-10\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Under 21 FunBet</a></li><li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page9.html#custom-html-1h\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Download/Subscribe</a>\n                    </li><li class=\"nav-item\"><a class=\"nav-link link text-info text-primary\" href=\"RoadmapWhitepaper.html#custom-html-12\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Whitepaper</a></li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link link text-info text-primary\" href=\"page3.html#list02-b\" data-app-selector=\".nav-link,.dropdown-item\" data-app-placeholder=\"Type Text\">Laws</a>\n                    </li></ul>\n                <div mbr-buttons mbr-theme-style=\"display-4\" class=\"mbr-section-btn-main\" mbr-if=\"showButtons\" role=\"tablist\"><a class=\"btn btn-success-outline\" href=\"https://mobiri.se\" data-app-placeholder=\"Type Text\">\n                        Get started\n                    </a></div>\n                <div class=\"icons-menu-main\" mbr-if=\"showIcons\">\n                    <a class=\"iconfont-wrapper\" href=\"https://x.com/SYNA_AI_Sports\" target=\"_blank\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-macos socicon\"></span>\n                    </a>\n                    <a class=\"iconfont-wrapper\" href=\"https://mobiri.se\" target=\"_blank\" mbr-if=\"iconsAmount > 1\">\n                        <span mbr-icon class=\"p-2 mbr-iconfont socicon-telegram socicon\"></span>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </nav>\n</section>",
          "_JSplaceholders": [],
          "_PHPplaceholders": [],
          "_isUserblock": true,
          "_cid": "uFxNausSY5",
          "_protectedParams": [],
          "_global": true,
          "_once": "menu",
          "_params": {},
          "_anchor": "menu01-1f"
        },
        {
          "alias": false,
          "_styles": {
            "& when not (@fullScreen)": {
              "padding-top": "(@paddingTop * 1rem)",
              "padding-bottom": "(@paddingBottom * 1rem)"
            },
            "& when (@bg-type = 'color')": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = 'image')": {
              "background-image": "url(@bg-value)"
            },
            ".mbr-fallback-image.disabled": {
              "display": "none"
            },
            ".mbr-fallback-image": {
              "display": "block",
              "background-size": "cover",
              "background-position": "center center",
              "width": "100%",
              "height": "100%",
              "position": "absolute",
              "top": "0",
              "& when (@bg-type = 'video')": {
                "background-image": "url(@fallBackImage)"
              }
            },
            ".content-wrapper": {
              "position": "relative",
              "padding": "46px 24px",
              "overflow": "hidden",
              "border": "1px solid @border",
              "background-color": "@container",
              "@media (max-width: 992px)": {
                "padding": "24px 14px 0 14px"
              },
              "& when (@showTransparent)": {
                "background-color": "transparent",
                "&::before": {
                  "content": "''",
                  "position": "absolute",
                  "top": "0",
                  "left": "0",
                  "width": "100%",
                  "height": "100%",
                  "background-color": "@container",
                  "opacity": ".5"
                }
              },
              ".mbr-section-title": {
                "position": "relative",
                "z-index": "1",
                "margin-bottom": "48px",
                "@media (max-width: 992px)": {
                  "margin-bottom": "32px"
                },
                "span": {
                  "color": "@title"
                }
              },
              ".items-wrap": {
                "position": "relative",
                "z-index": "1",
                "justify-content": "center",
                "margin": "0 -7px",
                ".item": {
                  "padding": "0 7px",
                  "margin-bottom": "14px",
                  ".item-wrapper": {
                    "padding": "14px 24px 24px",
                    "border": "1px solid @border",
                    "height": "100%",
                    "box-shadow": "1px 0 1px @borderRight",
                    "@media (max-width: 992px)": {
                      "padding": "14px"
                    },
                    ".card-box": {
                      ".title-wrap": {
                        ".item-title": {
                          "padding": "14px 32px",
                          "background-color": "@titleBg",
                          "margin-bottom": "16px",
                          "@media (max-width: 992px)": {
                            "padding": "14px"
                          }
                        }
                      },
                      ".item-text": {
                        "margin-bottom": "0"
                      }
                    }
                  }
                }
              }
            },
            ".mbr-section-title": {
              "color": "#81f790",
              "text-align": "center"
            },
            ".item-title": {
              "color": "#ffffff",
              "text-align": "center"
            },
            ".item-text": {
              "color": "#ffffff",
              "text-align": "center"
            },
            ".item-title, .title-wrap": {
              "color": "#aef800"
            }
          },
          "_name": "features09",
          "_sourceTheme": "tradem5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"features09 tradem5\" group=\"Features\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" title=\"Full Screen\" name=\"fullScreen\">\n        <input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\" checked>\n        <input type=\"range\" inline title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"12\" step=\"1\" value=\"0\" condition=\"fullScreen == false\">\n        <input type=\"range\" inline title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"12\" step=\"1\" value=\"0\" condition=\"fullScreen == false\">\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Title\" name=\"showTitle\" checked>\n        <input type=\"color\" title=\"Secondary Color\" value=\"#bcfe1e\" name=\"title\" condition=\"showTitle\">\n        <input type=\"color\" title=\"Border\" value=\"#323046\" name=\"border\" selected>\n        <input type=\"color\" title=\"Container BG\" value=\"#292739\" name=\"container\" selected>\n        <input type=\"checkbox\" title=\"Container Transparent\" name=\"showTransparent\" checked>\n        <header>Cards</header>\n        <input type=\"checkbox\" title=\"Card Title\" name=\"showCardTitle\" checked>\n        <input type=\"color\" title=\"Title BG\" value=\"#555555\" name=\"titleBg\" condition=\"showCardTitle\">\n        <input type=\"checkbox\" title=\"Card Text\" name=\"showCardText\">\n        <input type=\"color\" title=\"Card Border Right\" value=\"#bcfe1e\" name=\"borderRight\" selected>\n        <header>Background</header>\n        <fieldset type=\"background\" name=\"bg\" parallax>\n            <input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/background2-1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#080813\" selected>\n        </fieldset>\n        <header condition=\"bg.type === 'video'\">Fallback Image</header>\n        <input type=\"image\" title=\"Fallback Image\" value=\"@PROJECT_PATH@/assets/images/background2-1.jpg\" name=\"fallBackImage\" condition=\"bg.type === 'video'\">\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\" checked>\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#080813\" condition=\"overlay && bg.type !== 'color'\">\n        <input type=\"range\" inline title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.7\" condition=\"overlay && bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-fallback-image disabled\" mbr-if=\"bg.type == 'video'\"></div>\n    <div class=\"mbr-overlay\" mbr-if=\"overlay && bg.type !== 'color'\" opacity=\"{{overlayOpacity}}\" bg-color=\"{{overlayColor}}\"></div>\n\n    <div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"content-wrapper\">\n                    <h2 class=\"mbr-section-title mbr-fonts-style\" data-app-selector=\".mbr-section-title\" mbr-theme-style=\"display-2\" mbr-if=\"showTitle\"><b>Download and Installation Help!!</b></h2>\n                    <div class=\"row items-wrap\">\n                        \n                        <div class=\"item features-without-image col-12 col-lg-3 active\">\n                            <div class=\"item-wrapper card-mini\">\n                                <div class=\"card-box\">\n                                    <div class=\"title-wrap\">\n                                        <h4 class=\"item-title mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".item-title, .title-wrap\" mbr-if=\"showCardTitle\"><b><a href=\"page8.html#custom-html-1c\" class=\"text-primary\">Install Guide</a></b></h4>\n                                    </div>\n                                    <p class=\"item-text mbr-fonts-style\" mbr-if=\"showCardText\" mbr-theme-style=\"display-4\" data-app-selector=\".item-text\">\n                                        AI agents manage the fast-paced nature of live betting by updating odds instantaneously and offering interactive suggestions to users during live events\n                                    </p>\n                                </div>\n                            </div>\n                        </div><div class=\"item features-without-image col-12 col-lg-3\">\n                            <div class=\"item-wrapper card-mini\">\n                                <div class=\"card-box\">\n                                    <div class=\"title-wrap\">\n                                        <h4 class=\"item-title mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".item-title, .title-wrap\" mbr-if=\"showCardTitle\"><b><a href=\"page7.html#custom-html-16\" class=\"text-primary\">Host Guide</a></b></h4>\n                                    </div>\n                                    <p class=\"item-text mbr-fonts-style\" mbr-if=\"showCardText\" mbr-theme-style=\"display-4\" data-app-selector=\".item-text\">\n                                        AI agents manage the fast-paced nature of live betting by updating odds instantaneously and offering interactive suggestions to users during live events\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>",
          "_anchor": "features09-1i",
          "_isUserblock": true,
          "_cid": "uHK5DpbzHw",
          "_protectedParams": [],
          "_global": false,
          "_once": false,
          "_params": {}
        },
        {
          "_customTemplate": true,
          "_afterNavbarItem": false,
          "_customHTML": "\n\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Greek Survivor Game - Complete Installer</title>\n    <style>\n        :root {\n            --neon-green: #00FF00;\n            --dark-bg: #0C0C0C;\n            --terminal-green: #33FF33;\n            --highlight-color: #3a87ad;\n        }\n        \n        body {\n            background-color: var(--dark-bg);\n            color: var(--terminal-green);\n            font-family: monospace;\n            margin: 0;\n            padding: 0;\n        }\n        \n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        \n        header {\n            text-align: center;\n            padding: 20px 0;\n            border-bottom: 2px solid var(--neon-green);\n            margin-bottom: 20px;\n        }\n        \n        h1, h2, h3 {\n            color: var(--neon-green);\n            margin-top: 0;\n        }\n        \n        .install-container {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            background-color: rgba(0, 0, 0, 0.8);\n            border-radius: 10px;\n            box-shadow: 0 0 20px rgba(0, 255, 0, 0.3);\n        }\n        \n        .step {\n            padding: 15px;\n            margin-bottom: 20px;\n            border-left: 4px solid #33FF33;\n            background-color: rgba(0, 30, 0, 0.4);\n        }\n        \n        .license-tiers {\n            display: flex;\n            justify-content: space-between;\n            margin: 30px 0;\n            flex-wrap: wrap;\n        }\n        \n        .tier {\n            width: 30%;\n            min-width: 220px;\n            padding: 20px;\n            margin-bottom: 20px;\n            background-color: rgba(0, 20, 0, 0.7);\n            border-radius: 8px;\n            text-align: center;\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n        \n        .tier:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 5px 15px rgba(0, 255, 0, 0.4);\n        }\n        \n        .tier.highlight {\n            border: 2px solid #33FF33;\n            box-shadow: 0 0 15px rgba(0, 255, 0, 0.5);\n        }\n        \n        .tier h3 {\n            color: #33FF33;\n            font-size: 1.5rem;\n            margin-bottom: 15px;\n        }\n        \n        .tier p.price {\n            font-size: 1.8rem;\n            margin: 20px 0;\n            color: white;\n        }\n        \n        .tier ul {\n            text-align: left;\n            margin-bottom: 20px;\n            padding-left: 20px;\n        }\n        \n        .tier ul li {\n            margin-bottom: 8px;\n            list-style-type: none;\n            position: relative;\n            padding-left: 20px;\n        }\n        \n        .tier ul li:before {\n            content: \"✓\";\n            color: #33FF33;\n            position: absolute;\n            left: 0;\n        }\n        \n        .install-btn, .purchase-btn {\n            display: inline-block;\n            padding: 12px 24px;\n            background-color: #33FF33;\n            color: black;\n            border: none;\n            border-radius: 5px;\n            font-size: 1rem;\n            cursor: pointer;\n            transition: background-color 0.3s ease;\n            margin-top: 15px;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        \n        .install-btn:hover, .purchase-btn:hover {\n            background-color: #4CFF4C;\n        }\n        \n        .install-btn.disabled {\n            background-color: #555;\n            cursor: not-allowed;\n        }\n        \n        .system-requirements {\n            margin-top: 40px;\n            background-color: rgba(0, 20, 0, 0.6);\n            padding: 20px;\n            border-radius: 8px;\n        }\n        \n        .system-requirements h3 {\n            color: #33FF33;\n            margin-bottom: 15px;\n        }\n        \n        .modal-overlay {\n            display: none;\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.8);\n            z-index: 999;\n        }\n        \n        #paymentModal {\n            display: none;\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 450px;\n            background-color: #0C0C0C;\n            border: 2px solid #33FF33;\n            border-radius: 10px;\n            padding: 20px;\n            z-index: 1000;\n            box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);\n            max-width: 90%;\n        }\n        \n        .close-modal {\n            position: absolute;\n            top: 10px;\n            right: 15px;\n            font-size: 24px;\n            color: #33FF33;\n            background: none;\n            border: none;\n            cursor: pointer;\n        }\n        \n        .payment-form {\n            display: flex;\n            flex-direction: column;\n            gap: 15px;\n        }\n        \n        .payment-form label {\n            color: #33FF33;\n        }\n        \n        .payment-form input, .payment-form select {\n            padding: 10px;\n            border-radius: 5px;\n            border: 1px solid #33FF33;\n            background-color: rgba(0, 20, 0, 0.7);\n            color: #FFF;\n        }\n        \n        .payment-form button {\n            padding: 12px;\n            background-color: #33FF33;\n            color: black;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            font-weight: bold;\n            margin-top: 10px;\n        }\n        \n        .payment-form button:hover {\n            background-color: #4CFF4C;\n        }\n        \n        .license-confirmation {\n            display: none;\n            text-align: center;\n            margin-top: 20px;\n            padding: 20px;\n            border: 2px dashed #33FF33;\n            border-radius: 10px;\n        }\n        \n        .license-key {\n            font-family: monospace;\n            padding: 10px;\n            background-color: rgba(0, 50, 0, 0.7);\n            border-radius: 5px;\n            margin: 10px 0;\n            word-break: break-all;\n        }\n        \n        .progress-container {\n            background-color: rgba(0, 0, 0, 0.3);\n            border-radius: 5px;\n            height: 20px;\n            margin-top: 20px;\n            position: relative;\n        }\n        \n        .progress-bar {\n            background-color: #33FF33;\n            height: 100%;\n            border-radius: 5px;\n            width: 0%;\n            transition: width 0.5s;\n        }\n        \n        .progress-text {\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            color: white;\n            font-weight: bold;\n            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);\n        }\n        \n        .download-actions {\n            margin-top: 20px;\n            display: flex;\n            justify-content: space-between;\n        }\n        \n        .download-stats {\n            background-color: rgba(0, 30, 0, 0.5);\n            padding: 15px;\n            border-radius: 5px;\n            margin-top: 30px;\n        }\n        \n        .download-stats h3 {\n            margin-top: 0;\n            border-bottom: 1px solid rgba(0, 255, 0, 0.3);\n            padding-bottom: 10px;\n        }\n        \n        .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 15px;\n            margin-top: 15px;\n        }\n        \n        .stat-item {\n            background-color: rgba(0, 0, 0, 0.3);\n            padding: 10px;\n            border-radius: 5px;\n            text-align: center;\n        }\n        \n        .stat-value {\n            font-size: 1.5em;\n            color: #33FF33;\n            font-weight: bold;\n        }\n        \n        .stat-label {\n            font-size: 0.8em;\n            opacity: 0.8;\n        }\n        \n        @keyframes glow {\n            from {\n                text-shadow: 0 0 5px #33FF33, 0 0 10px #33FF33;\n            }\n            to {\n                text-shadow: 0 0 10px #33FF33, 0 0 20px #33FF33;\n            }\n        }\n        \n        .glow-text {\n            animation: glow 1.5s ease-in-out infinite alternate;\n        }\n        \n        @media (max-width: 768px) {\n            .license-tiers {\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .tier {\n                width: 100%;\n                margin-bottom: 20px;\n            }\n            \n            #paymentModal {\n                width: 90%;\n            }\n        }\n    </style>\n\n\n    <div class=\"container\">\n        <header>\n            <h1 class=\"glow-text\">Greek Survivor Game</h1>\n            <div>Installation &amp; Licensing Portal</div>\n        </header>\n        \n        <div class=\"install-container\">\n            <div class=\"step\">\n                <h3>Step 1: Choose Your License Type</h3>\n                <p>Select the license tier that best fits your needs:</p>\n                \n                <div class=\"license-tiers\">\n                    <div class=\"tier\">\n                        <h3>Personal</h3>\n                        <p>For individual use</p>\n                        <p class=\"price\">$29.99</p>\n                        <ul>\n                            <li>Core betting system</li>\n                            <li>Basic odds system</li>\n                            <li>Player management</li>\n                            <li>Fun bet mode</li>\n                            <li>10-day free trial</li>\n                        </ul>\n                        <button class=\"purchase-btn\" data-tier=\"personal\">Purchase</button>\n                    </div>\n                    \n                    <div class=\"tier\">\n                        <h3>Bar/Club</h3>\n                        <p>For bar or club use</p>\n                        <p class=\"price\">$99.99/month</p>\n                        <ul>\n                            <li>All Personal features</li>\n                            <li>Live odds updates</li>\n                            <li>Admin console access</li>\n                            <li>PNL tracking</li>\n                            <li>Ticket printing</li>\n                        </ul>\n                        <button class=\"purchase-btn\" data-tier=\"bar\">Purchase</button>\n                    </div>\n                    \n                    <div class=\"tier highlight\">\n                        <h3>Casino</h3>\n                        <p>For casino or venue use</p>\n                        <p class=\"price\">$299.99/month</p>\n                        <ul>\n                            <li>All Bar/Club features</li>\n                            <li>Super admin access</li>\n                            <li>API access</li>\n                            <li>White labeling</li>\n                            <li>Priority support</li>\n                        </ul>\n                        <button class=\"purchase-btn\" data-tier=\"casino\">Purchase</button>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"step\">\n                <h3>Step 2: Install the Application</h3>\n                <p>After purchasing a license, you'll receive a license key via email. You can then download and install the application.</p>\n                <button class=\"install-btn\" id=\"downloadApp\">Download Application</button>\n                <p><small>* A 10-day trial version will be available for testing before purchase.</small></p>\n                \n                <div id=\"downloadProgress\" style=\"display: none;\">\n                    <div class=\"progress-container\">\n                        <div class=\"progress-bar\" id=\"progressBar\"></div>\n                        <div class=\"progress-text\" id=\"progressText\">0%</div>\n                    </div>\n                    <div class=\"download-actions\">\n                        <div id=\"downloadStatus\">Preparing download...</div>\n                        <button id=\"cancelDownload\" class=\"install-btn\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"step\">\n                <h3>Step 3: Activate Your License</h3>\n                <p>After installation, you'll need to activate your license by entering the license key provided in your confirmation email.</p>\n                <p>If you've already purchased a license, you can download the application and activate it during setup.</p>\n            </div>\n            \n            <div class=\"license-confirmation\" id=\"licenseConfirmation\">\n                <h3>Thank You For Your Purchase!</h3>\n                <p>Your license key has been sent to your email address. You can also use the license key below to activate your software:</p>\n                <div class=\"license-key\" id=\"licenseKeyDisplay\">GSG-XXXX-XXXX-XXXX-XXXX</div>\n                <p>Please keep this key in a safe place for future reference.</p>\n                <button class=\"install-btn\" id=\"downloadAfterPurchase\">Download Now</button>\n            </div>\n            \n            <div class=\"download-stats\">\n                <h3>Download Statistics</h3>\n                <div class=\"stats-grid\">\n                    <div class=\"stat-item\">\n                        <div class=\"stat-value\">1,256</div>\n                        <div class=\"stat-label\">Total Downloads</div>\n                    </div>\n                    <div class=\"stat-item\">\n                        <div class=\"stat-value\">342</div>\n                        <div class=\"stat-label\">Active Users</div>\n                    </div>\n                    <div class=\"stat-item\">\n                        <div class=\"stat-value\">4.8/5</div>\n                        <div class=\"stat-label\">User Rating</div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"system-requirements\">\n                <h3>System Requirements</h3>\n                <ul>\n                    <li>Windows 10/11 or macOS 10.15+ or Linux</li>\n                    <li>4 GB RAM</li>\n                    <li>500 MB available storage</li>\n                    <li>Internet connection for license validation and live odds</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    \n    <!-- Payment Modal -->\n    <div class=\"modal-overlay\" id=\"paymentModalOverlay\"></div>\n    <div id=\"paymentModal\">\n        <button class=\"close-modal\" id=\"closePaymentModal\">×</button>\n        <h3 id=\"paymentModalTitle\">Complete Your Purchase</h3>\n        <div class=\"payment-form\">\n            <label for=\"fullName\">Full Name:</label>\n            <input type=\"text\" id=\"fullName\" required=\"\">\n            \n            <label for=\"emailAddress\">Email Address:</label>\n            <input type=\"email\" id=\"emailAddress\" required=\"\">\n            \n            <label for=\"businessName\">Business Name (for Bar/Casino licenses):</label>\n            <input type=\"text\" id=\"businessName\">\n            \n            <label for=\"paymentMethod\">Payment Method:</label>\n            <select id=\"paymentMethod\">\n                <option value=\"creditCard\">Credit Card</option>\n                <option value=\"paypal\">PayPal</option>\n            </select>\n            \n            <div id=\"creditCardFields\">\n                <label for=\"cardNumber\">Card Number:</label>\n                <input type=\"text\" id=\"cardNumber\" placeholder=\"XXXX XXXX XXXX XXXX\">\n                \n                <div style=\"display: flex; gap: 10px;\">\n                    <div style=\"flex: 1;\">\n                        <label for=\"expiryDate\">Expiry Date:</label>\n                        <input type=\"text\" id=\"expiryDate\" placeholder=\"MM/YY\">\n                    </div>\n                    <div style=\"flex: 1;\">\n                        <label for=\"cvv\">CVV:</label>\n                        <input type=\"text\" id=\"cvv\" placeholder=\"123\">\n                    </div>\n                </div>\n            </div>\n            \n            <div id=\"paypalFields\" style=\"display: none;\">\n                <p>You will be redirected to PayPal to complete your purchase after clicking \"Process Payment\".</p>\n                <input type=\"hidden\" id=\"paypalBusinessEmail\" value=\"your-company-paypal@example.com\">\n                <input type=\"hidden\" id=\"paypalItemName\" value=\"Greek Survivor Game License\">\n                <input type=\"hidden\" id=\"paypalCurrency\" value=\"USD\">\n            </div>\n            \n            <div>\n                <input type=\"checkbox\" id=\"termsAgreement\">\n                <label for=\"termsAgreement\">I agree to the Terms of Service and Privacy Policy</label>\n            </div>\n            \n            <button id=\"processPaymentBtn\">Process Payment</button>\n        </div>\n    </div>\n\n    [JS_CODE_0]\n    \n    <!-- Admin Console Access - Hidden by default -->\n    <div id=\"adminConsoleAccess\" style=\"text-align: center; margin-top: 30px; padding-top: 30px; border-top: 1px dashed rgba(0, 255, 0, 0.2); display: none;\">\n        <a href=\"#\" id=\"adminAccessLink\" style=\"color: #33FF33; font-size: 1em; text-decoration: none; padding: 8px 15px; border: 1px solid #33FF33; border-radius: 5px;\">Admin Console Access (Change PayPal Settings)</a>\n    </div>\n    \n    <!-- Hidden trigger area for admin access -->\n    <div id=\"hiddenAdminTrigger\" style=\"position: fixed; bottom: 0; right: 0; width: 20px; height: 20px; z-index: 1000; cursor: default;\"></div>\n    \n    <!-- Admin Console Modal -->\n    <div id=\"adminConsoleModal\" class=\"modal-overlay\" style=\"display: none;\">\n        <div class=\"password-container\" style=\"background-color: var(--dark-bg); border: 2px solid var(--neon-green); border-radius: 10px; padding: 30px; width: 90%; max-width: 500px; box-shadow: 0 0 20px rgba(0, 255, 0, 0.5); text-align: center;\">\n            <div class=\"password-title\">ADMIN ACCESS</div>\n            <p>Enter admin password to continue</p>\n            <input type=\"password\" id=\"adminPassword\" class=\"password-input\" placeholder=\"Enter Password\">\n            <button id=\"verifyPasswordBtn\" class=\"password-button\">LOGIN</button>\n            <p style=\"margin-top: 15px; font-size: 0.8em; color: #33FF33;\">Default password: \"admin123\"</p>\n        </div>\n    </div>\n    \n    <!-- Admin Settings Panel -->\n    <div id=\"adminSettingsPanel\" class=\"modal-overlay\" style=\"display: none;\">\n        <div style=\"background-color: var(--dark-bg); border: 2px solid var(--neon-green); border-radius: 10px; padding: 30px; width: 90%; max-width: 600px; box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);\">\n            <button class=\"close-modal\" id=\"closeAdminSettings\">×</button>\n            <h2 style=\"color: var(--neon-green); margin-top: 0;\">Payment Settings</h2>\n            \n            <div style=\"margin-bottom: 20px;\">\n                <h3 style=\"color: var(--neon-green);\">PayPal Settings</h3>\n                <div style=\"margin-bottom: 15px;\">\n                    <label style=\"display: block; margin-bottom: 5px; color: var(--terminal-green);\">PayPal Business Email (@synaaipayments):</label>\n                    <input type=\"email\" id=\"paypalBusinessEmail\" class=\"terminal-input\" style=\"width: 100%; padding: 10px; background-color: rgba(0, 0, 0, 0.3); border: 1px solid var(--neon-green); color: var(--terminal-green);\" placeholder=\"your-business@example.com\">\n                    <small style=\"display: block; margin-top: 5px; color: var(--terminal-green); opacity: 0.8;\">Enter the email associated with your PayPal business account to receive payments</small>\n                </div>\n                <div style=\"margin-bottom: 15px;\">\n                    <label style=\"display: block; margin-bottom: 5px; color: var(--terminal-green);\">PayPal Currency:</label>\n                    <select id=\"paypalCurrency\" class=\"terminal-input\" style=\"width: 100%; padding: 10px; background-color: rgba(0, 0, 0, 0.3); border: 1px solid var(--neon-green); color: var(--terminal-green);\">\n                        <option value=\"USD\">USD - US Dollar</option>\n                        <option value=\"EUR\">EUR - Euro</option>\n                        <option value=\"GBP\">GBP - British Pound</option>\n                        <option value=\"CAD\">CAD - Canadian Dollar</option>\n                        <option value=\"AUD\">AUD - Australian Dollar</option>\n                        <option value=\"JPY\">JPY - Japanese Yen</option>\n                    </select>\n                </div>\n            </div>\n            \n            <div style=\"margin-bottom: 20px;\">\n                <h3 style=\"color: var(--neon-green);\">License Tiers</h3>\n                <div style=\"margin-bottom: 15px;\">\n                    <label style=\"display: block; margin-bottom: 5px; color: var(--terminal-green);\">Personal License Price:</label>\n                    <input type=\"text\" id=\"personalPrice\" class=\"terminal-input\" style=\"width: 100%; padding: 10px; background-color: rgba(0, 0, 0, 0.3); border: 1px solid var(--neon-green); color: var(--terminal-green);\">\n                </div>\n                <div style=\"margin-bottom: 15px;\">\n                    <label style=\"display: block; margin-bottom: 5px; color: var(--terminal-green);\">Bar/Club License Price:</label>\n                    <input type=\"text\" id=\"barPrice\" class=\"terminal-input\" style=\"width: 100%; padding: 10px; background-color: rgba(0, 0, 0, 0.3); border: 1px solid var(--neon-green); color: var(--terminal-green);\">\n                </div>\n                <div style=\"margin-bottom: 15px;\">\n                    <label style=\"display: block; margin-bottom: 5px; color: var(--terminal-green);\">Casino License Price:</label>\n                    <input type=\"text\" id=\"casinoPrice\" class=\"terminal-input\" style=\"width: 100%; padding: 10px; background-color: rgba(0, 0, 0, 0.3); border: 1px solid var(--neon-green); color: var(--terminal-green);\">\n                </div>\n            </div>\n            \n            <div style=\"margin-bottom: 20px;\">\n                <h3 style=\"color: var(--neon-green);\">Admin Security</h3>\n                <div style=\"margin-bottom: 15px;\">\n                    <label style=\"display: block; margin-bottom: 5px; color: var(--terminal-green);\">Change Admin Password:</label>\n                    <input type=\"password\" id=\"newAdminPassword\" class=\"terminal-input\" style=\"width: 100%; padding: 10px; background-color: rgba(0, 0, 0, 0.3); border: 1px solid var(--neon-green); color: var(--terminal-green);\" placeholder=\"Enter new password\">\n                </div>\n                <div style=\"margin-bottom: 15px;\">\n                    <label style=\"display: block; margin-bottom: 5px; color: var(--terminal-green);\">Confirm Password:</label>\n                    <input type=\"password\" id=\"confirmAdminPassword\" class=\"terminal-input\" style=\"width: 100%; padding: 10px; background-color: rgba(0, 0, 0, 0.3); border: 1px solid var(--neon-green); color: var(--terminal-green);\" placeholder=\"Confirm new password\">\n                </div>\n            </div>\n            \n            <button id=\"saveAdminSettings\" class=\"install-btn\" style=\"background-color: var(--neon-green); color: black; border: none; padding: 12px 24px; cursor: pointer; margin-top: 20px;\">Save Settings</button>\n        </div>\n    </div>\n    \n    [JS_CODE_1]\n\n\n",
          "_customCSS": "",
          "alias": "code-editor",
          "_tags": [
            "Extension"
          ],
          "_name": "pro.custom-html",
          "_sourceTheme": "progressm5",
          "_anchor": "custom-html-1h",
          "_PHPplaceholders": [],
          "_JSplaceholders": [
            "<script>\n        // Integrated JavaScript for installer, licensing, and downloads\n        document.addEventListener('DOMContentLoaded', function() {\n            // Purchase buttons\n            const purchaseButtons = document.querySelectorAll('.purchase-btn');\n            purchaseButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    const tier = this.getAttribute('data-tier');\n                    openPaymentModal(tier);\n                });\n            });\n            \n            // Download button\n            const downloadBtn = document.getElementById('downloadApp');\n            downloadBtn.addEventListener('click', function() {\n                // Check if user has a valid license\n                const hasLicense = localStorage.getItem('gsgLicense');\n                if (hasLicense) {\n                    // Start download\n                    initiateDownload();\n                } else {\n                    // Offer trial\n                    if (confirm('Would you like to download the 10-day trial version?')) {\n                        // Start trial download\n                        initiateTrialDownload();\n                    } else {\n                        // Show purchase options\n                        alert('Please purchase a license to download the full version.');\n                    }\n                }\n            });\n            \n            // Download after purchase button\n            const downloadAfterPurchaseBtn = document.getElementById('downloadAfterPurchase');\n            if (downloadAfterPurchaseBtn) {\n                downloadAfterPurchaseBtn.addEventListener('click', function() {\n                    initiateDownload();\n                });\n            }\n            \n            // Cancel download button\n            const cancelDownloadBtn = document.getElementById('cancelDownload');\n            if (cancelDownloadBtn) {\n                cancelDownloadBtn.addEventListener('click', function() {\n                    cancelDownload();\n                });\n            }\n            \n            // Payment modal\n            const paymentModal = document.getElementById('paymentModal');\n            const paymentModalOverlay = document.getElementById('paymentModalOverlay');\n            const closePaymentModal = document.getElementById('closePaymentModal');\n            const paymentMethod = document.getElementById('paymentMethod');\n            const creditCardFields = document.getElementById('creditCardFields');\n            const paypalFields = document.getElementById('paypalFields');\n            \n            // Close payment modal\n            closePaymentModal.addEventListener('click', function() {\n                paymentModal.style.display = 'none';\n                paymentModalOverlay.style.display = 'none';\n            });\n            \n            // Toggle payment fields\n            paymentMethod.addEventListener('change', function() {\n                if (this.value === 'creditCard') {\n                    creditCardFields.style.display = 'block';\n                    paypalFields.style.display = 'none';\n                } else {\n                    creditCardFields.style.display = 'none';\n                    paypalFields.style.display = 'block';\n                }\n            });\n            \n            // Process payment\n            const processPaymentBtn = document.getElementById('processPaymentBtn');\n            processPaymentBtn.addEventListener('click', function() {\n                const fullName = document.getElementById('fullName').value;\n                const email = document.getElementById('emailAddress').value;\n                const termsAgreement = document.getElementById('termsAgreement').checked;\n                \n                if (!fullName || !email) {\n                    alert('Please fill in all required fields.');\n                    return;\n                }\n                \n                if (!termsAgreement) {\n                    alert('You must agree to the Terms of Service and Privacy Policy.');\n                    return;\n                }\n                \n                // Here you would normally process the payment with a payment gateway\n                // For demo purposes, we'll simulate a successful payment\n                \n                // Generate license key based on tier\n                const currentTier = paymentModal.getAttribute('data-tier');\n                let licenseKey;\n                \n                if (currentTier === 'personal') {\n                    licenseKey = 'GSG-PERSONAL-' + generateRandomString(12);\n                } else if (currentTier === 'bar') {\n                    licenseKey = 'GSG-BAR-' + generateRandomString(12);\n                } else {\n                    licenseKey = 'GSG-CASINO-' + generateRandomString(12);\n                }\n                \n                // Store license info\n                const licenseInfo = {\n                    licenseId: licenseKey,\n                    email: email,\n                    name: fullName,\n                    type: currentTier,\n                    created: new Date().toISOString(),\n                    expires: getExpiryDate(currentTier),\n                    status: 'active'\n                };\n                \n                // Store license locally (in production, this would be validated with a server)\n                localStorage.setItem('gsgLicense', JSON.stringify(licenseInfo));\n                \n                // Close payment modal\n                paymentModal.style.display = 'none';\n                paymentModalOverlay.style.display = 'none';\n                \n                // Show confirmation\n                const licenseConfirmation = document.getElementById('licenseConfirmation');\n                const licenseKeyDisplay = document.getElementById('licenseKeyDisplay');\n                \n                licenseKeyDisplay.textContent = licenseKey;\n                licenseConfirmation.style.display = 'block';\n                \n                // In a real implementation, you would trigger an email with the license key\n                console.log('Email sent with license key:', licenseKey);\n                \n                // Scroll to confirmation\n                licenseConfirmation.scrollIntoView({ behavior: 'smooth' });\n            });\n            \n            // Download-related functionality\n            let downloadInterval;\n            let progress = 0;\n            \n            function initiateDownload() {\n                // Show download progress UI\n                const downloadProgress = document.getElementById('downloadProgress');\n                const progressBar = document.getElementById('progressBar');\n                const progressText = document.getElementById('progressText');\n                const downloadStatus = document.getElementById('downloadStatus');\n                \n                downloadProgress.style.display = 'block';\n                progressBar.style.width = '0%';\n                progressText.textContent = '0%';\n                downloadStatus.textContent = 'Connecting to server...';\n                \n                // Simulate download progress\n                setTimeout(() => {\n                    downloadStatus.textContent = 'Downloading package...';\n                    \n                    downloadInterval = setInterval(() => {\n                        progress += Math.random() * 3;\n                        \n                        if (progress >= 100) {\n                            progress = 100;\n                            clearInterval(downloadInterval);\n                            downloadStatus.textContent = 'Download complete!';\n                            \n                            // Simulate file download\n                            setTimeout(() => {\n                                downloadStatus.textContent = 'Preparing installation...';\n                                \n                                setTimeout(() => {\n                                    // Create a dummy download\n                                    downloadDummyFile('GreekSurvivorGame-Setup.exe');\n                                    \n                                    downloadStatus.textContent = 'Installation file ready.';\n                                    \n                                    // Reset UI after a delay\n                                    setTimeout(() => {\n                                        downloadProgress.style.display = 'none';\n                                        progress = 0;\n                                    }, 3000);\n                                }, 1500);\n                            }, 1000);\n                        }\n                        \n                        progressBar.style.width = `${progress}%`;\n                        progressText.textContent = `${Math.round(progress)}%`;\n                    }, 200);\n                }, 1000);\n            }\n            \n            function initiateTrialDownload() {\n                // Create a trial license\n                const trialLicense = {\n                    licenseId: 'GSG-TRIAL-' + generateRandomString(12),\n                    email: 'trial@user.com',\n                    name: 'Trial User',\n                    type: 'trial',\n                    created: new Date().toISOString(),\n                    expires: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000).toISOString(), // 10 days\n                    status: 'active'\n                };\n                \n                // Store trial license\n                localStorage.setItem('gsgLicense', JSON.stringify(trialLicense));\n                \n                // Start download\n                alert('Trial download starting... Your trial will expire in 10 days.');\n                initiateDownload();\n            }\n            \n            function cancelDownload() {\n                clearInterval(downloadInterval);\n                const downloadProgress = document.getElementById('downloadProgress');\n                const downloadStatus = document.getElementById('downloadStatus');\n                \n                downloadStatus.textContent = 'Download cancelled.';\n                \n                setTimeout(() => {\n                    downloadProgress.style.display = 'none';\n                    progress = 0;\n                }, 1500);\n            }\n            \n            function downloadDummyFile(filename) {\n                // Create a dummy file with info about what to do next\n                const content = `Greek Survivor Game Installation Guide\n                \nThank you for downloading Greek Survivor Game!\n\n----------------------------------------\nIMPORTANT: This is a placeholder file.\n----------------------------------------\n\nIn a real installation, this would be the setup executable.\nSince this is a demo, here's what you would do next:\n\n1. Run the setup executable\n2. Follow the installation wizard\n3. Enter your license key when prompted\n4. Start enjoying Greek Survivor Game!\n\nYour license key is: ${JSON.parse(localStorage.getItem('gsgLicense') || '{}').licenseId || 'NO_LICENSE_FOUND'}\nLicense type: ${JSON.parse(localStorage.getItem('gsgLicense') || '{}').type || 'unknown'}\nExpires: ${new Date(JSON.parse(localStorage.getItem('gsgLicense') || '{}').expires || Date.now()).toLocaleDateString()}\n\nFor support, contact: support@greeksurvivorgame.com\n`;\n                \n                const blob = new Blob([content], { type: 'text/plain' });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = filename;\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                URL.revokeObjectURL(url);\n            }\n            \n            // Helper functions\n            function openPaymentModal(tier) {\n                const paymentModalTitle = document.getElementById('paymentModalTitle');\n                let tierName, tierPrice;\n                \n                if (tier === 'personal') {\n                    tierName = 'Personal License';\n                    tierPrice = '$29.99';\n                } else if (tier === 'bar') {\n                    tierName = 'Bar/Club License';\n                    tierPrice = '$99.99/month';\n                } else {\n                    tierName = 'Casino License';\n                    tierPrice = '$299.99/month';\n                }\n                \n                paymentModalTitle.textContent = `Complete Your Purchase: ${tierName} - ${tierPrice}`;\n                paymentModal.setAttribute('data-tier', tier);\n                \n                paymentModal.style.display = 'block';\n                paymentModalOverlay.style.display = 'block';\n            }\n            \n            function generateRandomString(length) {\n                const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n                let result = '';\n                for (let i = 0; i < length; i++) {\n                    result += chars.charAt(Math.floor(Math.random() * chars.length));\n                }\n                return result;\n            }\n            \n            function getExpiryDate(tier) {\n                const now = new Date();\n                \n                if (tier === 'personal') {\n                    // Personal licenses don't expire\n                    const lifetime = new Date(now);\n                    lifetime.setFullYear(lifetime.getFullYear() + 100); // Effectively lifetime\n                    return lifetime.toISOString();\n                } else {\n                    // Monthly licenses expire in 30 days\n                    const thirtyDays = new Date(now);\n                    thirtyDays.setDate(thirtyDays.getDate() + 30);\n                    return thirtyDays.toISOString();\n                }\n            }\n            \n            // License Management System\n            const LicenseSystem = {\n                // Verify a license key\n                verifyLicense: function(licenseKey, email) {\n                    // In a real system, this would validate with a server\n                    // For demo purposes, we'll do a simple check\n                    \n                    // Check if the key follows our pattern\n                    const licensePattern = /^GSG-(PERSONAL|BAR|CASINO|TRIAL)-[A-Z0-9]{12}$/;\n                    if (!licensePattern.test(licenseKey)) {\n                        return {\n                            valid: false,\n                            message: 'Invalid license key format'\n                        };\n                    }\n                    \n                    // Extract license type\n                    const match = licenseKey.match(/^GSG-(PERSONAL|BAR|CASINO|TRIAL)/);\n                    const licenseType = match ? match[1].toLowerCase() : null;\n                    \n                    if (!licenseType) {\n                        return {\n                            valid: false,\n                            message: 'Could not determine license type'\n                        };\n                    }\n                    \n                    // For demo, we'll consider all correctly formatted keys as valid\n                    return {\n                        valid: true,\n                        type: licenseType,\n                        message: 'License verified successfully',\n                        expiresAt: getExpiryDate(licenseType)\n                    };\n                },\n                \n                // Activate a license\n                activateLicense: function(licenseKey, email) {\n                    const verification = this.verifyLicense(licenseKey, email);\n                    \n                    if (!verification.valid) {\n                        return verification;\n                    }\n                    \n                    // Store the license information\n                    const licenseInfo = {\n                        licenseId: licenseKey,\n                        email: email,\n                        created: new Date().toISOString(),\n                        expires: verification.expiresAt,\n                        type: verification.type,\n                        status: 'active'\n                    };\n                    \n                    localStorage.setItem('gsgLicense', JSON.stringify(licenseInfo));\n                    \n                    return {\n                        valid: true,\n                        message: 'License activated successfully',\n                        license: licenseInfo\n                    };\n                },\n                \n                // Check if license exists and is valid\n                hasValidLicense: function() {\n                    const license = this.getLicenseInfo();\n                    if (!license) return false;\n                    \n                    // Check expiration\n                    const now = new Date();\n                    const expires = new Date(license.expires);\n                    \n                    if (now > expires) {\n                        // License has expired\n                        license.status = 'expired';\n                        localStorage.setItem('gsgLicense', JSON.stringify(license));\n                        return false;\n                    }\n                    \n                    return license.status === 'active';\n                },\n                \n                // Get license info\n                getLicenseInfo: function() {\n                    const licenseData = localStorage.getItem('gsgLicense');\n                    if (!licenseData) return null;\n                    \n                    try {\n                        return JSON.parse(licenseData);\n                    } catch (e) {\n                        console.error('Error parsing license data:', e);\n                        return null;\n                    }\n                },\n                \n                // Deactivate license\n                deactivateLicense: function() {\n                    localStorage.removeItem('gsgLicense');\n                    return { success: true, message: 'License deactivated' };\n                }\n            };\n            \n            // Check for existing license on page load\n            if (LicenseSystem.hasValidLicense()) {\n                console.log('Valid license found:', LicenseSystem.getLicenseInfo());\n            } else {\n                console.log('No valid license found');\n            }\n            \n            // PWA Installation Support\n            let deferredPrompt;\n            \n            window.addEventListener('beforeinstallprompt', (e) => {\n                // Prevent Chrome 67 and earlier from automatically showing the prompt\n                e.preventDefault();\n                // Stash the event so it can be triggered later\n                deferredPrompt = e;\n                // Update UI to notify the user they can add to home screen\n                const installButton = document.getElementById('installAppBtn');\n                if (installButton) {\n                    installButton.style.display = 'block';\n                    \n                    installButton.addEventListener('click', (e) => {\n                        // Show the install prompt\n                        deferredPrompt.prompt();\n                        // Wait for the user to respond to the prompt\n                        deferredPrompt.userChoice.then((choiceResult) => {\n                            if (choiceResult.outcome === 'accepted') {\n                                console.log('User accepted the install prompt');\n                                // Hide the install button after installation\n                                installButton.style.display = 'none';\n                            } else {\n                                console.log('User dismissed the install prompt');\n                            }\n                            deferredPrompt = null;\n                        });\n                    });\n                }\n            });\n            \n            // Installation was successful\n            window.addEventListener('appinstalled', (evt) => {\n                console.log('Greek Survivor Game installed successfully!');\n                // Hide the install button after installation\n                const installButton = document.getElementById('installAppBtn');\n                if (installButton) {\n                    installButton.style.display = 'none';\n                }\n            });\n        });\n    </script>",
            "<script>\n        // Admin console functionality\n        document.addEventListener('DOMContentLoaded', function() {\n            // Hidden admin access triggers\n            const hiddenTrigger = document.getElementById('hiddenAdminTrigger');\n            const adminConsoleAccess = document.getElementById('adminConsoleAccess');\n            \n            // Secret click trigger\n            if (hiddenTrigger) {\n                let clickCount = 0;\n                hiddenTrigger.addEventListener('click', function(e) {\n                    clickCount++;\n                    if (clickCount >= 5) {\n                        adminConsoleAccess.style.display = 'block';\n                        clickCount = 0;\n                    }\n                });\n            }\n            \n            // Secret keyboard combination (Ctrl+Alt+P)\n            document.addEventListener('keydown', function(e) {\n                if (e.ctrlKey && e.altKey && e.key === 'p') {\n                    e.preventDefault(); // Prevent browser print dialog\n                    adminConsoleAccess.style.display = 'block';\n                }\n            });\n            \n            // Admin console access\n            const adminAccessLink = document.getElementById('adminAccessLink');\n            const adminConsoleModal = document.getElementById('adminConsoleModal');\n            const adminSettingsPanel = document.getElementById('adminSettingsPanel');\n            const verifyPasswordBtn = document.getElementById('verifyPasswordBtn');\n            const closeAdminSettings = document.getElementById('closeAdminSettings');\n            const saveAdminSettings = document.getElementById('saveAdminSettings');\n            \n            // Initialize PayPal settings from localStorage or defaults\n            function loadAdminSettings() {\n                document.getElementById('paypalBusinessEmail').value = localStorage.getItem('paypalBusinessEmail') || 'your-company-paypal@example.com';\n                document.getElementById('paypalCurrency').value = localStorage.getItem('paypalCurrency') || 'USD';\n                document.getElementById('personalPrice').value = localStorage.getItem('personalPrice') || '$29.99';\n                document.getElementById('barPrice').value = localStorage.getItem('barPrice') || '$99.99/month';\n                document.getElementById('casinoPrice').value = localStorage.getItem('casinoPrice') || '$299.99/month';\n                \n                // Set the hidden PayPal values in the form\n                document.getElementById('paypalBusinessEmail').value = localStorage.getItem('paypalBusinessEmail') || 'your-company-paypal@example.com';\n                \n                // Update prices in the UI\n                const personalPriceElements = document.querySelectorAll('.tier:nth-child(1) .price');\n                const barPriceElements = document.querySelectorAll('.tier:nth-child(2) .price');\n                const casinoPriceElements = document.querySelectorAll('.tier:nth-child(3) .price');\n                \n                personalPriceElements.forEach(el => { el.textContent = localStorage.getItem('personalPrice') || '$29.99'; });\n                barPriceElements.forEach(el => { el.textContent = localStorage.getItem('barPrice') || '$99.99/month'; });\n                casinoPriceElements.forEach(el => { el.textContent = localStorage.getItem('casinoPrice') || '$299.99/month'; });\n            }\n            \n            // Admin link click\n            adminAccessLink.addEventListener('click', function(e) {\n                e.preventDefault();\n                adminConsoleModal.style.display = 'flex';\n            });\n            \n            // Verify password\n            verifyPasswordBtn.addEventListener('click', function() {\n                const password = document.getElementById('adminPassword').value;\n                const correctPassword = localStorage.getItem('adminPassword') || 'admin123';\n                \n                if (password === correctPassword) {\n                    adminConsoleModal.style.display = 'none';\n                    adminSettingsPanel.style.display = 'flex';\n                    loadAdminSettings();\n                } else {\n                    alert('Invalid password!');\n                }\n            });\n            \n            // Close admin settings\n            closeAdminSettings.addEventListener('click', function() {\n                adminSettingsPanel.style.display = 'none';\n            });\n            \n            // Save admin settings\n            saveAdminSettings.addEventListener('click', function() {\n                const paypalEmail = document.getElementById('paypalBusinessEmail').value;\n                const paypalCurrency = document.getElementById('paypalCurrency').value;\n                const personalPrice = document.getElementById('personalPrice').value;\n                const barPrice = document.getElementById('barPrice').value;\n                const casinoPrice = document.getElementById('casinoPrice').value;\n                const newPassword = document.getElementById('newAdminPassword').value;\n                const confirmPassword = document.getElementById('confirmAdminPassword').value;\n                \n                // Validate PayPal email\n                if (!paypalEmail.includes('@')) {\n                    alert('Please enter a valid PayPal business email address');\n                    return;\n                }\n                \n                // Save payment settings\n                localStorage.setItem('paypalBusinessEmail', paypalEmail);\n                localStorage.setItem('paypalCurrency', paypalCurrency);\n                localStorage.setItem('personalPrice', personalPrice);\n                localStorage.setItem('barPrice', barPrice);\n                localStorage.setItem('casinoPrice', casinoPrice);\n                \n                // Update hidden PayPal values in the form\n                document.getElementById('paypalBusinessEmail').value = paypalEmail;\n                \n                // Update prices in the UI\n                const personalPriceElements = document.querySelectorAll('.tier:nth-child(1) .price');\n                const barPriceElements = document.querySelectorAll('.tier:nth-child(2) .price');\n                const casinoPriceElements = document.querySelectorAll('.tier:nth-child(3) .price');\n                \n                personalPriceElements.forEach(el => { el.textContent = personalPrice; });\n                barPriceElements.forEach(el => { el.textContent = barPrice; });\n                casinoPriceElements.forEach(el => { el.textContent = casinoPrice; });\n                \n                // Change password if provided\n                if (newPassword) {\n                    if (newPassword !== confirmPassword) {\n                        alert('Passwords do not match!');\n                        return;\n                    }\n                    localStorage.setItem('adminPassword', newPassword);\n                    document.getElementById('newAdminPassword').value = '';\n                    document.getElementById('confirmAdminPassword').value = '';\n                }\n                \n                alert('Settings saved successfully!');\n                adminSettingsPanel.style.display = 'none';\n            });\n            \n            // Add key press event for admin password field\n            document.getElementById('adminPassword').addEventListener('keypress', function(e) {\n                if (e.key === 'Enter') {\n                    verifyPasswordBtn.click();\n                }\n            });\n        });\n    </script>"
          ]
        },
        {
          "alias": false,
          "_styles": {
            "& when not (@fullScreen)": {
              "padding-top": "(@paddingTop * 1rem)",
              "padding-bottom": "(@paddingBottom * 1rem)"
            },
            "& when (@bg-type = 'color')": {
              "background-color": "@bg-value"
            },
            "& when (@bg-type = 'image')": {
              "background-image": "url(@bg-value)"
            },
            ".mbr-fallback-image.disabled": {
              "display": "none"
            },
            ".mbr-fallback-image": {
              "display": "block",
              "background-size": "cover",
              "background-position": "center center",
              "width": "100%",
              "height": "100%",
              "position": "absolute",
              "top": "0",
              "& when (@bg-type = 'video')": {
                "background-image": "url(@fallBackImage)"
              }
            },
            ".items-wrap": {
              "justify-content": "center",
              ".card": {
                "justify-content": "flex-end"
              }
            },
            ".title-wrapper": {
              ".mbr-section-title": {
                "margin-bottom": "32px",
                "@media (max-width: 992px)": {
                  "text-align": "center"
                }
              }
            },
            ".nav-wrapper": {
              "margin-bottom": "32px",
              ".list": {
                "display": "inline-flex",
                "flex-wrap": "wrap",
                "justify-content": "center",
                "margin": "0",
                "padding": "0",
                "list-style-type": "none",
                ".item-wrap": {
                  "padding": "5px 10px",
                  "margin-bottom": "0",
                  "transition": "all 0.3s ease-in-out",
                  "&:hover, &:focus": {
                    "color": "@active"
                  }
                }
              }
            },
            ".mbr-copy": {
              "margin-bottom": "0",
              "@media (max-width: 992px)": {
                "text-align": "center"
              },
              "color": "#aef800",
              "text-align": "center"
            },
            ".mbr-section-title": {
              "color": "#ffffff"
            },
            ".list, .nav-wrapper": {
              "color": "#ffffff",
              "text-align": "right"
            },
            ".list, .item-wrap, .nav-wrapper": {
              "text-align": "center"
            }
          },
          "_name": "footer01",
          "_sourceTheme": "tradem5",
          "_customHTML": "<section data-bs-version=\"5.1\" class=\"footer01 tradem5\" group=\"Footer\" global=\"\" once=\"footers\" mbr-class=\"{\n    'mbr-fullscreen': fullScreen,\n    'mbr-parallax-background': bg.parallax}\">\n    <mbr-parameters>\n        <header>Size</header>\n        <input type=\"checkbox\" title=\"Full Screen\" name=\"fullScreen\">\n        <input type=\"checkbox\" title=\"Full Width\" name=\"fullWidth\">\n        <input type=\"range\" inline=\"\" title=\"Top\" name=\"paddingTop\" min=\"0\" max=\"12\" step=\"1\" value=\"2\" condition=\"fullScreen == false\">\n        <input type=\"range\" inline=\"\" title=\"Bottom\" name=\"paddingBottom\" min=\"0\" max=\"12\" step=\"1\" value=\"2\" condition=\"fullScreen == false\">\n        <header>Show/Hide</header>\n        <input type=\"checkbox\" title=\"Title\" name=\"showTitle\">\n        <input type=\"checkbox\" title=\"Navigation\" name=\"showNav\">\n        <input type=\"color\" title=\"Active Color\" value=\"#bcfe1e\" name=\"active\" condition=\"showNav\" selected=\"\">\n        <input type=\"checkbox\" title=\"Copyright\" name=\"showCopy\" checked=\"\">\n        <header>Background</header>\n        <fieldset type=\"background\" name=\"bg\" parallax=\"\">\n            <input type=\"image\" title=\"Image\" value=\"@PROJECT_PATH@/assets/images/background1.jpg\">\n            <input type=\"color\" title=\"Color\" value=\"#292739\" selected=\"\">\n        </fieldset>\n        <header condition=\"bg.type === 'video'\">Fallback Image</header>\n        <input type=\"image\" title=\"Fallback Image\" value=\"@PROJECT_PATH@/assets/images/background1.jpg\" name=\"fallBackImage\" condition=\"bg.type === 'video'\">\n        <input type=\"checkbox\" title=\"Overlay\" name=\"overlay\" condition=\"bg.type !== 'color'\" checked=\"\">\n        <input type=\"color\" title=\"Overlay Color\" name=\"overlayColor\" value=\"#080813\" condition=\"overlay &amp;&amp; bg.type !== 'color'\">\n        <input type=\"range\" inline=\"\" title=\"Opacity\" name=\"overlayOpacity\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.7\" condition=\"overlay &amp;&amp; bg.type !== 'color'\">\n    </mbr-parameters>\n\n    <div class=\"mbr-fallback-image disabled\" mbr-if=\"bg.type == 'video'\"></div>\n    <div class=\"mbr-overlay\" mbr-if=\"overlay &amp;&amp; bg.type !== 'color'\" opacity=\"{{overlayOpacity}}\" bg-color=\"{{overlayColor}}\"></div>\n\n    <div mbr-class=\"{'container': !fullWidth, 'container-fluid': fullWidth}\">\n        <div class=\"row items-wrap\">\n            <div class=\"col-12 col-lg-6 card\" mbr-if=\"showTitle\">\n                <div class=\"title-wrapper\">\n                    <a href=\"#\">\n                        <h2 class=\"mbr-section-title mbr-fonts-style\" data-app-selector=\".mbr-section-title\" mbr-theme-style=\"display-1\">\n                            <b>TRADEM5</b>\n                        </h2>\n                    </a>\n                </div>\n            </div>\n            <div class=\"col-12 col-lg-6 card\" mbr-if=\"showNav\">\n                <div class=\"nav-wrapper\">\n                    <ul class=\"list mbr-fonts-style\" mbr-theme-style=\"display-4\" data-app-selector=\".list, .item-wrap, .nav-wrapper\" data-multiline=\"\" mbr-article=\"\">\n                        <li class=\"item-wrap\">Home</li>\n                        <li class=\"item-wrap\">Clients</li>\n                        <li class=\"item-wrap\">Pricing</li>\n                        <li class=\"item-wrap\">Privacy Policy</li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"col-12\" mbr-if=\"showCopy\">\n                <h2 class=\"mbr-copy mbr-fonts-style\" data-app-selector=\".mbr-copy\" mbr-theme-style=\"display-4\">\n                    © Copyright 2025 SYNAAI- All Rights Reserved\n                </h2>\n            </div>\n        </div>\n    </div>\n</section>",
          "_isUserblock": true,
          "_cid": "uHAmLwNbRM",
          "_protectedParams": [],
          "_global": true,
          "_once": "footers",
          "_params": {},
          "_anchor": "footer01-1g"
        }
      ]
    }
  }
}